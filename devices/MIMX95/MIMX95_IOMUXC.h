/*
** ###################################################################
**     Processors:          MIMX95_cm33
**
**
**     Abstract:
**         CMSIS Peripheral Access Layer for MIMX95_cm33
**
**     Copyright 1997-2016 Freescale Semiconductor, Inc.
**     Copyright 2016-2023 NXP
**     All rights reserved.
**
**     SPDX-License-Identifier: BSD-3-Clause
**
**     http:                 www.nxp.com
**     mail:                 support@nxp.com
**
**     Revisions:
**
** ###################################################################
*/

/*!
 * @file MIMX95_IOMUXC.h
 * @version 0.0
 * @date 0-00-00
 * @brief CMSIS Peripheral Access Layer for MIMX95_IOMUXC
 *
 * CMSIS Peripheral Access Layer for MIMX95
 */

/* Prevention from multiple including the same memory map */
#if !defined(MIMX95_IOMUXC_H_)  /* Check if memory map has not been already included */
#define MIMX95_IOMUXC_H_

#include "MIMX95_COMMON.h"

/* ----------------------------------------------------------------------------
   -- IOMUXC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup IOMUXC_Peripheral_Access_Layer IOMUXC Peripheral Access Layer
 * @{
 */

/** IOMUXC - Register Layout Typedef */
typedef struct {
  __IO uint32_t SW_MUX_CTL_PAD_DAP_TDI;            /**< SW_MUX_CTL_PAD_DAP_TDI SW MUX Control Register, offset: 0x0 */
  __IO uint32_t SW_MUX_CTL_PAD_DAP_TMS_SWDIO;      /**< SW_MUX_CTL_PAD_DAP_TMS_SWDIO SW MUX Control Register, offset: 0x4 */
  __IO uint32_t SW_MUX_CTL_PAD_DAP_TCLK_SWCLK;     /**< SW_MUX_CTL_PAD_DAP_TCLK_SWCLK SW MUX Control Register, offset: 0x8 */
  __IO uint32_t SW_MUX_CTL_PAD_DAP_TDO_TRACESWO;   /**< SW_MUX_CTL_PAD_DAP_TDO_TRACESWO SW MUX Control Register, offset: 0xC */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO00;          /**< SW_MUX_CTL_PAD_GPIO_IO00 SW MUX Control Register, offset: 0x10 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO01;          /**< SW_MUX_CTL_PAD_GPIO_IO01 SW MUX Control Register, offset: 0x14 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO02;          /**< SW_MUX_CTL_PAD_GPIO_IO02 SW MUX Control Register, offset: 0x18 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO03;          /**< SW_MUX_CTL_PAD_GPIO_IO03 SW MUX Control Register, offset: 0x1C */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO04;          /**< SW_MUX_CTL_PAD_GPIO_IO04 SW MUX Control Register, offset: 0x20 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO05;          /**< SW_MUX_CTL_PAD_GPIO_IO05 SW MUX Control Register, offset: 0x24 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO06;          /**< SW_MUX_CTL_PAD_GPIO_IO06 SW MUX Control Register, offset: 0x28 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO07;          /**< SW_MUX_CTL_PAD_GPIO_IO07 SW MUX Control Register, offset: 0x2C */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO08;          /**< SW_MUX_CTL_PAD_GPIO_IO08 SW MUX Control Register, offset: 0x30 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO09;          /**< SW_MUX_CTL_PAD_GPIO_IO09 SW MUX Control Register, offset: 0x34 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO10;          /**< SW_MUX_CTL_PAD_GPIO_IO10 SW MUX Control Register, offset: 0x38 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO11;          /**< SW_MUX_CTL_PAD_GPIO_IO11 SW MUX Control Register, offset: 0x3C */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO12;          /**< SW_MUX_CTL_PAD_GPIO_IO12 SW MUX Control Register, offset: 0x40 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO13;          /**< SW_MUX_CTL_PAD_GPIO_IO13 SW MUX Control Register, offset: 0x44 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO14;          /**< SW_MUX_CTL_PAD_GPIO_IO14 SW MUX Control Register, offset: 0x48 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO15;          /**< SW_MUX_CTL_PAD_GPIO_IO15 SW MUX Control Register, offset: 0x4C */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO16;          /**< SW_MUX_CTL_PAD_GPIO_IO16 SW MUX Control Register, offset: 0x50 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO17;          /**< SW_MUX_CTL_PAD_GPIO_IO17 SW MUX Control Register, offset: 0x54 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO18;          /**< SW_MUX_CTL_PAD_GPIO_IO18 SW MUX Control Register, offset: 0x58 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO19;          /**< SW_MUX_CTL_PAD_GPIO_IO19 SW MUX Control Register, offset: 0x5C */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO20;          /**< SW_MUX_CTL_PAD_GPIO_IO20 SW MUX Control Register, offset: 0x60 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO21;          /**< SW_MUX_CTL_PAD_GPIO_IO21 SW MUX Control Register, offset: 0x64 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO22;          /**< SW_MUX_CTL_PAD_GPIO_IO22 SW MUX Control Register, offset: 0x68 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO23;          /**< SW_MUX_CTL_PAD_GPIO_IO23 SW MUX Control Register, offset: 0x6C */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO24;          /**< SW_MUX_CTL_PAD_GPIO_IO24 SW MUX Control Register, offset: 0x70 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO25;          /**< SW_MUX_CTL_PAD_GPIO_IO25 SW MUX Control Register, offset: 0x74 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO26;          /**< SW_MUX_CTL_PAD_GPIO_IO26 SW MUX Control Register, offset: 0x78 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO27;          /**< SW_MUX_CTL_PAD_GPIO_IO27 SW MUX Control Register, offset: 0x7C */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO28;          /**< SW_MUX_CTL_PAD_GPIO_IO28 SW MUX Control Register, offset: 0x80 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO29;          /**< SW_MUX_CTL_PAD_GPIO_IO29 SW MUX Control Register, offset: 0x84 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO30;          /**< SW_MUX_CTL_PAD_GPIO_IO30 SW MUX Control Register, offset: 0x88 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO31;          /**< SW_MUX_CTL_PAD_GPIO_IO31 SW MUX Control Register, offset: 0x8C */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO32;          /**< SW_MUX_CTL_PAD_GPIO_IO32 SW MUX Control Register, offset: 0x90 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO33;          /**< SW_MUX_CTL_PAD_GPIO_IO33 SW MUX Control Register, offset: 0x94 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO34;          /**< SW_MUX_CTL_PAD_GPIO_IO34 SW MUX Control Register, offset: 0x98 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO35;          /**< SW_MUX_CTL_PAD_GPIO_IO35 SW MUX Control Register, offset: 0x9C */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO36;          /**< SW_MUX_CTL_PAD_GPIO_IO36 SW MUX Control Register, offset: 0xA0 */
  __IO uint32_t SW_MUX_CTL_PAD_GPIO_IO37;          /**< SW_MUX_CTL_PAD_GPIO_IO37 SW MUX Control Register, offset: 0xA4 */
  __IO uint32_t SW_MUX_CTL_PAD_CCM_CLKO1;          /**< SW_MUX_CTL_PAD_CCM_CLKO1 SW MUX Control Register, offset: 0xA8 */
  __IO uint32_t SW_MUX_CTL_PAD_CCM_CLKO2;          /**< SW_MUX_CTL_PAD_CCM_CLKO2 SW MUX Control Register, offset: 0xAC */
  __IO uint32_t SW_MUX_CTL_PAD_CCM_CLKO3;          /**< SW_MUX_CTL_PAD_CCM_CLKO3 SW MUX Control Register, offset: 0xB0 */
  __IO uint32_t SW_MUX_CTL_PAD_CCM_CLKO4;          /**< SW_MUX_CTL_PAD_CCM_CLKO4 SW MUX Control Register, offset: 0xB4 */
  __IO uint32_t SW_MUX_CTL_PAD_ENET1_MDC;          /**< SW_MUX_CTL_PAD_ENET1_MDC SW MUX Control Register, offset: 0xB8 */
  __IO uint32_t SW_MUX_CTL_PAD_ENET1_MDIO;         /**< SW_MUX_CTL_PAD_ENET1_MDIO SW MUX Control Register, offset: 0xBC */
  __IO uint32_t SW_MUX_CTL_PAD_ENET1_TD3;          /**< SW_MUX_CTL_PAD_ENET1_TD3 SW MUX Control Register, offset: 0xC0 */
  __IO uint32_t SW_MUX_CTL_PAD_ENET1_TD2;          /**< SW_MUX_CTL_PAD_ENET1_TD2 SW MUX Control Register, offset: 0xC4 */
  __IO uint32_t SW_MUX_CTL_PAD_ENET1_TD1;          /**< SW_MUX_CTL_PAD_ENET1_TD1 SW MUX Control Register, offset: 0xC8 */
  __IO uint32_t SW_MUX_CTL_PAD_ENET1_TD0;          /**< SW_MUX_CTL_PAD_ENET1_TD0 SW MUX Control Register, offset: 0xCC */
  __IO uint32_t SW_MUX_CTL_PAD_ENET1_TX_CTL;       /**< SW_MUX_CTL_PAD_ENET1_TX_CTL SW MUX Control Register, offset: 0xD0 */
  __IO uint32_t SW_MUX_CTL_PAD_ENET1_TXC;          /**< SW_MUX_CTL_PAD_ENET1_TXC SW MUX Control Register, offset: 0xD4 */
  __IO uint32_t SW_MUX_CTL_PAD_ENET1_RX_CTL;       /**< SW_MUX_CTL_PAD_ENET1_RX_CTL SW MUX Control Register, offset: 0xD8 */
  __IO uint32_t SW_MUX_CTL_PAD_ENET1_RXC;          /**< SW_MUX_CTL_PAD_ENET1_RXC SW MUX Control Register, offset: 0xDC */
  __IO uint32_t SW_MUX_CTL_PAD_ENET1_RD0;          /**< SW_MUX_CTL_PAD_ENET1_RD0 SW MUX Control Register, offset: 0xE0 */
  __IO uint32_t SW_MUX_CTL_PAD_ENET1_RD1;          /**< SW_MUX_CTL_PAD_ENET1_RD1 SW MUX Control Register, offset: 0xE4 */
  __IO uint32_t SW_MUX_CTL_PAD_ENET1_RD2;          /**< SW_MUX_CTL_PAD_ENET1_RD2 SW MUX Control Register, offset: 0xE8 */
  __IO uint32_t SW_MUX_CTL_PAD_ENET1_RD3;          /**< SW_MUX_CTL_PAD_ENET1_RD3 SW MUX Control Register, offset: 0xEC */
  __IO uint32_t SW_MUX_CTL_PAD_ENET2_MDC;          /**< SW_MUX_CTL_PAD_ENET2_MDC SW MUX Control Register, offset: 0xF0 */
  __IO uint32_t SW_MUX_CTL_PAD_ENET2_MDIO;         /**< SW_MUX_CTL_PAD_ENET2_MDIO SW MUX Control Register, offset: 0xF4 */
  __IO uint32_t SW_MUX_CTL_PAD_ENET2_TD3;          /**< SW_MUX_CTL_PAD_ENET2_TD3 SW MUX Control Register, offset: 0xF8 */
  __IO uint32_t SW_MUX_CTL_PAD_ENET2_TD2;          /**< SW_MUX_CTL_PAD_ENET2_TD2 SW MUX Control Register, offset: 0xFC */
  __IO uint32_t SW_MUX_CTL_PAD_ENET2_TD1;          /**< SW_MUX_CTL_PAD_ENET2_TD1 SW MUX Control Register, offset: 0x100 */
  __IO uint32_t SW_MUX_CTL_PAD_ENET2_TD0;          /**< SW_MUX_CTL_PAD_ENET2_TD0 SW MUX Control Register, offset: 0x104 */
  __IO uint32_t SW_MUX_CTL_PAD_ENET2_TX_CTL;       /**< SW_MUX_CTL_PAD_ENET2_TX_CTL SW MUX Control Register, offset: 0x108 */
  __IO uint32_t SW_MUX_CTL_PAD_ENET2_TXC;          /**< SW_MUX_CTL_PAD_ENET2_TXC SW MUX Control Register, offset: 0x10C */
  __IO uint32_t SW_MUX_CTL_PAD_ENET2_RX_CTL;       /**< SW_MUX_CTL_PAD_ENET2_RX_CTL SW MUX Control Register, offset: 0x110 */
  __IO uint32_t SW_MUX_CTL_PAD_ENET2_RXC;          /**< SW_MUX_CTL_PAD_ENET2_RXC SW MUX Control Register, offset: 0x114 */
  __IO uint32_t SW_MUX_CTL_PAD_ENET2_RD0;          /**< SW_MUX_CTL_PAD_ENET2_RD0 SW MUX Control Register, offset: 0x118 */
  __IO uint32_t SW_MUX_CTL_PAD_ENET2_RD1;          /**< SW_MUX_CTL_PAD_ENET2_RD1 SW MUX Control Register, offset: 0x11C */
  __IO uint32_t SW_MUX_CTL_PAD_ENET2_RD2;          /**< SW_MUX_CTL_PAD_ENET2_RD2 SW MUX Control Register, offset: 0x120 */
  __IO uint32_t SW_MUX_CTL_PAD_ENET2_RD3;          /**< SW_MUX_CTL_PAD_ENET2_RD3 SW MUX Control Register, offset: 0x124 */
  __IO uint32_t SW_MUX_CTL_PAD_SD1_CLK;            /**< SW_MUX_CTL_PAD_SD1_CLK SW MUX Control Register, offset: 0x128 */
  __IO uint32_t SW_MUX_CTL_PAD_SD1_CMD;            /**< SW_MUX_CTL_PAD_SD1_CMD SW MUX Control Register, offset: 0x12C */
  __IO uint32_t SW_MUX_CTL_PAD_SD1_DATA0;          /**< SW_MUX_CTL_PAD_SD1_DATA0 SW MUX Control Register, offset: 0x130 */
  __IO uint32_t SW_MUX_CTL_PAD_SD1_DATA1;          /**< SW_MUX_CTL_PAD_SD1_DATA1 SW MUX Control Register, offset: 0x134 */
  __IO uint32_t SW_MUX_CTL_PAD_SD1_DATA2;          /**< SW_MUX_CTL_PAD_SD1_DATA2 SW MUX Control Register, offset: 0x138 */
  __IO uint32_t SW_MUX_CTL_PAD_SD1_DATA3;          /**< SW_MUX_CTL_PAD_SD1_DATA3 SW MUX Control Register, offset: 0x13C */
  __IO uint32_t SW_MUX_CTL_PAD_SD1_DATA4;          /**< SW_MUX_CTL_PAD_SD1_DATA4 SW MUX Control Register, offset: 0x140 */
  __IO uint32_t SW_MUX_CTL_PAD_SD1_DATA5;          /**< SW_MUX_CTL_PAD_SD1_DATA5 SW MUX Control Register, offset: 0x144 */
  __IO uint32_t SW_MUX_CTL_PAD_SD1_DATA6;          /**< SW_MUX_CTL_PAD_SD1_DATA6 SW MUX Control Register, offset: 0x148 */
  __IO uint32_t SW_MUX_CTL_PAD_SD1_DATA7;          /**< SW_MUX_CTL_PAD_SD1_DATA7 SW MUX Control Register, offset: 0x14C */
  __IO uint32_t SW_MUX_CTL_PAD_SD1_STROBE;         /**< SW_MUX_CTL_PAD_SD1_STROBE SW MUX Control Register, offset: 0x150 */
  __IO uint32_t SW_MUX_CTL_PAD_SD2_VSELECT;        /**< SW_MUX_CTL_PAD_SD2_VSELECT SW MUX Control Register, offset: 0x154 */
  __IO uint32_t SW_MUX_CTL_PAD_SD3_CLK;            /**< SW_MUX_CTL_PAD_SD3_CLK SW MUX Control Register, offset: 0x158 */
  __IO uint32_t SW_MUX_CTL_PAD_SD3_CMD;            /**< SW_MUX_CTL_PAD_SD3_CMD SW MUX Control Register, offset: 0x15C */
  __IO uint32_t SW_MUX_CTL_PAD_SD3_DATA0;          /**< SW_MUX_CTL_PAD_SD3_DATA0 SW MUX Control Register, offset: 0x160 */
  __IO uint32_t SW_MUX_CTL_PAD_SD3_DATA1;          /**< SW_MUX_CTL_PAD_SD3_DATA1 SW MUX Control Register, offset: 0x164 */
  __IO uint32_t SW_MUX_CTL_PAD_SD3_DATA2;          /**< SW_MUX_CTL_PAD_SD3_DATA2 SW MUX Control Register, offset: 0x168 */
  __IO uint32_t SW_MUX_CTL_PAD_SD3_DATA3;          /**< SW_MUX_CTL_PAD_SD3_DATA3 SW MUX Control Register, offset: 0x16C */
  __IO uint32_t SW_MUX_CTL_PAD_XSPI1_DATA0;        /**< SW_MUX_CTL_PAD_XSPI1_DATA0 SW MUX Control Register, offset: 0x170 */
  __IO uint32_t SW_MUX_CTL_PAD_XSPI1_DATA1;        /**< SW_MUX_CTL_PAD_XSPI1_DATA1 SW MUX Control Register, offset: 0x174 */
  __IO uint32_t SW_MUX_CTL_PAD_XSPI1_DATA2;        /**< SW_MUX_CTL_PAD_XSPI1_DATA2 SW MUX Control Register, offset: 0x178 */
  __IO uint32_t SW_MUX_CTL_PAD_XSPI1_DATA3;        /**< SW_MUX_CTL_PAD_XSPI1_DATA3 SW MUX Control Register, offset: 0x17C */
  __IO uint32_t SW_MUX_CTL_PAD_XSPI1_DATA4;        /**< SW_MUX_CTL_PAD_XSPI1_DATA4 SW MUX Control Register, offset: 0x180 */
  __IO uint32_t SW_MUX_CTL_PAD_XSPI1_DATA5;        /**< SW_MUX_CTL_PAD_XSPI1_DATA5 SW MUX Control Register, offset: 0x184 */
  __IO uint32_t SW_MUX_CTL_PAD_XSPI1_DATA6;        /**< SW_MUX_CTL_PAD_XSPI1_DATA6 SW MUX Control Register, offset: 0x188 */
  __IO uint32_t SW_MUX_CTL_PAD_XSPI1_DATA7;        /**< SW_MUX_CTL_PAD_XSPI1_DATA7 SW MUX Control Register, offset: 0x18C */
  __IO uint32_t SW_MUX_CTL_PAD_XSPI1_DQS;          /**< SW_MUX_CTL_PAD_XSPI1_DQS SW MUX Control Register, offset: 0x190 */
  __IO uint32_t SW_MUX_CTL_PAD_XSPI1_SCLK;         /**< SW_MUX_CTL_PAD_XSPI1_SCLK SW MUX Control Register, offset: 0x194 */
  __IO uint32_t SW_MUX_CTL_PAD_XSPI1_SS0_B;        /**< SW_MUX_CTL_PAD_XSPI1_SS0_B SW MUX Control Register, offset: 0x198 */
  __IO uint32_t SW_MUX_CTL_PAD_XSPI1_SS1_B;        /**< SW_MUX_CTL_PAD_XSPI1_SS1_B SW MUX Control Register, offset: 0x19C */
  __IO uint32_t SW_MUX_CTL_PAD_SD2_CD_B;           /**< SW_MUX_CTL_PAD_SD2_CD_B SW MUX Control Register, offset: 0x1A0 */
  __IO uint32_t SW_MUX_CTL_PAD_SD2_CLK;            /**< SW_MUX_CTL_PAD_SD2_CLK SW MUX Control Register, offset: 0x1A4 */
  __IO uint32_t SW_MUX_CTL_PAD_SD2_CMD;            /**< SW_MUX_CTL_PAD_SD2_CMD SW MUX Control Register, offset: 0x1A8 */
  __IO uint32_t SW_MUX_CTL_PAD_SD2_DATA0;          /**< SW_MUX_CTL_PAD_SD2_DATA0 SW MUX Control Register, offset: 0x1AC */
  __IO uint32_t SW_MUX_CTL_PAD_SD2_DATA1;          /**< SW_MUX_CTL_PAD_SD2_DATA1 SW MUX Control Register, offset: 0x1B0 */
  __IO uint32_t SW_MUX_CTL_PAD_SD2_DATA2;          /**< SW_MUX_CTL_PAD_SD2_DATA2 SW MUX Control Register, offset: 0x1B4 */
  __IO uint32_t SW_MUX_CTL_PAD_SD2_DATA3;          /**< SW_MUX_CTL_PAD_SD2_DATA3 SW MUX Control Register, offset: 0x1B8 */
  __IO uint32_t SW_MUX_CTL_PAD_SD2_RESET_B;        /**< SW_MUX_CTL_PAD_SD2_RESET_B SW MUX Control Register, offset: 0x1BC */
  __IO uint32_t SW_MUX_CTL_PAD_I2C1_SCL;           /**< SW_MUX_CTL_PAD_I2C1_SCL SW MUX Control Register, offset: 0x1C0 */
  __IO uint32_t SW_MUX_CTL_PAD_I2C1_SDA;           /**< SW_MUX_CTL_PAD_I2C1_SDA SW MUX Control Register, offset: 0x1C4 */
  __IO uint32_t SW_MUX_CTL_PAD_I2C2_SCL;           /**< SW_MUX_CTL_PAD_I2C2_SCL SW MUX Control Register, offset: 0x1C8 */
  __IO uint32_t SW_MUX_CTL_PAD_I2C2_SDA;           /**< SW_MUX_CTL_PAD_I2C2_SDA SW MUX Control Register, offset: 0x1CC */
  __IO uint32_t SW_MUX_CTL_PAD_UART1_RXD;          /**< SW_MUX_CTL_PAD_UART1_RXD SW MUX Control Register, offset: 0x1D0 */
  __IO uint32_t SW_MUX_CTL_PAD_UART1_TXD;          /**< SW_MUX_CTL_PAD_UART1_TXD SW MUX Control Register, offset: 0x1D4 */
  __IO uint32_t SW_MUX_CTL_PAD_UART2_RXD;          /**< SW_MUX_CTL_PAD_UART2_RXD SW MUX Control Register, offset: 0x1D8 */
  __IO uint32_t SW_MUX_CTL_PAD_UART2_TXD;          /**< SW_MUX_CTL_PAD_UART2_TXD SW MUX Control Register, offset: 0x1DC */
  __IO uint32_t SW_MUX_CTL_PAD_PDM_CLK;            /**< SW_MUX_CTL_PAD_PDM_CLK SW MUX Control Register, offset: 0x1E0 */
  __IO uint32_t SW_MUX_CTL_PAD_PDM_BIT_STREAM0;    /**< SW_MUX_CTL_PAD_PDM_BIT_STREAM0 SW MUX Control Register, offset: 0x1E4 */
  __IO uint32_t SW_MUX_CTL_PAD_PDM_BIT_STREAM1;    /**< SW_MUX_CTL_PAD_PDM_BIT_STREAM1 SW MUX Control Register, offset: 0x1E8 */
  __IO uint32_t SW_MUX_CTL_PAD_SAI1_TXFS;          /**< SW_MUX_CTL_PAD_SAI1_TXFS SW MUX Control Register, offset: 0x1EC */
  __IO uint32_t SW_MUX_CTL_PAD_SAI1_TXC;           /**< SW_MUX_CTL_PAD_SAI1_TXC SW MUX Control Register, offset: 0x1F0 */
  __IO uint32_t SW_MUX_CTL_PAD_SAI1_TXD0;          /**< SW_MUX_CTL_PAD_SAI1_TXD0 SW MUX Control Register, offset: 0x1F4 */
  __IO uint32_t SW_MUX_CTL_PAD_SAI1_RXD0;          /**< SW_MUX_CTL_PAD_SAI1_RXD0 SW MUX Control Register, offset: 0x1F8 */
  __IO uint32_t SW_MUX_CTL_PAD_WDOG_ANY;           /**< SW_MUX_CTL_PAD_WDOG_ANY SW MUX Control Register, offset: 0x1FC */
  __IO uint32_t SW_MUX_CTL_PAD_FCCU_ERR0;          /**< SW_MUX_CTL_PAD_FCCU_ERR0 SW MUX Control Register, offset: 0x200 */
  __IO uint32_t SW_PAD_CTL_PAD_DAP_TDI;            /**< SW_PAD_CTL_PAD_DAP_TDI SW PAD Control Register, offset: 0x204 */
  __IO uint32_t SW_PAD_CTL_PAD_DAP_TMS_SWDIO;      /**< SW_PAD_CTL_PAD_DAP_TMS_SWDIO SW PAD Control Register, offset: 0x208 */
  __IO uint32_t SW_PAD_CTL_PAD_DAP_TCLK_SWCLK;     /**< SW_PAD_CTL_PAD_DAP_TCLK_SWCLK SW PAD Control Register, offset: 0x20C */
  __IO uint32_t SW_PAD_CTL_PAD_DAP_TDO_TRACESWO;   /**< SW_PAD_CTL_PAD_DAP_TDO_TRACESWO SW PAD Control Register, offset: 0x210 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO00;          /**< SW_PAD_CTL_PAD_GPIO_IO00 SW PAD Control Register, offset: 0x214 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO01;          /**< SW_PAD_CTL_PAD_GPIO_IO01 SW PAD Control Register, offset: 0x218 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO02;          /**< SW_PAD_CTL_PAD_GPIO_IO02 SW PAD Control Register, offset: 0x21C */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO03;          /**< SW_PAD_CTL_PAD_GPIO_IO03 SW PAD Control Register, offset: 0x220 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO04;          /**< SW_PAD_CTL_PAD_GPIO_IO04 SW PAD Control Register, offset: 0x224 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO05;          /**< SW_PAD_CTL_PAD_GPIO_IO05 SW PAD Control Register, offset: 0x228 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO06;          /**< SW_PAD_CTL_PAD_GPIO_IO06 SW PAD Control Register, offset: 0x22C */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO07;          /**< SW_PAD_CTL_PAD_GPIO_IO07 SW PAD Control Register, offset: 0x230 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO08;          /**< SW_PAD_CTL_PAD_GPIO_IO08 SW PAD Control Register, offset: 0x234 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO09;          /**< SW_PAD_CTL_PAD_GPIO_IO09 SW PAD Control Register, offset: 0x238 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO10;          /**< SW_PAD_CTL_PAD_GPIO_IO10 SW PAD Control Register, offset: 0x23C */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO11;          /**< SW_PAD_CTL_PAD_GPIO_IO11 SW PAD Control Register, offset: 0x240 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO12;          /**< SW_PAD_CTL_PAD_GPIO_IO12 SW PAD Control Register, offset: 0x244 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO13;          /**< SW_PAD_CTL_PAD_GPIO_IO13 SW PAD Control Register, offset: 0x248 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO14;          /**< SW_PAD_CTL_PAD_GPIO_IO14 SW PAD Control Register, offset: 0x24C */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO15;          /**< SW_PAD_CTL_PAD_GPIO_IO15 SW PAD Control Register, offset: 0x250 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO16;          /**< SW_PAD_CTL_PAD_GPIO_IO16 SW PAD Control Register, offset: 0x254 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO17;          /**< SW_PAD_CTL_PAD_GPIO_IO17 SW PAD Control Register, offset: 0x258 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO18;          /**< SW_PAD_CTL_PAD_GPIO_IO18 SW PAD Control Register, offset: 0x25C */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO19;          /**< SW_PAD_CTL_PAD_GPIO_IO19 SW PAD Control Register, offset: 0x260 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO20;          /**< SW_PAD_CTL_PAD_GPIO_IO20 SW PAD Control Register, offset: 0x264 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO21;          /**< SW_PAD_CTL_PAD_GPIO_IO21 SW PAD Control Register, offset: 0x268 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO22;          /**< SW_PAD_CTL_PAD_GPIO_IO22 SW PAD Control Register, offset: 0x26C */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO23;          /**< SW_PAD_CTL_PAD_GPIO_IO23 SW PAD Control Register, offset: 0x270 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO24;          /**< SW_PAD_CTL_PAD_GPIO_IO24 SW PAD Control Register, offset: 0x274 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO25;          /**< SW_PAD_CTL_PAD_GPIO_IO25 SW PAD Control Register, offset: 0x278 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO26;          /**< SW_PAD_CTL_PAD_GPIO_IO26 SW PAD Control Register, offset: 0x27C */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO27;          /**< SW_PAD_CTL_PAD_GPIO_IO27 SW PAD Control Register, offset: 0x280 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO28;          /**< SW_PAD_CTL_PAD_GPIO_IO28 SW PAD Control Register, offset: 0x284 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO29;          /**< SW_PAD_CTL_PAD_GPIO_IO29 SW PAD Control Register, offset: 0x288 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO30;          /**< SW_PAD_CTL_PAD_GPIO_IO30 SW PAD Control Register, offset: 0x28C */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO31;          /**< SW_PAD_CTL_PAD_GPIO_IO31 SW PAD Control Register, offset: 0x290 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO32;          /**< SW_PAD_CTL_PAD_GPIO_IO32 SW PAD Control Register, offset: 0x294 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO33;          /**< SW_PAD_CTL_PAD_GPIO_IO33 SW PAD Control Register, offset: 0x298 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO34;          /**< SW_PAD_CTL_PAD_GPIO_IO34 SW PAD Control Register, offset: 0x29C */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO35;          /**< SW_PAD_CTL_PAD_GPIO_IO35 SW PAD Control Register, offset: 0x2A0 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO36;          /**< SW_PAD_CTL_PAD_GPIO_IO36 SW PAD Control Register, offset: 0x2A4 */
  __IO uint32_t SW_PAD_CTL_PAD_GPIO_IO37;          /**< SW_PAD_CTL_PAD_GPIO_IO37 SW PAD Control Register, offset: 0x2A8 */
  __IO uint32_t SW_PAD_CTL_PAD_CCM_CLKO1;          /**< SW_PAD_CTL_PAD_CCM_CLKO1 SW PAD Control Register, offset: 0x2AC */
  __IO uint32_t SW_PAD_CTL_PAD_CCM_CLKO2;          /**< SW_PAD_CTL_PAD_CCM_CLKO2 SW PAD Control Register, offset: 0x2B0 */
  __IO uint32_t SW_PAD_CTL_PAD_CCM_CLKO3;          /**< SW_PAD_CTL_PAD_CCM_CLKO3 SW PAD Control Register, offset: 0x2B4 */
  __IO uint32_t SW_PAD_CTL_PAD_CCM_CLKO4;          /**< SW_PAD_CTL_PAD_CCM_CLKO4 SW PAD Control Register, offset: 0x2B8 */
  __IO uint32_t SW_PAD_CTL_PAD_ENET1_MDC;          /**< SW_PAD_CTL_PAD_ENET1_MDC SW PAD Control Register, offset: 0x2BC */
  __IO uint32_t SW_PAD_CTL_PAD_ENET1_MDIO;         /**< SW_PAD_CTL_PAD_ENET1_MDIO SW PAD Control Register, offset: 0x2C0 */
  __IO uint32_t SW_PAD_CTL_PAD_ENET1_TD3;          /**< SW_PAD_CTL_PAD_ENET1_TD3 SW PAD Control Register, offset: 0x2C4 */
  __IO uint32_t SW_PAD_CTL_PAD_ENET1_TD2;          /**< SW_PAD_CTL_PAD_ENET1_TD2 SW PAD Control Register, offset: 0x2C8 */
  __IO uint32_t SW_PAD_CTL_PAD_ENET1_TD1;          /**< SW_PAD_CTL_PAD_ENET1_TD1 SW PAD Control Register, offset: 0x2CC */
  __IO uint32_t SW_PAD_CTL_PAD_ENET1_TD0;          /**< SW_PAD_CTL_PAD_ENET1_TD0 SW PAD Control Register, offset: 0x2D0 */
  __IO uint32_t SW_PAD_CTL_PAD_ENET1_TX_CTL;       /**< SW_PAD_CTL_PAD_ENET1_TX_CTL SW PAD Control Register, offset: 0x2D4 */
  __IO uint32_t SW_PAD_CTL_PAD_ENET1_TXC;          /**< SW_PAD_CTL_PAD_ENET1_TXC SW PAD Control Register, offset: 0x2D8 */
  __IO uint32_t SW_PAD_CTL_PAD_ENET1_RX_CTL;       /**< SW_PAD_CTL_PAD_ENET1_RX_CTL SW PAD Control Register, offset: 0x2DC */
  __IO uint32_t SW_PAD_CTL_PAD_ENET1_RXC;          /**< SW_PAD_CTL_PAD_ENET1_RXC SW PAD Control Register, offset: 0x2E0 */
  __IO uint32_t SW_PAD_CTL_PAD_ENET1_RD0;          /**< SW_PAD_CTL_PAD_ENET1_RD0 SW PAD Control Register, offset: 0x2E4 */
  __IO uint32_t SW_PAD_CTL_PAD_ENET1_RD1;          /**< SW_PAD_CTL_PAD_ENET1_RD1 SW PAD Control Register, offset: 0x2E8 */
  __IO uint32_t SW_PAD_CTL_PAD_ENET1_RD2;          /**< SW_PAD_CTL_PAD_ENET1_RD2 SW PAD Control Register, offset: 0x2EC */
  __IO uint32_t SW_PAD_CTL_PAD_ENET1_RD3;          /**< SW_PAD_CTL_PAD_ENET1_RD3 SW PAD Control Register, offset: 0x2F0 */
  __IO uint32_t SW_PAD_CTL_PAD_ENET2_MDC;          /**< SW_PAD_CTL_PAD_ENET2_MDC SW PAD Control Register, offset: 0x2F4 */
  __IO uint32_t SW_PAD_CTL_PAD_ENET2_MDIO;         /**< SW_PAD_CTL_PAD_ENET2_MDIO SW PAD Control Register, offset: 0x2F8 */
  __IO uint32_t SW_PAD_CTL_PAD_ENET2_TD3;          /**< SW_PAD_CTL_PAD_ENET2_TD3 SW PAD Control Register, offset: 0x2FC */
  __IO uint32_t SW_PAD_CTL_PAD_ENET2_TD2;          /**< SW_PAD_CTL_PAD_ENET2_TD2 SW PAD Control Register, offset: 0x300 */
  __IO uint32_t SW_PAD_CTL_PAD_ENET2_TD1;          /**< SW_PAD_CTL_PAD_ENET2_TD1 SW PAD Control Register, offset: 0x304 */
  __IO uint32_t SW_PAD_CTL_PAD_ENET2_TD0;          /**< SW_PAD_CTL_PAD_ENET2_TD0 SW PAD Control Register, offset: 0x308 */
  __IO uint32_t SW_PAD_CTL_PAD_ENET2_TX_CTL;       /**< SW_PAD_CTL_PAD_ENET2_TX_CTL SW PAD Control Register, offset: 0x30C */
  __IO uint32_t SW_PAD_CTL_PAD_ENET2_TXC;          /**< SW_PAD_CTL_PAD_ENET2_TXC SW PAD Control Register, offset: 0x310 */
  __IO uint32_t SW_PAD_CTL_PAD_ENET2_RX_CTL;       /**< SW_PAD_CTL_PAD_ENET2_RX_CTL SW PAD Control Register, offset: 0x314 */
  __IO uint32_t SW_PAD_CTL_PAD_ENET2_RXC;          /**< SW_PAD_CTL_PAD_ENET2_RXC SW PAD Control Register, offset: 0x318 */
  __IO uint32_t SW_PAD_CTL_PAD_ENET2_RD0;          /**< SW_PAD_CTL_PAD_ENET2_RD0 SW PAD Control Register, offset: 0x31C */
  __IO uint32_t SW_PAD_CTL_PAD_ENET2_RD1;          /**< SW_PAD_CTL_PAD_ENET2_RD1 SW PAD Control Register, offset: 0x320 */
  __IO uint32_t SW_PAD_CTL_PAD_ENET2_RD2;          /**< SW_PAD_CTL_PAD_ENET2_RD2 SW PAD Control Register, offset: 0x324 */
  __IO uint32_t SW_PAD_CTL_PAD_ENET2_RD3;          /**< SW_PAD_CTL_PAD_ENET2_RD3 SW PAD Control Register, offset: 0x328 */
  __IO uint32_t SW_PAD_CTL_PAD_SD1_CLK;            /**< SW_PAD_CTL_PAD_SD1_CLK SW PAD Control Register, offset: 0x32C */
  __IO uint32_t SW_PAD_CTL_PAD_SD1_CMD;            /**< SW_PAD_CTL_PAD_SD1_CMD SW PAD Control Register, offset: 0x330 */
  __IO uint32_t SW_PAD_CTL_PAD_SD1_DATA0;          /**< SW_PAD_CTL_PAD_SD1_DATA0 SW PAD Control Register, offset: 0x334 */
  __IO uint32_t SW_PAD_CTL_PAD_SD1_DATA1;          /**< SW_PAD_CTL_PAD_SD1_DATA1 SW PAD Control Register, offset: 0x338 */
  __IO uint32_t SW_PAD_CTL_PAD_SD1_DATA2;          /**< SW_PAD_CTL_PAD_SD1_DATA2 SW PAD Control Register, offset: 0x33C */
  __IO uint32_t SW_PAD_CTL_PAD_SD1_DATA3;          /**< SW_PAD_CTL_PAD_SD1_DATA3 SW PAD Control Register, offset: 0x340 */
  __IO uint32_t SW_PAD_CTL_PAD_SD1_DATA4;          /**< SW_PAD_CTL_PAD_SD1_DATA4 SW PAD Control Register, offset: 0x344 */
  __IO uint32_t SW_PAD_CTL_PAD_SD1_DATA5;          /**< SW_PAD_CTL_PAD_SD1_DATA5 SW PAD Control Register, offset: 0x348 */
  __IO uint32_t SW_PAD_CTL_PAD_SD1_DATA6;          /**< SW_PAD_CTL_PAD_SD1_DATA6 SW PAD Control Register, offset: 0x34C */
  __IO uint32_t SW_PAD_CTL_PAD_SD1_DATA7;          /**< SW_PAD_CTL_PAD_SD1_DATA7 SW PAD Control Register, offset: 0x350 */
  __IO uint32_t SW_PAD_CTL_PAD_SD1_STROBE;         /**< SW_PAD_CTL_PAD_SD1_STROBE SW PAD Control Register, offset: 0x354 */
  __IO uint32_t SW_PAD_CTL_PAD_SD2_VSELECT;        /**< SW_PAD_CTL_PAD_SD2_VSELECT SW PAD Control Register, offset: 0x358 */
  __IO uint32_t SW_PAD_CTL_PAD_SD3_CLK;            /**< SW_PAD_CTL_PAD_SD3_CLK SW PAD Control Register, offset: 0x35C */
  __IO uint32_t SW_PAD_CTL_PAD_SD3_CMD;            /**< SW_PAD_CTL_PAD_SD3_CMD SW PAD Control Register, offset: 0x360 */
  __IO uint32_t SW_PAD_CTL_PAD_SD3_DATA0;          /**< SW_PAD_CTL_PAD_SD3_DATA0 SW PAD Control Register, offset: 0x364 */
  __IO uint32_t SW_PAD_CTL_PAD_SD3_DATA1;          /**< SW_PAD_CTL_PAD_SD3_DATA1 SW PAD Control Register, offset: 0x368 */
  __IO uint32_t SW_PAD_CTL_PAD_SD3_DATA2;          /**< SW_PAD_CTL_PAD_SD3_DATA2 SW PAD Control Register, offset: 0x36C */
  __IO uint32_t SW_PAD_CTL_PAD_SD3_DATA3;          /**< SW_PAD_CTL_PAD_SD3_DATA3 SW PAD Control Register, offset: 0x370 */
  __IO uint32_t SW_PAD_CTL_PAD_XSPI1_DATA0;        /**< SW_PAD_CTL_PAD_XSPI1_DATA0 SW PAD Control Register, offset: 0x374 */
  __IO uint32_t SW_PAD_CTL_PAD_XSPI1_DATA1;        /**< SW_PAD_CTL_PAD_XSPI1_DATA1 SW PAD Control Register, offset: 0x378 */
  __IO uint32_t SW_PAD_CTL_PAD_XSPI1_DATA2;        /**< SW_PAD_CTL_PAD_XSPI1_DATA2 SW PAD Control Register, offset: 0x37C */
  __IO uint32_t SW_PAD_CTL_PAD_XSPI1_DATA3;        /**< SW_PAD_CTL_PAD_XSPI1_DATA3 SW PAD Control Register, offset: 0x380 */
  __IO uint32_t SW_PAD_CTL_PAD_XSPI1_DATA4;        /**< SW_PAD_CTL_PAD_XSPI1_DATA4 SW PAD Control Register, offset: 0x384 */
  __IO uint32_t SW_PAD_CTL_PAD_XSPI1_DATA5;        /**< SW_PAD_CTL_PAD_XSPI1_DATA5 SW PAD Control Register, offset: 0x388 */
  __IO uint32_t SW_PAD_CTL_PAD_XSPI1_DATA6;        /**< SW_PAD_CTL_PAD_XSPI1_DATA6 SW PAD Control Register, offset: 0x38C */
  __IO uint32_t SW_PAD_CTL_PAD_XSPI1_DATA7;        /**< SW_PAD_CTL_PAD_XSPI1_DATA7 SW PAD Control Register, offset: 0x390 */
  __IO uint32_t SW_PAD_CTL_PAD_XSPI1_DQS;          /**< SW_PAD_CTL_PAD_XSPI1_DQS SW PAD Control Register, offset: 0x394 */
  __IO uint32_t SW_PAD_CTL_PAD_XSPI1_SCLK;         /**< SW_PAD_CTL_PAD_XSPI1_SCLK SW PAD Control Register, offset: 0x398 */
  __IO uint32_t SW_PAD_CTL_PAD_XSPI1_SS0_B;        /**< SW_PAD_CTL_PAD_XSPI1_SS0_B SW PAD Control Register, offset: 0x39C */
  __IO uint32_t SW_PAD_CTL_PAD_XSPI1_SS1_B;        /**< SW_PAD_CTL_PAD_XSPI1_SS1_B SW PAD Control Register, offset: 0x3A0 */
  __IO uint32_t SW_PAD_CTL_PAD_SD2_CD_B;           /**< SW_PAD_CTL_PAD_SD2_CD_B SW PAD Control Register, offset: 0x3A4 */
  __IO uint32_t SW_PAD_CTL_PAD_SD2_CLK;            /**< SW_PAD_CTL_PAD_SD2_CLK SW PAD Control Register, offset: 0x3A8 */
  __IO uint32_t SW_PAD_CTL_PAD_SD2_CMD;            /**< SW_PAD_CTL_PAD_SD2_CMD SW PAD Control Register, offset: 0x3AC */
  __IO uint32_t SW_PAD_CTL_PAD_SD2_DATA0;          /**< SW_PAD_CTL_PAD_SD2_DATA0 SW PAD Control Register, offset: 0x3B0 */
  __IO uint32_t SW_PAD_CTL_PAD_SD2_DATA1;          /**< SW_PAD_CTL_PAD_SD2_DATA1 SW PAD Control Register, offset: 0x3B4 */
  __IO uint32_t SW_PAD_CTL_PAD_SD2_DATA2;          /**< SW_PAD_CTL_PAD_SD2_DATA2 SW PAD Control Register, offset: 0x3B8 */
  __IO uint32_t SW_PAD_CTL_PAD_SD2_DATA3;          /**< SW_PAD_CTL_PAD_SD2_DATA3 SW PAD Control Register, offset: 0x3BC */
  __IO uint32_t SW_PAD_CTL_PAD_SD2_RESET_B;        /**< SW_PAD_CTL_PAD_SD2_RESET_B SW PAD Control Register, offset: 0x3C0 */
  __IO uint32_t SW_PAD_CTL_PAD_I2C1_SCL;           /**< SW_PAD_CTL_PAD_I2C1_SCL SW PAD Control Register, offset: 0x3C4 */
  __IO uint32_t SW_PAD_CTL_PAD_I2C1_SDA;           /**< SW_PAD_CTL_PAD_I2C1_SDA SW PAD Control Register, offset: 0x3C8 */
  __IO uint32_t SW_PAD_CTL_PAD_I2C2_SCL;           /**< SW_PAD_CTL_PAD_I2C2_SCL SW PAD Control Register, offset: 0x3CC */
  __IO uint32_t SW_PAD_CTL_PAD_I2C2_SDA;           /**< SW_PAD_CTL_PAD_I2C2_SDA SW PAD Control Register, offset: 0x3D0 */
  __IO uint32_t SW_PAD_CTL_PAD_UART1_RXD;          /**< SW_PAD_CTL_PAD_UART1_RXD SW PAD Control Register, offset: 0x3D4 */
  __IO uint32_t SW_PAD_CTL_PAD_UART1_TXD;          /**< SW_PAD_CTL_PAD_UART1_TXD SW PAD Control Register, offset: 0x3D8 */
  __IO uint32_t SW_PAD_CTL_PAD_UART2_RXD;          /**< SW_PAD_CTL_PAD_UART2_RXD SW PAD Control Register, offset: 0x3DC */
  __IO uint32_t SW_PAD_CTL_PAD_UART2_TXD;          /**< SW_PAD_CTL_PAD_UART2_TXD SW PAD Control Register, offset: 0x3E0 */
  __IO uint32_t SW_PAD_CTL_PAD_PDM_CLK;            /**< SW_PAD_CTL_PAD_PDM_CLK SW PAD Control Register, offset: 0x3E4 */
  __IO uint32_t SW_PAD_CTL_PAD_PDM_BIT_STREAM0;    /**< SW_PAD_CTL_PAD_PDM_BIT_STREAM0 SW PAD Control Register, offset: 0x3E8 */
  __IO uint32_t SW_PAD_CTL_PAD_PDM_BIT_STREAM1;    /**< SW_PAD_CTL_PAD_PDM_BIT_STREAM1 SW PAD Control Register, offset: 0x3EC */
  __IO uint32_t SW_PAD_CTL_PAD_SAI1_TXFS;          /**< SW_PAD_CTL_PAD_SAI1_TXFS SW PAD Control Register, offset: 0x3F0 */
  __IO uint32_t SW_PAD_CTL_PAD_SAI1_TXC;           /**< SW_PAD_CTL_PAD_SAI1_TXC SW PAD Control Register, offset: 0x3F4 */
  __IO uint32_t SW_PAD_CTL_PAD_SAI1_TXD0;          /**< SW_PAD_CTL_PAD_SAI1_TXD0 SW PAD Control Register, offset: 0x3F8 */
  __IO uint32_t SW_PAD_CTL_PAD_SAI1_RXD0;          /**< SW_PAD_CTL_PAD_SAI1_RXD0 SW PAD Control Register, offset: 0x3FC */
  __IO uint32_t SW_PAD_CTL_PAD_WDOG_ANY;           /**< SW_PAD_CTL_PAD_WDOG_ANY SW PAD Control Register, offset: 0x400 */
  __IO uint32_t SW_PAD_CTL_PAD_FCCU_ERR0;          /**< SW_PAD_CTL_PAD_FCCU_ERR0 SW PAD Control Register, offset: 0x404 */
  __IO uint32_t CAN1_IPP_IND_CANRX_SELECT_INPUT;   /**< CAN1_IPP_IND_CANRX_SELECT_INPUT DAISY Register, offset: 0x408 */
  __IO uint32_t PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_0; /**< PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_0 DAISY Register, offset: 0x40C */
  __IO uint32_t PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_1; /**< PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_1 DAISY Register, offset: 0x410 */
  __IO uint32_t PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_2; /**< PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_2 DAISY Register, offset: 0x414 */
  __IO uint32_t PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_3; /**< PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_3 DAISY Register, offset: 0x418 */
  __IO uint32_t SAI1_IPP_IND_SAI_MCLK_SELECT_INPUT; /**< SAI1_IPP_IND_SAI_MCLK_SELECT_INPUT DAISY Register, offset: 0x41C */
  __IO uint32_t EXT1_CLK_SELECT_INPUT;             /**< EXT1_CLK_SELECT_INPUT DAISY Register, offset: 0x420 */
  __IO uint32_t NETC_CMPLX_EMDC_IN_SELECT_INPUT;   /**< NETC_CMPLX_EMDC_IN_SELECT_INPUT DAISY Register, offset: 0x424 */
  __IO uint32_t NETC_CMPLX_EMDIO_IN_SELECT_INPUT;  /**< NETC_CMPLX_EMDIO_IN_SELECT_INPUT DAISY Register, offset: 0x428 */
  __IO uint32_t NETC_CMPLX_ETH0_RMII_RX_ER_SELECT_INPUT; /**< NETC_CMPLX_ETH0_RMII_RX_ER_SELECT_INPUT DAISY Register, offset: 0x42C */
  __IO uint32_t NETC_CMPLX_TMR_1588_TRIG1_SELECT_INPUT; /**< NETC_CMPLX_TMR_1588_TRIG1_SELECT_INPUT DAISY Register, offset: 0x430 */
  __IO uint32_t NETC_CMPLX_TMR_1588_TRIG2_SELECT_INPUT; /**< NETC_CMPLX_TMR_1588_TRIG2_SELECT_INPUT DAISY Register, offset: 0x434 */
  __IO uint32_t SAI2_IPP_IND_SAI_RXDATA_SELECT_INPUT_6; /**< SAI2_IPP_IND_SAI_RXDATA_SELECT_INPUT_6 DAISY Register, offset: 0x438 */
  __IO uint32_t SAI2_IPP_IND_SAI_RXDATA_SELECT_INPUT_7; /**< SAI2_IPP_IND_SAI_RXDATA_SELECT_INPUT_7 DAISY Register, offset: 0x43C */
  __IO uint32_t CAN2_IPP_IND_CANRX_SELECT_INPUT;   /**< CAN2_IPP_IND_CANRX_SELECT_INPUT DAISY Register, offset: 0x440 */
  __IO uint32_t CAN3_IPP_IND_CANRX_SELECT_INPUT;   /**< CAN3_IPP_IND_CANRX_SELECT_INPUT DAISY Register, offset: 0x444 */
  __IO uint32_t CAN4_IPP_IND_CANRX_SELECT_INPUT;   /**< CAN4_IPP_IND_CANRX_SELECT_INPUT DAISY Register, offset: 0x448 */
  __IO uint32_t CAN5_IPP_IND_CANRX_SELECT_INPUT;   /**< CAN5_IPP_IND_CANRX_SELECT_INPUT DAISY Register, offset: 0x44C */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_26; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_26 DAISY Register, offset: 0x450 */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_27; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_27 DAISY Register, offset: 0x454 */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_30; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_30 DAISY Register, offset: 0x458 */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_31; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_31 DAISY Register, offset: 0x45C */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_0; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_0 DAISY Register, offset: 0x460 */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_1; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_1 DAISY Register, offset: 0x464 */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_2; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_2 DAISY Register, offset: 0x468 */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_3; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_3 DAISY Register, offset: 0x46C */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_4; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_4 DAISY Register, offset: 0x470 */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_5; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_5 DAISY Register, offset: 0x474 */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_6; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_6 DAISY Register, offset: 0x478 */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_7; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_7 DAISY Register, offset: 0x47C */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_8; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_8 DAISY Register, offset: 0x480 */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_9; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_9 DAISY Register, offset: 0x484 */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_10; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_10 DAISY Register, offset: 0x488 */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_11; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_11 DAISY Register, offset: 0x48C */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_12; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_12 DAISY Register, offset: 0x490 */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_13; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_13 DAISY Register, offset: 0x494 */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_14; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_14 DAISY Register, offset: 0x498 */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_15; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_15 DAISY Register, offset: 0x49C */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_16; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_16 DAISY Register, offset: 0x4A0 */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_17; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_17 DAISY Register, offset: 0x4A4 */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_18; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_18 DAISY Register, offset: 0x4A8 */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_19; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_19 DAISY Register, offset: 0x4AC */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_20; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_20 DAISY Register, offset: 0x4B0 */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_21; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_21 DAISY Register, offset: 0x4B4 */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_22; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_22 DAISY Register, offset: 0x4B8 */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_23; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_23 DAISY Register, offset: 0x4BC */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_24; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_24 DAISY Register, offset: 0x4C0 */
  __IO uint32_t FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_25; /**< FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_25 DAISY Register, offset: 0x4C4 */
  __IO uint32_t FLEXSPI1_I_IPP_IND_DQS_FA_SELECT_INPUT; /**< FLEXSPI1_I_IPP_IND_DQS_FA_SELECT_INPUT DAISY Register, offset: 0x4C8 */
  __IO uint32_t FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_0; /**< FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_0 DAISY Register, offset: 0x4CC */
  __IO uint32_t FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_1; /**< FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_1 DAISY Register, offset: 0x4D0 */
  __IO uint32_t FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_2; /**< FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_2 DAISY Register, offset: 0x4D4 */
  __IO uint32_t FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_3; /**< FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_3 DAISY Register, offset: 0x4D8 */
  __IO uint32_t FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_4; /**< FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_4 DAISY Register, offset: 0x4DC */
  __IO uint32_t FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_5; /**< FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_5 DAISY Register, offset: 0x4E0 */
  __IO uint32_t FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_6; /**< FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_6 DAISY Register, offset: 0x4E4 */
  __IO uint32_t FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_7; /**< FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_7 DAISY Register, offset: 0x4E8 */
  __IO uint32_t FLEXSPI1_I_IPP_IND_SCK_FA_SELECT_INPUT; /**< FLEXSPI1_I_IPP_IND_SCK_FA_SELECT_INPUT DAISY Register, offset: 0x4EC */
  __IO uint32_t I3C2_PIN_SCL_IN_SELECT_INPUT;      /**< I3C2_PIN_SCL_IN_SELECT_INPUT DAISY Register, offset: 0x4F0 */
  __IO uint32_t I3C2_PIN_SDA_IN_SELECT_INPUT;      /**< I3C2_PIN_SDA_IN_SELECT_INPUT DAISY Register, offset: 0x4F4 */
  __IO uint32_t I_IPP_IND_IO_FA_SELECT_INPUT_0;    /**< I_IPP_IND_IO_FA_SELECT_INPUT_0 DAISY Register, offset: 0x4F8 */
  __IO uint32_t I_IPP_IND_IO_FA_SELECT_INPUT_1;    /**< I_IPP_IND_IO_FA_SELECT_INPUT_1 DAISY Register, offset: 0x4FC */
  __IO uint32_t I_IPP_IND_IO_FA_SELECT_INPUT_2;    /**< I_IPP_IND_IO_FA_SELECT_INPUT_2 DAISY Register, offset: 0x500 */
  __IO uint32_t I_IPP_IND_IO_FA_SELECT_INPUT_3;    /**< I_IPP_IND_IO_FA_SELECT_INPUT_3 DAISY Register, offset: 0x504 */
  __IO uint32_t I_IPP_IND_SCK_FA_SELECT_INPUT;     /**< I_IPP_IND_SCK_FA_SELECT_INPUT DAISY Register, offset: 0x508 */
  __IO uint32_t LPI2C3_IPP_IND_LPI2C_SCL_SELECT_INPUT; /**< LPI2C3_IPP_IND_LPI2C_SCL_SELECT_INPUT DAISY Register, offset: 0x50C */
  __IO uint32_t LPI2C3_IPP_IND_LPI2C_SDA_SELECT_INPUT; /**< LPI2C3_IPP_IND_LPI2C_SDA_SELECT_INPUT DAISY Register, offset: 0x510 */
  __IO uint32_t LPI2C4_IPP_IND_LPI2C_SCL_SELECT_INPUT; /**< LPI2C4_IPP_IND_LPI2C_SCL_SELECT_INPUT DAISY Register, offset: 0x514 */
  __IO uint32_t LPI2C4_IPP_IND_LPI2C_SDA_SELECT_INPUT; /**< LPI2C4_IPP_IND_LPI2C_SDA_SELECT_INPUT DAISY Register, offset: 0x518 */
  __IO uint32_t LPI2C5_IPP_IND_LPI2C_SCL_SELECT_INPUT; /**< LPI2C5_IPP_IND_LPI2C_SCL_SELECT_INPUT DAISY Register, offset: 0x51C */
  __IO uint32_t LPI2C5_IPP_IND_LPI2C_SDA_SELECT_INPUT; /**< LPI2C5_IPP_IND_LPI2C_SDA_SELECT_INPUT DAISY Register, offset: 0x520 */
  __IO uint32_t LPI2C6_IPP_IND_LPI2C_SCL_SELECT_INPUT; /**< LPI2C6_IPP_IND_LPI2C_SCL_SELECT_INPUT DAISY Register, offset: 0x524 */
  __IO uint32_t LPI2C6_IPP_IND_LPI2C_SDA_SELECT_INPUT; /**< LPI2C6_IPP_IND_LPI2C_SDA_SELECT_INPUT DAISY Register, offset: 0x528 */
  __IO uint32_t LPI2C7_IPP_IND_LPI2C_SCL_SELECT_INPUT; /**< LPI2C7_IPP_IND_LPI2C_SCL_SELECT_INPUT DAISY Register, offset: 0x52C */
  __IO uint32_t LPI2C7_IPP_IND_LPI2C_SDA_SELECT_INPUT; /**< LPI2C7_IPP_IND_LPI2C_SDA_SELECT_INPUT DAISY Register, offset: 0x530 */
  __IO uint32_t LPI2C8_IPP_IND_LPI2C_SCL_SELECT_INPUT; /**< LPI2C8_IPP_IND_LPI2C_SCL_SELECT_INPUT DAISY Register, offset: 0x534 */
  __IO uint32_t LPI2C8_IPP_IND_LPI2C_SDA_SELECT_INPUT; /**< LPI2C8_IPP_IND_LPI2C_SDA_SELECT_INPUT DAISY Register, offset: 0x538 */
  __IO uint32_t LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_0; /**< LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_0 DAISY Register, offset: 0x53C */
  __IO uint32_t LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_1; /**< LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_1 DAISY Register, offset: 0x540 */
  __IO uint32_t LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_2; /**< LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_2 DAISY Register, offset: 0x544 */
  __IO uint32_t LPSPI4_IPP_IND_LPSPI_SCK_SELECT_INPUT; /**< LPSPI4_IPP_IND_LPSPI_SCK_SELECT_INPUT DAISY Register, offset: 0x548 */
  __IO uint32_t LPSPI4_IPP_IND_LPSPI_SDI_SELECT_INPUT; /**< LPSPI4_IPP_IND_LPSPI_SDI_SELECT_INPUT DAISY Register, offset: 0x54C */
  __IO uint32_t LPSPI4_IPP_IND_LPSPI_SDO_SELECT_INPUT; /**< LPSPI4_IPP_IND_LPSPI_SDO_SELECT_INPUT DAISY Register, offset: 0x550 */
  __IO uint32_t LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_0; /**< LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_0 DAISY Register, offset: 0x554 */
  __IO uint32_t LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_1; /**< LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_1 DAISY Register, offset: 0x558 */
  __IO uint32_t LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_2; /**< LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_2 DAISY Register, offset: 0x55C */
  __IO uint32_t LPUART3_IPP_IND_LPUART_CTS_N_SELECT_INPUT; /**< LPUART3_IPP_IND_LPUART_CTS_N_SELECT_INPUT DAISY Register, offset: 0x560 */
  __IO uint32_t LPUART3_IPP_IND_LPUART_RXD_SELECT_INPUT; /**< LPUART3_IPP_IND_LPUART_RXD_SELECT_INPUT DAISY Register, offset: 0x564 */
  __IO uint32_t LPUART3_IPP_IND_LPUART_TXD_SELECT_INPUT; /**< LPUART3_IPP_IND_LPUART_TXD_SELECT_INPUT DAISY Register, offset: 0x568 */
  __IO uint32_t LPUART4_IPP_IND_LPUART_CTS_N_SELECT_INPUT; /**< LPUART4_IPP_IND_LPUART_CTS_N_SELECT_INPUT DAISY Register, offset: 0x56C */
  __IO uint32_t LPUART4_IPP_IND_LPUART_RXD_SELECT_INPUT; /**< LPUART4_IPP_IND_LPUART_RXD_SELECT_INPUT DAISY Register, offset: 0x570 */
  __IO uint32_t LPUART4_IPP_IND_LPUART_TXD_SELECT_INPUT; /**< LPUART4_IPP_IND_LPUART_TXD_SELECT_INPUT DAISY Register, offset: 0x574 */
  __IO uint32_t LPUART5_IPP_IND_LPUART_CTS_N_SELECT_INPUT; /**< LPUART5_IPP_IND_LPUART_CTS_N_SELECT_INPUT DAISY Register, offset: 0x578 */
  __IO uint32_t LPUART5_IPP_IND_LPUART_RXD_SELECT_INPUT; /**< LPUART5_IPP_IND_LPUART_RXD_SELECT_INPUT DAISY Register, offset: 0x57C */
  __IO uint32_t LPUART5_IPP_IND_LPUART_TXD_SELECT_INPUT; /**< LPUART5_IPP_IND_LPUART_TXD_SELECT_INPUT DAISY Register, offset: 0x580 */
  __IO uint32_t LPUART6_IPP_IND_LPUART_CTS_N_SELECT_INPUT; /**< LPUART6_IPP_IND_LPUART_CTS_N_SELECT_INPUT DAISY Register, offset: 0x584 */
  __IO uint32_t LPUART6_IPP_IND_LPUART_RXD_SELECT_INPUT; /**< LPUART6_IPP_IND_LPUART_RXD_SELECT_INPUT DAISY Register, offset: 0x588 */
  __IO uint32_t LPUART6_IPP_IND_LPUART_TXD_SELECT_INPUT; /**< LPUART6_IPP_IND_LPUART_TXD_SELECT_INPUT DAISY Register, offset: 0x58C */
  __IO uint32_t LPUART7_IPP_IND_LPUART_RXD_SELECT_INPUT; /**< LPUART7_IPP_IND_LPUART_RXD_SELECT_INPUT DAISY Register, offset: 0x590 */
  __IO uint32_t LPUART7_IPP_IND_LPUART_TXD_SELECT_INPUT; /**< LPUART7_IPP_IND_LPUART_TXD_SELECT_INPUT DAISY Register, offset: 0x594 */
  __IO uint32_t SAI3_IPP_IND_SAI_RXBCLK_SELECT_INPUT; /**< SAI3_IPP_IND_SAI_RXBCLK_SELECT_INPUT DAISY Register, offset: 0x598 */
  __IO uint32_t SAI3_IPP_IND_SAI_RXSYNC_SELECT_INPUT; /**< SAI3_IPP_IND_SAI_RXSYNC_SELECT_INPUT DAISY Register, offset: 0x59C */
  __IO uint32_t SAI4_IPP_IND_SAI_RXBCLK_SELECT_INPUT; /**< SAI4_IPP_IND_SAI_RXBCLK_SELECT_INPUT DAISY Register, offset: 0x5A0 */
  __IO uint32_t SAI4_IPP_IND_SAI_RXDATA_SELECT_INPUT_0; /**< SAI4_IPP_IND_SAI_RXDATA_SELECT_INPUT_0 DAISY Register, offset: 0x5A4 */
  __IO uint32_t SAI4_IPP_IND_SAI_RXSYNC_SELECT_INPUT; /**< SAI4_IPP_IND_SAI_RXSYNC_SELECT_INPUT DAISY Register, offset: 0x5A8 */
  __IO uint32_t SAI4_IPP_IND_SAI_TXBCLK_SELECT_INPUT; /**< SAI4_IPP_IND_SAI_TXBCLK_SELECT_INPUT DAISY Register, offset: 0x5AC */
  __IO uint32_t SAI4_IPP_IND_SAI_TXSYNC_SELECT_INPUT; /**< SAI4_IPP_IND_SAI_TXSYNC_SELECT_INPUT DAISY Register, offset: 0x5B0 */
  __IO uint32_t SAI5_IPP_IND_SAI_RXBCLK_SELECT_INPUT; /**< SAI5_IPP_IND_SAI_RXBCLK_SELECT_INPUT DAISY Register, offset: 0x5B4 */
  __IO uint32_t SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_0; /**< SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_0 DAISY Register, offset: 0x5B8 */
  __IO uint32_t SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_1; /**< SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_1 DAISY Register, offset: 0x5BC */
  __IO uint32_t SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_2; /**< SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_2 DAISY Register, offset: 0x5C0 */
  __IO uint32_t SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_3; /**< SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_3 DAISY Register, offset: 0x5C4 */
  __IO uint32_t SAI5_IPP_IND_SAI_RXSYNC_SELECT_INPUT; /**< SAI5_IPP_IND_SAI_RXSYNC_SELECT_INPUT DAISY Register, offset: 0x5C8 */
  __IO uint32_t SAI5_IPP_IND_SAI_TXBCLK_SELECT_INPUT; /**< SAI5_IPP_IND_SAI_TXBCLK_SELECT_INPUT DAISY Register, offset: 0x5CC */
  __IO uint32_t SAI5_IPP_IND_SAI_TXSYNC_SELECT_INPUT; /**< SAI5_IPP_IND_SAI_TXSYNC_SELECT_INPUT DAISY Register, offset: 0x5D0 */
  __IO uint32_t SPDIF_I_SELECT_INPUT;              /**< SPDIF_I_SELECT_INPUT DAISY Register, offset: 0x5D4 */
  __IO uint32_t USDHC3_IPP_CARD_CLK_IN_SELECT_INPUT; /**< USDHC3_IPP_CARD_CLK_IN_SELECT_INPUT DAISY Register, offset: 0x5D8 */
  __IO uint32_t USDHC3_IPP_CMD_IN_SELECT_INPUT;    /**< USDHC3_IPP_CMD_IN_SELECT_INPUT DAISY Register, offset: 0x5DC */
  __IO uint32_t USDHC3_IPP_DAT0_IN_SELECT_INPUT;   /**< USDHC3_IPP_DAT0_IN_SELECT_INPUT DAISY Register, offset: 0x5E0 */
  __IO uint32_t USDHC3_IPP_DAT1_IN_SELECT_INPUT;   /**< USDHC3_IPP_DAT1_IN_SELECT_INPUT DAISY Register, offset: 0x5E4 */
  __IO uint32_t USDHC3_IPP_DAT2_IN_SELECT_INPUT;   /**< USDHC3_IPP_DAT2_IN_SELECT_INPUT DAISY Register, offset: 0x5E8 */
  __IO uint32_t USDHC3_IPP_DAT3_IN_SELECT_INPUT;   /**< USDHC3_IPP_DAT3_IN_SELECT_INPUT DAISY Register, offset: 0x5EC */
  __IO uint32_t JTAG_MUX_TCK_SELECT_INPUT;         /**< JTAG_MUX_TCK_SELECT_INPUT DAISY Register, offset: 0x5F0 */
  __IO uint32_t JTAG_MUX_TDI_SELECT_INPUT;         /**< JTAG_MUX_TDI_SELECT_INPUT DAISY Register, offset: 0x5F4 */
  __IO uint32_t JTAG_MUX_TMS_SELECT_INPUT;         /**< JTAG_MUX_TMS_SELECT_INPUT DAISY Register, offset: 0x5F8 */
} IOMUXC_Type;

/* ----------------------------------------------------------------------------
   -- IOMUXC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup IOMUXC_Register_Masks IOMUXC Register Masks
 * @{
 */

/*! @name SW_MUX_CTL_PAD_DAP_TDI - SW_MUX_CTL_PAD_DAP_TDI SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_DAP_TDI_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_DAP_TDI_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: JTAG_MUX_TDI of instance: jtag_mux
 *  0b001..Select mux mode: ALT1 mux port: IMX95_NETCMIX_TOP_MQS2_LEFT of instance: imx95_netcmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_NETCMIX_TOP_NETC_TMR_1588_ALARM1 of instance: imx95_netcmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_CAN2_TX of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO30 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO28 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPUART5_RX of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_DAP_TDI_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_DAP_TDI_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_DAP_TDI_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_DAP_TDI_SION_MASK  (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_DAP_TDI_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad DAP_TDI
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_DAP_TDI_SION(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_DAP_TDI_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_DAP_TDI_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_DAP_TMS_SWDIO - SW_MUX_CTL_PAD_DAP_TMS_SWDIO SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_DAP_TMS_SWDIO_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_DAP_TMS_SWDIO_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: JTAG_MUX_TMS of instance: jtag_mux
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_CAN4_TX of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO31 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO29 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPUART5_RTS_B of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_DAP_TMS_SWDIO_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_DAP_TMS_SWDIO_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_DAP_TMS_SWDIO_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_DAP_TMS_SWDIO_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_DAP_TMS_SWDIO_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad DAP_TMS_SWDIO
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_DAP_TMS_SWDIO_SION(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_DAP_TMS_SWDIO_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_DAP_TMS_SWDIO_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_DAP_TCLK_SWCLK - SW_MUX_CTL_PAD_DAP_TCLK_SWCLK SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_DAP_TCLK_SWCLK_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_DAP_TCLK_SWCLK_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: JTAG_MUX_TCK of instance: jtag_mux
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_CAN4_RX of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO30 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO30 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPUART5_CTS_B of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_DAP_TCLK_SWCLK_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_DAP_TCLK_SWCLK_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_DAP_TCLK_SWCLK_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_DAP_TCLK_SWCLK_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_DAP_TCLK_SWCLK_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad DAP_TCLK_SWCLK
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_DAP_TCLK_SWCLK_SION(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_DAP_TCLK_SWCLK_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_DAP_TCLK_SWCLK_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_DAP_TDO_TRACESWO - SW_MUX_CTL_PAD_DAP_TDO_TRACESWO SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_DAP_TDO_TRACESWO_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_DAP_TDO_TRACESWO_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: JTAG_MUX_TDO of instance: jtag_mux
 *  0b001..Select mux mode: ALT1 mux port: IMX95_NETCMIX_TOP_MQS2_RIGHT of instance: imx95_netcmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_NETCMIX_TOP_NETC_TMR_1588_ALARM2 of instance: imx95_netcmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_CAN2_RX of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO31 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO31 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPUART5_TX of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_DAP_TDO_TRACESWO_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_DAP_TDO_TRACESWO_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_DAP_TDO_TRACESWO_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_DAP_TDO_TRACESWO_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_DAP_TDO_TRACESWO_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad DAP_TDO_TRACESWO
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_DAP_TDO_TRACESWO_SION(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_DAP_TDO_TRACESWO_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_DAP_TDO_TRACESWO_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO00 - SW_MUX_CTL_PAD_GPIO_IO00 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO00_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO00_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO00 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPI2C3_SDA of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_LPSPI6_PCS0 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_LPUART5_TX of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPI2C5_SDA of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO00 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO00_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO00_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO00_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO00_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO00_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO00
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO00_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO00_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO00_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO01 - SW_MUX_CTL_PAD_GPIO_IO01 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO01_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO01_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO01 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPI2C3_SCL of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_LPSPI6_SIN of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_LPUART5_RX of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPI2C5_SCL of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO01 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO01_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO01_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO01_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO01_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO01_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO01
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO01_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO01_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO01_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO02 - SW_MUX_CTL_PAD_GPIO_IO02 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO02_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO02_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO02 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPI2C4_SDA of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_LPSPI6_SOUT of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_LPUART5_CTS_B of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPI2C6_SDA of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO02 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO02_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO02_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO02_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO02_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO02_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO02
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO02_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO02_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO02_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO03 - SW_MUX_CTL_PAD_GPIO_IO03 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO03_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO03_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO03 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPI2C4_SCL of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_LPSPI6_SCK of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_LPUART5_RTS_B of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPI2C6_SCL of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO03 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO03_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO03_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO03_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO03_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO03_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO03
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO03_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO03_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO03_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO04 - SW_MUX_CTL_PAD_GPIO_IO04 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO04_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO04_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO04 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_TPM3_CH0 of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_AONMIX_TOP_PDM_CLK of instance: imx95_aonmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_CAN4_TX of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_LPSPI7_PCS0 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_LPUART6_TX of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPI2C6_SDA of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO04 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO04_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO04_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO04_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO04_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO04_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO04
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO04_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO04_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO04_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO05 - SW_MUX_CTL_PAD_GPIO_IO05 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO05_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO05_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO05 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_TPM4_CH0 of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_AONMIX_TOP_PDM_BIT_STREAM00 of instance: imx95_aonmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_CAN4_RX of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_LPSPI7_SIN of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_LPUART6_RX of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPI2C6_SCL of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO05 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO05_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO05_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO05_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO05_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO05_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO05
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO05_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO05_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO05_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO06 - SW_MUX_CTL_PAD_GPIO_IO06 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO06_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO06_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO06 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_TPM5_CH0 of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_AONMIX_TOP_PDM_BIT_STREAM01 of instance: imx95_aonmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_LPSPI7_SOUT of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_LPUART6_CTS_B of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPI2C7_SDA of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO06 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO06_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO06_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO06_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO06_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO06_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO06
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO06_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO06_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO06_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO07 - SW_MUX_CTL_PAD_GPIO_IO07 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO07_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO07_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO07 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPSPI3_PCS1 of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_LPSPI7_SCK of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_LPUART6_RTS_B of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPI2C7_SCL of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO07 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO07_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO07_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO07_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO07_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO07_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO07
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO07_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO07_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO07_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO08 - SW_MUX_CTL_PAD_GPIO_IO08 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO08_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO08_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO08 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPSPI3_PCS0 of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_TPM6_CH0 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_LPUART7_TX of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPI2C7_SDA of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO08 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO08_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO08_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO08_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO08_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO08_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO08
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO08_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO08_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO08_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO09 - SW_MUX_CTL_PAD_GPIO_IO09 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO09_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO09_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO09 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPSPI3_SIN of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_TPM3_EXTCLK of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_LPUART7_RX of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPI2C7_SCL of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO09 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO09_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO09_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO09_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO09_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO09_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO09
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO09_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO09_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO09_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO10 - SW_MUX_CTL_PAD_GPIO_IO10 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO10_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO10_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO10 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPSPI3_SOUT of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_TPM4_EXTCLK of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_LPUART7_CTS_B of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPI2C8_SDA of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO10 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO10_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO10_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO10_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO10_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO10_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO10
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO10_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO10_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO10_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO11 - SW_MUX_CTL_PAD_GPIO_IO11 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO11_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO11_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO11 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPSPI3_SCK of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_TPM5_EXTCLK of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_LPUART7_RTS_B of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPI2C8_SCL of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO11 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO11_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO11_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO11_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO11_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO11_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO11
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO11_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO11_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO11_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO12 - SW_MUX_CTL_PAD_GPIO_IO12 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO12_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO12_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO12 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_TPM3_CH2 of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_AONMIX_TOP_PDM_BIT_STREAM02 of instance: imx95_aonmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO12 of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_LPSPI8_PCS0 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_LPUART8_TX of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPI2C8_SDA of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_SAI3_RX_SYNC of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO12_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO12_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO12_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO12_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO12_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO12
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO12_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO12_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO12_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO13 - SW_MUX_CTL_PAD_GPIO_IO13 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO13_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO13_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO13 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_TPM4_CH2 of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_AONMIX_TOP_PDM_BIT_STREAM03 of instance: imx95_aonmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_LPSPI8_SIN of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_LPUART8_RX of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPI2C8_SCL of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO13 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO13_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO13_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO13_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO13_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO13_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO13
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO13_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO13_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO13_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO14 - SW_MUX_CTL_PAD_GPIO_IO14 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO14_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO14_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO14 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPUART3_TX of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_LPSPI8_SOUT of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_LPUART8_CTS_B of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPUART4_TX of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO14 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO14_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO14_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO14_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO14_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO14_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO14
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO14_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO14_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO14_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO15 - SW_MUX_CTL_PAD_GPIO_IO15 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO15_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO15_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO15 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPUART3_RX of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_LPSPI8_SCK of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_LPUART8_RTS_B of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPUART4_RX of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO15 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO15_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO15_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO15_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO15_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO15_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO15
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO15_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO15_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO15_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO16 - SW_MUX_CTL_PAD_GPIO_IO16 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO16_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO16_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO16 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_SAI3_TX_BCLK of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_AONMIX_TOP_PDM_BIT_STREAM02 of instance: imx95_aonmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_LPUART3_CTS_B of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_LPSPI4_PCS2 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPUART4_CTS_B of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO16 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO16_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO16_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO16_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO16_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO16_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO16
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO16_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO16_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO16_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO17 - SW_MUX_CTL_PAD_GPIO_IO17 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO17_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO17_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO17 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_SAI3_MCLK of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_LPUART3_RTS_B of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_LPSPI4_PCS1 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPUART4_RTS_B of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO17 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO17_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO17_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO17_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO17_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO17_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO17
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO17_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO17_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO17_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO18 - SW_MUX_CTL_PAD_GPIO_IO18 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO18_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO18_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO18 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_SAI3_RX_BCLK of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_LPSPI5_PCS0 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_LPSPI4_PCS0 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_TPM5_CH2 of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO18 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO18_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO18_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO18_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO18_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO18_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO18
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO18_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO18_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO18_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO19 - SW_MUX_CTL_PAD_GPIO_IO19 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO19_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO19_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO19 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_SAI3_RX_SYNC of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_AONMIX_TOP_PDM_BIT_STREAM03 of instance: imx95_aonmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO19 of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_LPSPI5_SIN of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_LPSPI4_SIN of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_TPM6_CH2 of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_SAI3_TX_DATA00 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO19_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO19_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO19_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO19_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO19_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO19
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO19_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO19_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO19_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO20 - SW_MUX_CTL_PAD_GPIO_IO20 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO20_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO20_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO20 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_SAI3_RX_DATA00 of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_AONMIX_TOP_PDM_BIT_STREAM00 of instance: imx95_aonmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_LPSPI5_SOUT of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_LPSPI4_SOUT of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_TPM3_CH1 of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO20 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO20_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO20_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO20_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO20_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO20_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO20
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO20_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO20_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO20_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO21 - SW_MUX_CTL_PAD_GPIO_IO21 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO21_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO21_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO21 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_SAI3_TX_DATA00 of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_AONMIX_TOP_PDM_CLK of instance: imx95_aonmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO21 of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_LPSPI5_SCK of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_LPSPI4_SCK of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_TPM4_CH1 of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_SAI3_RX_BCLK of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO21_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO21_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO21_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO21_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO21_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO21
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO21_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO21_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO21_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO22 - SW_MUX_CTL_PAD_GPIO_IO22 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO22_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO22_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO22 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_USDHC3_CLK of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_SPDIF_IN of instance: imx95_wakeupmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_CAN5_TX of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_TPM5_CH1 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_TPM6_EXTCLK of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPI2C5_SDA of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO22 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO22_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO22_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO22_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO22_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO22_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO22
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO22_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO22_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO22_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO23 - SW_MUX_CTL_PAD_GPIO_IO23 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO23_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO23_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO23 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_USDHC3_CMD of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_SPDIF_OUT of instance: imx95_wakeupmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_CAN5_RX of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_TPM6_CH1 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPI2C5_SCL of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO23 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO23_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO23_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO23_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO23_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO23_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO23
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO23_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO23_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO23_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO24 - SW_MUX_CTL_PAD_GPIO_IO24 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO24_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO24_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO24 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_USDHC3_DATA0 of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_TPM3_CH3 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: JTAG_MUX_TDO of instance: jtag_mux
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPSPI6_PCS1 of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO24 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO24_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO24_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO24_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO24_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO24_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO24
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO24_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO24_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO24_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO25 - SW_MUX_CTL_PAD_GPIO_IO25 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO25_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO25_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO25 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_USDHC3_DATA1 of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_CAN2_TX of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_TPM4_CH3 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: JTAG_MUX_TCK of instance: jtag_mux
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPSPI7_PCS1 of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO25 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO25_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO25_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO25_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO25_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO25_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO25
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO25_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO25_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO25_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO26 - SW_MUX_CTL_PAD_GPIO_IO26 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO26_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO26_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO26 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_USDHC3_DATA2 of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_AONMIX_TOP_PDM_BIT_STREAM01 of instance: imx95_aonmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO26 of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_TPM5_CH3 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: JTAG_MUX_TDI of instance: jtag_mux
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPSPI8_PCS1 of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_SAI3_TX_SYNC of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO26_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO26_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO26_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO26_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO26_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO26
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO26_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO26_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO26_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO27 - SW_MUX_CTL_PAD_GPIO_IO27 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO27_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO27_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO27 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_USDHC3_DATA3 of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_CAN2_RX of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_TPM6_CH3 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: JTAG_MUX_TMS of instance: jtag_mux
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_LPSPI5_PCS1 of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO27 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO27_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO27_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO27_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO27_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO27_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO27
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO27_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO27_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO27_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO28 - SW_MUX_CTL_PAD_GPIO_IO28 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO28_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO28_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO28 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPI2C3_SDA of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_CAN3_TX of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO28 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO28_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO28_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO28_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO28_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO28_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO28
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO28_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO28_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO28_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO29 - SW_MUX_CTL_PAD_GPIO_IO29 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO29_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO29_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO29 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPI2C3_SCL of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_CAN3_RX of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO29 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO29_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO29_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO29_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO29_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO29_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO29
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO29_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO29_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO29_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO30 - SW_MUX_CTL_PAD_GPIO_IO30 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO30_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO30_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO30 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPI2C4_SDA of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_CAN5_TX of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO30 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO30_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO30_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO30_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO30_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO30_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO30
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO30_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO30_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO30_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO31 - SW_MUX_CTL_PAD_GPIO_IO31 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO31_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO31_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO2_IO31 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPI2C4_SCL of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_CAN5_RX of instance: imx95_wakeupmix_top
 *  0b111..Select mux mode: ALT7 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO31 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO31_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO31_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO31_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO31_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO31_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO31
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO31_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO31_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO31_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO32 - SW_MUX_CTL_PAD_GPIO_IO32 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO32_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO32_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO5_IO12 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_HSIOMIX_TOP_PCIE1_CLKREQ_B of instance: imx95_hsiomix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_LPUART6_TX of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_LPSPI4_PCS2 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO32_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO32_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO32_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO32_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO32_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO32
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO32_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO32_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO32_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO33 - SW_MUX_CTL_PAD_GPIO_IO33 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO33_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO33_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO5_IO13 of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_LPUART6_RX of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_LPSPI4_PCS1 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO33_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO33_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO33_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO33_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO33_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO33
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO33_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO33_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO33_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO34 - SW_MUX_CTL_PAD_GPIO_IO34 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO34_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO34_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO5_IO14 of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_LPUART6_CTS_B of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_LPSPI4_PCS0 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO34_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO34_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO34_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO34_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO34_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO34
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO34_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO34_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO34_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO35 - SW_MUX_CTL_PAD_GPIO_IO35 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO35_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO35_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO5_IO15 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_HSIOMIX_TOP_PCIE2_CLKREQ_B of instance: imx95_hsiomix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_LPUART6_RTS_B of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_LPSPI4_SIN of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO35_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO35_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO35_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO35_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO35_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO35
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO35_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO35_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO35_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO36 - SW_MUX_CTL_PAD_GPIO_IO36 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO36_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO36_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_LPSPI4_SOUT of instance: imx95_wakeupmix_top
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO5_IO16 of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_LPUART7_TX of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO36_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO36_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO36_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO36_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO36_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO36
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO36_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO36_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO36_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_GPIO_IO37 - SW_MUX_CTL_PAD_GPIO_IO37 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO37_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO37_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_GPIO5_IO17 of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_LPUART7_RX of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_LPSPI4_SCK of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO37_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO37_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO37_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO37_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO37_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad GPIO_IO37
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_IO37_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_GPIO_IO37_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_GPIO_IO37_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_CCM_CLKO1 - SW_MUX_CTL_PAD_CCM_CLKO1 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO1_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO1_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_CCMSRCGPCMIX_TOP_CLKO1 of instance: imx95_ccmsrcgpcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_NETCMIX_TOP_NETC_TMR_1588_TRIG1 of instance: imx95_netcmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO26 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO26 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO1_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO1_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO1_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO1_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO1_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad CCM_CLKO1
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO1_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO1_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO1_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_CCM_CLKO2 - SW_MUX_CTL_PAD_CCM_CLKO2 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO2_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO2_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO27 of instance: imx95_wakeupmix_top
 *  0b000..Select mux mode: ALT0 mux port: IMX95_CCMSRCGPCMIX_TOP_CLKO2 of instance: imx95_ccmsrcgpcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_NETCMIX_TOP_NETC_TMR_1588_PP1 of instance: imx95_netcmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO27 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO2_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO2_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO2_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO2_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO2_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad CCM_CLKO2
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO2_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO2_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO2_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_CCM_CLKO3 - SW_MUX_CTL_PAD_CCM_CLKO3 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO3_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO3_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_CCMSRCGPCMIX_TOP_CLKO3 of instance: imx95_ccmsrcgpcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_NETCMIX_TOP_NETC_TMR_1588_TRIG2 of instance: imx95_netcmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_CAN3_TX of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO28 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO28 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO3_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO3_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO3_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO3_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO3_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad CCM_CLKO3
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO3_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO3_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO3_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_CCM_CLKO4 - SW_MUX_CTL_PAD_CCM_CLKO4 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO4_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO4_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_CCMSRCGPCMIX_TOP_CLKO4 of instance: imx95_ccmsrcgpcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_NETCMIX_TOP_NETC_TMR_1588_PP2 of instance: imx95_netcmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_CAN3_RX of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO29 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO29 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO4_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO4_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO4_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO4_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO4_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad CCM_CLKO4
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO4_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO4_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO4_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET1_MDC - SW_MUX_CTL_PAD_ENET1_MDC SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_MDC_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_MDC_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_NETC_MDC of instance: imx95_netcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPUART3_DCB_B of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_I3C2_SCL of instance: imx95_wakeupmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_HSIOMIX_TOP_USB1_OTG_ID of instance: imx95_hsiomix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO00 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO00 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_MDC_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_MDC_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_MDC_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_MDC_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_MDC_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET1_MDC
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_MDC_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_MDC_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_MDC_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET1_MDIO - SW_MUX_CTL_PAD_ENET1_MDIO SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_MDIO_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_MDIO_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_NETC_MDIO of instance: imx95_netcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPUART3_RIN_B of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_I3C2_SDA of instance: imx95_wakeupmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_HSIOMIX_TOP_USB1_OTG_PWR of instance: imx95_hsiomix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO01 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO01 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_MDIO_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_MDIO_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_MDIO_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_MDIO_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_MDIO_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET1_MDIO
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_MDIO_SION(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_MDIO_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_MDIO_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET1_TD3 - SW_MUX_CTL_PAD_ENET1_TD3 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TD3_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TD3_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_ETH0_RGMII_TD3 of instance: imx95_netcmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_CAN2_TX of instance: imx95_wakeupmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_HSIOMIX_TOP_USB2_OTG_ID of instance: imx95_hsiomix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO02 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO02 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TD3_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_TD3_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_TD3_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TD3_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TD3_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET1_TD3
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TD3_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_TD3_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_TD3_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET1_TD2 - SW_MUX_CTL_PAD_ENET1_TD2 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TD2_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TD2_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_ETH0_RGMII_TD2 of instance: imx95_netcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_NETCMIX_TOP_ETH0_RMII_REF50_CLK of instance: imx95_netcmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_CAN2_RX of instance: imx95_wakeupmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_HSIOMIX_TOP_USB2_OTG_OC of instance: imx95_hsiomix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO03 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO03 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TD2_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_TD2_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_TD2_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TD2_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TD2_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET1_TD2
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TD2_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_TD2_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_TD2_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET1_TD1 - SW_MUX_CTL_PAD_ENET1_TD1 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TD1_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TD1_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_ETH0_RGMII_TD1 of instance: imx95_netcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPUART3_RTS_B of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_I3C2_PUR of instance: imx95_wakeupmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_HSIOMIX_TOP_USB1_OTG_OC of instance: imx95_hsiomix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO04 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO04 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_I3C2_PUR_B of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TD1_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_TD1_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_TD1_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TD1_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TD1_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET1_TD1
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TD1_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_TD1_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_TD1_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET1_TD0 - SW_MUX_CTL_PAD_ENET1_TD0 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TD0_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TD0_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_ETH0_RGMII_TD0 of instance: imx95_netcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPUART3_TX of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_NETCMIX_TOP_ETH0_RMII_TXD0 of instance: imx95_netcmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO05 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO05 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TD0_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_TD0_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_TD0_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TD0_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TD0_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET1_TD0
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TD0_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_TD0_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_TD0_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET1_TX_CTL - SW_MUX_CTL_PAD_ENET1_TX_CTL SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TX_CTL_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TX_CTL_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_ETH0_RGMII_TX_CTL of instance: imx95_netcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPUART3_DTR_B of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_NETCMIX_TOP_ETH0_RMII_TX_EN of instance: imx95_netcmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO06 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO06 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TX_CTL_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_TX_CTL_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_TX_CTL_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TX_CTL_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TX_CTL_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET1_TX_CTL
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TX_CTL_SION(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_TX_CTL_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_TX_CTL_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET1_TXC - SW_MUX_CTL_PAD_ENET1_TXC SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TXC_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TXC_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_ETH0_RGMII_TX_CLK of instance: imx95_netcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_CCMSRCGPCMIX_TOP_ENET_CLK_ROOT of instance: imx95_ccmsrcgpcmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO07 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO07 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TXC_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_TXC_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_TXC_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TXC_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TXC_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET1_TXC
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_TXC_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_TXC_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_TXC_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET1_RX_CTL - SW_MUX_CTL_PAD_ENET1_RX_CTL SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RX_CTL_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RX_CTL_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_ETH0_RGMII_RX_CTL of instance: imx95_netcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPUART3_DSR_B of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_NETCMIX_TOP_ETH0_RMII_CRS_DV of instance: imx95_netcmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_HSIOMIX_TOP_USB2_OTG_PWR of instance: imx95_hsiomix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO08 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO08 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RX_CTL_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_RX_CTL_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_RX_CTL_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RX_CTL_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RX_CTL_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET1_RX_CTL
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RX_CTL_SION(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_RX_CTL_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_RX_CTL_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET1_RXC - SW_MUX_CTL_PAD_ENET1_RXC SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RXC_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RXC_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_ETH0_RGMII_RX_CLK of instance: imx95_netcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_NETCMIX_TOP_ETH0_RMII_RX_ER of instance: imx95_netcmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO09 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO09 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RXC_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_RXC_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_RXC_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RXC_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RXC_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET1_RXC
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RXC_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_RXC_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_RXC_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET1_RD0 - SW_MUX_CTL_PAD_ENET1_RD0 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RD0_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RD0_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_ETH0_RGMII_RD0 of instance: imx95_netcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPUART3_RX of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_NETCMIX_TOP_ETH0_RMII_RXD0 of instance: imx95_netcmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO10 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO10 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RD0_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_RD0_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_RD0_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RD0_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RD0_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET1_RD0
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RD0_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_RD0_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_RD0_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET1_RD1 - SW_MUX_CTL_PAD_ENET1_RD1 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RD1_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RD1_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_ETH0_RGMII_RD1 of instance: imx95_netcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPUART3_CTS_B of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_NETCMIX_TOP_ETH0_RMII_RXD1 of instance: imx95_netcmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_LPTMR2_ALT1 of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO11 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO11 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RD1_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_RD1_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_RD1_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RD1_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RD1_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET1_RD1
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RD1_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_RD1_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_RD1_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET1_RD2 - SW_MUX_CTL_PAD_ENET1_RD2 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RD2_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RD2_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_ETH0_RGMII_RD2 of instance: imx95_netcmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_NETCMIX_TOP_ETH0_RMII_RX_ER of instance: imx95_netcmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_LPTMR2_ALT2 of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO12 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO12 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RD2_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_RD2_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_RD2_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RD2_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RD2_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET1_RD2
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RD2_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_RD2_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_RD2_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET1_RD3 - SW_MUX_CTL_PAD_ENET1_RD3 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RD3_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RD3_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_ETH0_RGMII_RD3 of instance: imx95_netcmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_FLEXSPI_USDHC_TESTER_TRIGGER of instance: imx95_wakeupmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_LPTMR2_ALT3 of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO13 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO13 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RD3_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_RD3_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_RD3_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RD3_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RD3_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET1_RD3
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET1_RD3_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET1_RD3_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET1_RD3_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET2_MDC - SW_MUX_CTL_PAD_ENET2_MDC SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_MDC_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_MDC_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_NETC_MDC of instance: imx95_netcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPUART4_DCB_B of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_NETCMIX_TOP_SAI2_RX_SYNC of instance: imx95_netcmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO14 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO14 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_MDC_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_MDC_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_MDC_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_MDC_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_MDC_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET2_MDC
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_MDC_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_MDC_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_MDC_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET2_MDIO - SW_MUX_CTL_PAD_ENET2_MDIO SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_MDIO_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_MDIO_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_NETC_MDIO of instance: imx95_netcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPUART4_RIN_B of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_NETCMIX_TOP_SAI2_RX_BCLK of instance: imx95_netcmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO15 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO15 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_MDIO_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_MDIO_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_MDIO_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_MDIO_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_MDIO_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET2_MDIO
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_MDIO_SION(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_MDIO_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_MDIO_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET2_TD3 - SW_MUX_CTL_PAD_ENET2_TD3 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TD3_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TD3_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b010..Select mux mode: ALT2 mux port: IMX95_NETCMIX_TOP_SAI2_RX_DATA00 of instance: imx95_netcmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO16 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO16 of instance: imx95_wakeupmix_top
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_ETH1_RGMII_TD3 of instance: imx95_netcmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TD3_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_TD3_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_TD3_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TD3_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TD3_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET2_TD3
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TD3_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_TD3_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_TD3_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET2_TD2 - SW_MUX_CTL_PAD_ENET2_TD2 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TD2_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TD2_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_ETH1_RGMII_TD2 of instance: imx95_netcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_NETCMIX_TOP_ETH1_RMII_REF50_CLK of instance: imx95_netcmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_NETCMIX_TOP_SAI2_RX_DATA01 of instance: imx95_netcmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_SAI4_TX_SYNC of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO17 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO17 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TD2_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_TD2_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_TD2_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TD2_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TD2_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET2_TD2
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TD2_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_TD2_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_TD2_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET2_TD1 - SW_MUX_CTL_PAD_ENET2_TD1 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TD1_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TD1_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_ETH1_RGMII_TD1 of instance: imx95_netcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPUART4_RTS_B of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_NETCMIX_TOP_SAI2_RX_DATA02 of instance: imx95_netcmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_SAI4_TX_BCLK of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO18 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO18 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_NETCMIX_TOP_ETH1_RMII_TXD1 of instance: imx95_netcmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TD1_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_TD1_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_TD1_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TD1_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TD1_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET2_TD1
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TD1_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_TD1_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_TD1_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET2_TD0 - SW_MUX_CTL_PAD_ENET2_TD0 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TD0_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TD0_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_ETH1_RGMII_TD0 of instance: imx95_netcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPUART4_TX of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_NETCMIX_TOP_SAI2_RX_DATA03 of instance: imx95_netcmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_SAI4_TX_DATA00 of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO19 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO19 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_NETCMIX_TOP_ETH1_RMII_TXD0 of instance: imx95_netcmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TD0_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_TD0_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_TD0_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TD0_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TD0_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET2_TD0
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TD0_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_TD0_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_TD0_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET2_TX_CTL - SW_MUX_CTL_PAD_ENET2_TX_CTL SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TX_CTL_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TX_CTL_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_ETH1_RGMII_TX_CTL of instance: imx95_netcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPUART4_DTR_B of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_NETCMIX_TOP_SAI2_TX_SYNC of instance: imx95_netcmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_NETCMIX_TOP_ETH1_RMII_TX_EN of instance: imx95_netcmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO20 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO20 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TX_CTL_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_TX_CTL_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_TX_CTL_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TX_CTL_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TX_CTL_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET2_TX_CTL
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TX_CTL_SION(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_TX_CTL_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_TX_CTL_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET2_TXC - SW_MUX_CTL_PAD_ENET2_TXC SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TXC_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TXC_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_ETH1_RGMII_TX_CLK of instance: imx95_netcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_CCMSRCGPCMIX_TOP_ENET_CLK_ROOT of instance: imx95_ccmsrcgpcmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_NETCMIX_TOP_SAI2_TX_BCLK of instance: imx95_netcmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO21 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO21 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TXC_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_TXC_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_TXC_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TXC_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TXC_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET2_TXC
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_TXC_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_TXC_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_TXC_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET2_RX_CTL - SW_MUX_CTL_PAD_ENET2_RX_CTL SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RX_CTL_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RX_CTL_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_ETH1_RGMII_RX_CTL of instance: imx95_netcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPUART4_DSR_B of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_NETCMIX_TOP_SAI2_TX_DATA00 of instance: imx95_netcmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO22 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO22 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_NETCMIX_TOP_ETH1_RMII_CRS_DV of instance: imx95_netcmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RX_CTL_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_RX_CTL_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_RX_CTL_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RX_CTL_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RX_CTL_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET2_RX_CTL
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RX_CTL_SION(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_RX_CTL_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_RX_CTL_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET2_RXC - SW_MUX_CTL_PAD_ENET2_RXC SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RXC_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RXC_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_ETH1_RGMII_RX_CLK of instance: imx95_netcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_NETCMIX_TOP_ETH1_RMII_RX_ER of instance: imx95_netcmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_NETCMIX_TOP_SAI2_TX_DATA01 of instance: imx95_netcmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_SAI4_RX_SYNC of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO23 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO23 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RXC_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_RXC_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_RXC_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RXC_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RXC_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET2_RXC
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RXC_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_RXC_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_RXC_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET2_RD0 - SW_MUX_CTL_PAD_ENET2_RD0 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RD0_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RD0_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_ETH1_RGMII_RD0 of instance: imx95_netcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPUART4_RX of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_NETCMIX_TOP_SAI2_TX_DATA02 of instance: imx95_netcmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_SAI4_RX_BCLK of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO24 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO24 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_NETCMIX_TOP_ETH1_RMII_RXD0 of instance: imx95_netcmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RD0_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_RD0_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_RD0_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RD0_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RD0_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET2_RD0
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RD0_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_RD0_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_RD0_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET2_RD1 - SW_MUX_CTL_PAD_ENET2_RD1 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RD1_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RD1_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_ETH1_RGMII_RD1 of instance: imx95_netcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_SPDIF_IN of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_NETCMIX_TOP_SAI2_TX_DATA03 of instance: imx95_netcmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_SAI4_RX_DATA00 of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO25 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO25 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_NETCMIX_TOP_ETH1_RMII_RXD1 of instance: imx95_netcmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RD1_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_RD1_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_RD1_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RD1_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RD1_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET2_RD1
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RD1_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_RD1_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_RD1_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET2_RD2 - SW_MUX_CTL_PAD_ENET2_RD2 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RD2_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RD2_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_ETH1_RGMII_RD2 of instance: imx95_netcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPUART4_CTS_B of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_NETCMIX_TOP_SAI2_MCLK of instance: imx95_netcmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_NETCMIX_TOP_MQS2_RIGHT of instance: imx95_netcmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO26 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO26 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_NETCMIX_TOP_ETH1_RMII_RX_ER of instance: imx95_netcmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RD2_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_RD2_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_RD2_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RD2_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RD2_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET2_RD2
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RD2_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_RD2_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_RD2_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_ENET2_RD3 - SW_MUX_CTL_PAD_ENET2_RD3 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RD3_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RD3_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_NETCMIX_TOP_ETH1_RGMII_RD3 of instance: imx95_netcmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_SPDIF_OUT of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_SPDIF_IN of instance: imx95_wakeupmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_NETCMIX_TOP_MQS2_LEFT of instance: imx95_netcmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO2_FLEXIO27 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO4_IO27 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RD3_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_RD3_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_RD3_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RD3_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RD3_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad ENET2_RD3
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_ENET2_RD3_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_ENET2_RD3_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_ENET2_RD3_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD1_CLK - SW_MUX_CTL_PAD_SD1_CLK SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD1_CLK_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD1_CLK_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO08 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO08 of instance: imx95_wakeupmix_top
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC1_CLK of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD1_CLK_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD1_CLK_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD1_CLK_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD1_CLK_SION_MASK  (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD1_CLK_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD1_CLK
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD1_CLK_SION(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD1_CLK_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD1_CLK_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD1_CMD - SW_MUX_CTL_PAD_SD1_CMD SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD1_CMD_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD1_CMD_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC1_CMD of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO09 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO09 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD1_CMD_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD1_CMD_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD1_CMD_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD1_CMD_SION_MASK  (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD1_CMD_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD1_CMD
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD1_CMD_SION(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD1_CMD_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD1_CMD_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD1_DATA0 - SW_MUX_CTL_PAD_SD1_DATA0 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA0_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA0_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC1_DATA0 of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO10 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO10 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA0_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD1_DATA0_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD1_DATA0_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA0_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA0_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD1_DATA0
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA0_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD1_DATA0_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD1_DATA0_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD1_DATA1 - SW_MUX_CTL_PAD_SD1_DATA1 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA1_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA1_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC1_DATA1 of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO11 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO11 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA1_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD1_DATA1_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD1_DATA1_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA1_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA1_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD1_DATA1
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA1_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD1_DATA1_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD1_DATA1_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD1_DATA2 - SW_MUX_CTL_PAD_SD1_DATA2 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA2_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA2_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC1_DATA2 of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO12 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO12 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_CCMSRCGPCMIX_TOP_PMIC_READY of instance: imx95_ccmsrcgpcmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA2_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD1_DATA2_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD1_DATA2_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA2_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA2_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD1_DATA2
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA2_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD1_DATA2_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD1_DATA2_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD1_DATA3 - SW_MUX_CTL_PAD_SD1_DATA3 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA3_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA3_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC1_DATA3 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_FLEXSPI1_A_SS1_B of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO13 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO13 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA3_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD1_DATA3_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD1_DATA3_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA3_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA3_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD1_DATA3
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA3_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD1_DATA3_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD1_DATA3_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD1_DATA4 - SW_MUX_CTL_PAD_SD1_DATA4 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA4_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA4_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC1_DATA4 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_FLEXSPI1_A_DATA04 of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO14 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO14 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA4_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD1_DATA4_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD1_DATA4_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA4_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA4_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD1_DATA4
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA4_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD1_DATA4_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD1_DATA4_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD1_DATA5 - SW_MUX_CTL_PAD_SD1_DATA5 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA5_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA5_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC1_DATA5 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_FLEXSPI1_A_DATA05 of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_USDHC1_RESET_B of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO15 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO15 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA5_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD1_DATA5_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD1_DATA5_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA5_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA5_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD1_DATA5
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA5_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD1_DATA5_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD1_DATA5_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD1_DATA6 - SW_MUX_CTL_PAD_SD1_DATA6 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA6_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA6_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC1_DATA6 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_FLEXSPI1_A_DATA06 of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_USDHC1_CD_B of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO16 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO16 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA6_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD1_DATA6_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD1_DATA6_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA6_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA6_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD1_DATA6
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA6_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD1_DATA6_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD1_DATA6_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD1_DATA7 - SW_MUX_CTL_PAD_SD1_DATA7 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA7_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA7_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC1_DATA7 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_FLEXSPI1_A_DATA07 of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_USDHC1_WP of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO17 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO17 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA7_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD1_DATA7_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD1_DATA7_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA7_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA7_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD1_DATA7
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD1_DATA7_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD1_DATA7_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD1_DATA7_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD1_STROBE - SW_MUX_CTL_PAD_SD1_STROBE SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD1_STROBE_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD1_STROBE_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC1_STROBE of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_FLEXSPI1_A_DQS of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO18 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO18 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD1_STROBE_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD1_STROBE_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD1_STROBE_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD1_STROBE_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD1_STROBE_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD1_STROBE
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD1_STROBE_SION(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD1_STROBE_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD1_STROBE_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD2_VSELECT - SW_MUX_CTL_PAD_SD2_VSELECT SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD2_VSELECT_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD2_VSELECT_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC2_VSELECT of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_USDHC2_WP of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_LPTMR2_ALT3 of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO19 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO19 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_CCMSRCGPCMIX_TOP_EXT_CLK1 of instance: imx95_ccmsrcgpcmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD2_VSELECT_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD2_VSELECT_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD2_VSELECT_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD2_VSELECT_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD2_VSELECT_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD2_VSELECT
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD2_VSELECT_SION(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD2_VSELECT_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD2_VSELECT_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD3_CLK - SW_MUX_CTL_PAD_SD3_CLK SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD3_CLK_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD3_CLK_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC3_CLK of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_FLEXSPI1_A_SCLK of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_SAI5_TX_DATA01 of instance: imx95_wakeupmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_SAI5_RX_DATA00 of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO20 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO20 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_XSPI_CLK of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD3_CLK_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD3_CLK_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD3_CLK_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD3_CLK_SION_MASK  (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD3_CLK_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD3_CLK
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD3_CLK_SION(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD3_CLK_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD3_CLK_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD3_CMD - SW_MUX_CTL_PAD_SD3_CMD SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD3_CMD_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD3_CMD_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC3_CMD of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_FLEXSPI1_A_SS0_B of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_SAI5_TX_DATA02 of instance: imx95_wakeupmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_SAI5_RX_SYNC of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO21 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO21 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_XSPI_CS of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD3_CMD_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD3_CMD_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD3_CMD_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD3_CMD_SION_MASK  (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD3_CMD_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD3_CMD
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD3_CMD_SION(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD3_CMD_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD3_CMD_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD3_DATA0 - SW_MUX_CTL_PAD_SD3_DATA0 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD3_DATA0_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD3_DATA0_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC3_DATA0 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_FLEXSPI1_A_DATA00 of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_SAI5_TX_DATA03 of instance: imx95_wakeupmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_SAI5_RX_BCLK of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO22 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO22 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_XSPI_DATA00 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD3_DATA0_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD3_DATA0_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD3_DATA0_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD3_DATA0_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD3_DATA0_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD3_DATA0
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD3_DATA0_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD3_DATA0_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD3_DATA0_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD3_DATA1 - SW_MUX_CTL_PAD_SD3_DATA1 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD3_DATA1_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD3_DATA1_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC3_DATA1 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_FLEXSPI1_A_DATA01 of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_SAI5_RX_DATA01 of instance: imx95_wakeupmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_SAI5_TX_DATA00 of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO23 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO23 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_XSPI_DATA01 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD3_DATA1_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD3_DATA1_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD3_DATA1_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD3_DATA1_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD3_DATA1_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD3_DATA1
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD3_DATA1_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD3_DATA1_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD3_DATA1_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD3_DATA2 - SW_MUX_CTL_PAD_SD3_DATA2 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD3_DATA2_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD3_DATA2_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC3_DATA2 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_FLEXSPI1_A_DATA02 of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_SAI5_RX_DATA02 of instance: imx95_wakeupmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_SAI5_TX_SYNC of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO24 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO24 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_XSPI_DATA02 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD3_DATA2_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD3_DATA2_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD3_DATA2_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD3_DATA2_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD3_DATA2_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD3_DATA2
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD3_DATA2_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD3_DATA2_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD3_DATA2_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD3_DATA3 - SW_MUX_CTL_PAD_SD3_DATA3 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD3_DATA3_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD3_DATA3_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC3_DATA3 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_FLEXSPI1_A_DATA03 of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_SAI5_RX_DATA03 of instance: imx95_wakeupmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_SAI5_TX_BCLK of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO25 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO25 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_WAKEUPMIX_TOP_XSPI_DATA03 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD3_DATA3_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD3_DATA3_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD3_DATA3_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD3_DATA3_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD3_DATA3_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD3_DATA3
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD3_DATA3_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD3_DATA3_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD3_DATA3_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_XSPI1_DATA0 - SW_MUX_CTL_PAD_XSPI1_DATA0 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA0_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA0_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_FLEXSPI1_A_DATA00 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_NETCMIX_TOP_SAI2_TX_DATA04 of instance: imx95_netcmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_SAI4_TX_BCLK of instance: imx95_wakeupmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_SAI4_RX_DATA01 of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_XSPI_DATA00 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO5_IO00 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA0_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA0_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA0_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA0_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA0_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad XSPI1_DATA0
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA0_SION(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA0_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA0_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_XSPI1_DATA1 - SW_MUX_CTL_PAD_XSPI1_DATA1 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA1_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA1_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_FLEXSPI1_A_DATA01 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_NETCMIX_TOP_SAI2_TX_DATA05 of instance: imx95_netcmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_SAI4_TX_SYNC of instance: imx95_wakeupmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_SAI4_TX_DATA01 of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_XSPI_DATA01 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO5_IO01 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA1_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA1_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA1_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA1_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA1_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad XSPI1_DATA1
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA1_SION(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA1_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA1_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_XSPI1_DATA2 - SW_MUX_CTL_PAD_XSPI1_DATA2 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA2_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA2_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_FLEXSPI1_A_DATA02 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_NETCMIX_TOP_SAI2_TX_DATA06 of instance: imx95_netcmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_SAI4_TX_DATA00 of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_XSPI_DATA02 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO5_IO02 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA2_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA2_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA2_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA2_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA2_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad XSPI1_DATA2
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA2_SION(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA2_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA2_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_XSPI1_DATA3 - SW_MUX_CTL_PAD_XSPI1_DATA3 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA3_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA3_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_FLEXSPI1_A_DATA03 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_NETCMIX_TOP_SAI2_TX_DATA07 of instance: imx95_netcmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_SAI4_RX_DATA00 of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_XSPI_DATA03 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO5_IO03 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA3_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA3_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA3_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA3_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA3_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad XSPI1_DATA3
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA3_SION(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA3_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA3_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_XSPI1_DATA4 - SW_MUX_CTL_PAD_XSPI1_DATA4 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA4_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA4_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_FLEXSPI1_A_DATA04 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_SAI5_TX_DATA00 of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_SAI5_RX_DATA01 of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_XSPI_DATA04 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO5_IO04 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA4_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA4_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA4_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA4_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA4_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad XSPI1_DATA4
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA4_SION(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA4_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA4_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_XSPI1_DATA5 - SW_MUX_CTL_PAD_XSPI1_DATA5 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA5_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA5_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_FLEXSPI1_A_DATA05 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_SAI5_TX_SYNC of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_SAI5_RX_DATA02 of instance: imx95_wakeupmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_NETCMIX_TOP_SAI2_RX_DATA06 of instance: imx95_netcmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_XSPI_DATA05 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO5_IO05 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA5_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA5_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA5_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA5_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA5_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad XSPI1_DATA5
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA5_SION(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA5_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA5_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_XSPI1_DATA6 - SW_MUX_CTL_PAD_XSPI1_DATA6 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA6_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA6_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_FLEXSPI1_A_DATA06 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_SAI5_TX_BCLK of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_SAI5_RX_DATA03 of instance: imx95_wakeupmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_NETCMIX_TOP_SAI2_RX_DATA07 of instance: imx95_netcmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_XSPI_DATA06 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO5_IO06 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA6_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA6_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA6_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA6_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA6_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad XSPI1_DATA6
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA6_SION(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA6_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA6_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_XSPI1_DATA7 - SW_MUX_CTL_PAD_XSPI1_DATA7 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA7_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA7_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_FLEXSPI1_A_DATA07 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_SAI5_RX_DATA00 of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_SAI5_TX_DATA01 of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_XSPI_DATA07 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO5_IO07 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA7_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA7_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA7_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA7_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA7_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad XSPI1_DATA7
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA7_SION(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA7_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA7_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_XSPI1_DQS - SW_MUX_CTL_PAD_XSPI1_DQS SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DQS_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DQS_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_FLEXSPI1_A_DQS of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_SAI5_RX_SYNC of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_SAI5_TX_DATA02 of instance: imx95_wakeupmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_NETCMIX_TOP_SAI2_RX_DATA06 of instance: imx95_netcmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_XSPI_DQS of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO5_IO08 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DQS_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_XSPI1_DQS_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_XSPI1_DQS_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DQS_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DQS_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad XSPI1_DQS
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_DQS_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_XSPI1_DQS_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_XSPI1_DQS_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_XSPI1_SCLK - SW_MUX_CTL_PAD_XSPI1_SCLK SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_SCLK_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_SCLK_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_FLEXSPI1_A_SCLK of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_NETCMIX_TOP_SAI2_RX_DATA04 of instance: imx95_netcmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_SAI4_RX_SYNC of instance: imx95_wakeupmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_DISPLAYMIX_TOP_EARC_DC_HPD of instance: imx95_displaymix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_XSPI_CLK of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO5_IO09 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_SCLK_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_XSPI1_SCLK_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_XSPI1_SCLK_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_SCLK_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_SCLK_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad XSPI1_SCLK
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_SCLK_SION(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_XSPI1_SCLK_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_XSPI1_SCLK_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_XSPI1_SS0_B - SW_MUX_CTL_PAD_XSPI1_SS0_B SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_SS0_B_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_SS0_B_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_FLEXSPI1_A_SS0_B of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_NETCMIX_TOP_SAI2_RX_DATA05 of instance: imx95_netcmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_SAI4_RX_BCLK of instance: imx95_wakeupmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_DISPLAYMIX_TOP_EARC_CEC of instance: imx95_displaymix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_XSPI_CS of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO5_IO10 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_SS0_B_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_XSPI1_SS0_B_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_XSPI1_SS0_B_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_SS0_B_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_SS0_B_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad XSPI1_SS0_B
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_SS0_B_SION(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_XSPI1_SS0_B_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_XSPI1_SS0_B_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_XSPI1_SS1_B - SW_MUX_CTL_PAD_XSPI1_SS1_B SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_SS1_B_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_SS1_B_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_FLEXSPI1_A_SS1_B of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_SAI5_RX_BCLK of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_SAI5_TX_DATA03 of instance: imx95_wakeupmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_NETCMIX_TOP_SAI2_RX_DATA07 of instance: imx95_netcmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO5_IO11 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_SS1_B_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_XSPI1_SS1_B_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_XSPI1_SS1_B_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_SS1_B_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_SS1_B_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad XSPI1_SS1_B
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_XSPI1_SS1_B_SION(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_XSPI1_SS1_B_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_XSPI1_SS1_B_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD2_CD_B - SW_MUX_CTL_PAD_SD2_CD_B SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD2_CD_B_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD2_CD_B_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC2_CD_B of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_NETCMIX_TOP_NETC_TMR_1588_TRIG1 of instance: imx95_netcmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_I3C2_SCL of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO00 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO00 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD2_CD_B_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD2_CD_B_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD2_CD_B_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD2_CD_B_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD2_CD_B_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD2_CD_B
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD2_CD_B_SION(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD2_CD_B_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD2_CD_B_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD2_CLK - SW_MUX_CTL_PAD_SD2_CLK SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD2_CLK_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD2_CLK_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC2_CLK of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_NETCMIX_TOP_NETC_TMR_1588_PP1 of instance: imx95_netcmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_I3C2_SDA of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO01 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO01 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_CCMSRCGPCMIX_TOP_OBSERVE0 of instance: imx95_ccmsrcgpcmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD2_CLK_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD2_CLK_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD2_CLK_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD2_CLK_SION_MASK  (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD2_CLK_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD2_CLK
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD2_CLK_SION(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD2_CLK_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD2_CLK_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD2_CMD - SW_MUX_CTL_PAD_SD2_CMD SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD2_CMD_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD2_CMD_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC2_CMD of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_NETCMIX_TOP_NETC_TMR_1588_TRIG2 of instance: imx95_netcmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_I3C2_PUR of instance: imx95_wakeupmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_WAKEUPMIX_TOP_I3C2_PUR_B of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO02 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO02 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_CCMSRCGPCMIX_TOP_OBSERVE1 of instance: imx95_ccmsrcgpcmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD2_CMD_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD2_CMD_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD2_CMD_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD2_CMD_SION_MASK  (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD2_CMD_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD2_CMD
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD2_CMD_SION(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD2_CMD_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD2_CMD_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD2_DATA0 - SW_MUX_CTL_PAD_SD2_DATA0 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD2_DATA0_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD2_DATA0_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC2_DATA0 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_NETCMIX_TOP_NETC_TMR_1588_PP2 of instance: imx95_netcmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_CAN2_TX of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO03 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO03 of instance: imx95_wakeupmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_CCMSRCGPCMIX_TOP_OBSERVE2 of instance: imx95_ccmsrcgpcmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD2_DATA0_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD2_DATA0_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD2_DATA0_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD2_DATA0_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD2_DATA0_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD2_DATA0
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD2_DATA0_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD2_DATA0_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD2_DATA0_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD2_DATA1 - SW_MUX_CTL_PAD_SD2_DATA1 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD2_DATA1_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD2_DATA1_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC2_DATA1 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_NETCMIX_TOP_NETC_TMR_1588_CLK of instance: imx95_netcmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_WAKEUPMIX_TOP_CAN2_RX of instance: imx95_wakeupmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO04 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO04 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD2_DATA1_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD2_DATA1_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD2_DATA1_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD2_DATA1_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD2_DATA1_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD2_DATA1
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD2_DATA1_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD2_DATA1_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD2_DATA1_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD2_DATA2 - SW_MUX_CTL_PAD_SD2_DATA2 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD2_DATA2_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD2_DATA2_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC2_DATA2 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_NETCMIX_TOP_NETC_TMR_1588_PP3 of instance: imx95_netcmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_NETCMIX_TOP_MQS2_RIGHT of instance: imx95_netcmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO05 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO05 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD2_DATA2_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD2_DATA2_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD2_DATA2_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD2_DATA2_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD2_DATA2_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD2_DATA2
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD2_DATA2_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD2_DATA2_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD2_DATA2_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD2_DATA3 - SW_MUX_CTL_PAD_SD2_DATA3 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD2_DATA3_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD2_DATA3_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC2_DATA3 of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPTMR2_ALT1 of instance: imx95_wakeupmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_NETCMIX_TOP_MQS2_LEFT of instance: imx95_netcmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_NETCMIX_TOP_NETC_TMR_1588_ALARM1 of instance: imx95_netcmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO06 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO06 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD2_DATA3_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD2_DATA3_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD2_DATA3_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD2_DATA3_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD2_DATA3_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD2_DATA3
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD2_DATA3_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD2_DATA3_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD2_DATA3_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SD2_RESET_B - SW_MUX_CTL_PAD_SD2_RESET_B SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SD2_RESET_B_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SD2_RESET_B_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_WAKEUPMIX_TOP_USDHC2_RESET_B of instance: imx95_wakeupmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_WAKEUPMIX_TOP_LPTMR2_ALT2 of instance: imx95_wakeupmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_NETCMIX_TOP_NETC_TMR_1588_CLK of instance: imx95_netcmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_WAKEUPMIX_TOP_FLEXIO1_FLEXIO07 of instance: imx95_wakeupmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_WAKEUPMIX_TOP_GPIO3_IO07 of instance: imx95_wakeupmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD2_RESET_B_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD2_RESET_B_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD2_RESET_B_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SD2_RESET_B_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SD2_RESET_B_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SD2_RESET_B
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SD2_RESET_B_SION(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SD2_RESET_B_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SD2_RESET_B_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_I2C1_SCL - SW_MUX_CTL_PAD_I2C1_SCL SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_I2C1_SCL_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_I2C1_SCL_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_AONMIX_TOP_LPI2C1_SCL of instance: imx95_aonmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_AONMIX_TOP_I3C1_SCL of instance: imx95_aonmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_AONMIX_TOP_LPUART1_DCB_B of instance: imx95_aonmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_AONMIX_TOP_TPM2_CH0 of instance: imx95_aonmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_VPUMIX_TOP_UART_RX of instance: imx95_vpumix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_AONMIX_TOP_GPIO1_IO00 of instance: imx95_aonmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_I2C1_SCL_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_I2C1_SCL_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_I2C1_SCL_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_I2C1_SCL_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_I2C1_SCL_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad I2C1_SCL
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_I2C1_SCL_SION(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_I2C1_SCL_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_I2C1_SCL_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_I2C1_SDA - SW_MUX_CTL_PAD_I2C1_SDA SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_I2C1_SDA_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_I2C1_SDA_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_AONMIX_TOP_LPI2C1_SDA of instance: imx95_aonmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_AONMIX_TOP_I3C1_SDA of instance: imx95_aonmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_AONMIX_TOP_LPUART1_RIN_B of instance: imx95_aonmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_AONMIX_TOP_TPM2_CH1 of instance: imx95_aonmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_VPUMIX_TOP_UART_TX of instance: imx95_vpumix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_AONMIX_TOP_GPIO1_IO01 of instance: imx95_aonmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_I2C1_SDA_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_I2C1_SDA_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_I2C1_SDA_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_I2C1_SDA_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_I2C1_SDA_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad I2C1_SDA
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_I2C1_SDA_SION(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_I2C1_SDA_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_I2C1_SDA_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_I2C2_SCL - SW_MUX_CTL_PAD_I2C2_SCL SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_I2C2_SCL_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_I2C2_SCL_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_AONMIX_TOP_LPI2C2_SCL of instance: imx95_aonmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_AONMIX_TOP_I3C1_PUR of instance: imx95_aonmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_AONMIX_TOP_LPUART2_DCB_B of instance: imx95_aonmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_AONMIX_TOP_TPM2_CH2 of instance: imx95_aonmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_AONMIX_TOP_SAI1_RX_SYNC of instance: imx95_aonmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_AONMIX_TOP_GPIO1_IO02 of instance: imx95_aonmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_AONMIX_TOP_I3C1_PUR_B of instance: imx95_aonmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_I2C2_SCL_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_I2C2_SCL_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_I2C2_SCL_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_I2C2_SCL_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_I2C2_SCL_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad I2C2_SCL
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_I2C2_SCL_SION(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_I2C2_SCL_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_I2C2_SCL_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_I2C2_SDA - SW_MUX_CTL_PAD_I2C2_SDA SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_I2C2_SDA_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_I2C2_SDA_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_AONMIX_TOP_LPI2C2_SDA of instance: imx95_aonmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_AONMIX_TOP_LPUART2_RIN_B of instance: imx95_aonmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_AONMIX_TOP_TPM2_CH3 of instance: imx95_aonmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_AONMIX_TOP_SAI1_RX_BCLK of instance: imx95_aonmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_AONMIX_TOP_GPIO1_IO03 of instance: imx95_aonmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_I2C2_SDA_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_I2C2_SDA_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_I2C2_SDA_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_I2C2_SDA_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_I2C2_SDA_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad I2C2_SDA
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_I2C2_SDA_SION(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_I2C2_SDA_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_I2C2_SDA_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_UART1_RXD - SW_MUX_CTL_PAD_UART1_RXD SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_UART1_RXD_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_UART1_RXD_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_AONMIX_TOP_LPUART1_RX of instance: imx95_aonmix_top
 *  0b001..Select mux mode: ALT1 mux port: S400_UART_RX of instance: s400
 *  0b010..Select mux mode: ALT2 mux port: IMX95_AONMIX_TOP_LPSPI2_SIN of instance: imx95_aonmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_AONMIX_TOP_TPM1_CH0 of instance: imx95_aonmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_AONMIX_TOP_GPIO1_IO04 of instance: imx95_aonmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_UART1_RXD_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_UART1_RXD_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_UART1_RXD_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_UART1_RXD_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_UART1_RXD_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad UART1_RXD
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_UART1_RXD_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_UART1_RXD_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_UART1_RXD_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_UART1_TXD - SW_MUX_CTL_PAD_UART1_TXD SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_UART1_TXD_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_UART1_TXD_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_AONMIX_TOP_LPUART1_TX of instance: imx95_aonmix_top
 *  0b001..Select mux mode: ALT1 mux port: S400_UART_TX of instance: s400
 *  0b010..Select mux mode: ALT2 mux port: IMX95_AONMIX_TOP_LPSPI2_PCS0 of instance: imx95_aonmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_AONMIX_TOP_TPM1_CH1 of instance: imx95_aonmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_AONMIX_TOP_GPIO1_IO05 of instance: imx95_aonmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_UART1_TXD_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_UART1_TXD_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_UART1_TXD_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_UART1_TXD_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_UART1_TXD_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad UART1_TXD
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_UART1_TXD_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_UART1_TXD_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_UART1_TXD_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_UART2_RXD - SW_MUX_CTL_PAD_UART2_RXD SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_UART2_RXD_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_UART2_RXD_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_AONMIX_TOP_LPUART2_RX of instance: imx95_aonmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_AONMIX_TOP_LPUART1_CTS_B of instance: imx95_aonmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_AONMIX_TOP_LPSPI2_SOUT of instance: imx95_aonmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_AONMIX_TOP_TPM1_CH2 of instance: imx95_aonmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_AONMIX_TOP_SAI1_MCLK of instance: imx95_aonmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_AONMIX_TOP_GPIO1_IO06 of instance: imx95_aonmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_UART2_RXD_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_UART2_RXD_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_UART2_RXD_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_UART2_RXD_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_UART2_RXD_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad UART2_RXD
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_UART2_RXD_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_UART2_RXD_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_UART2_RXD_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_UART2_TXD - SW_MUX_CTL_PAD_UART2_TXD SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_UART2_TXD_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_UART2_TXD_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_AONMIX_TOP_LPUART2_TX of instance: imx95_aonmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_AONMIX_TOP_LPUART1_RTS_B of instance: imx95_aonmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_AONMIX_TOP_LPSPI2_SCK of instance: imx95_aonmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_AONMIX_TOP_TPM1_CH3 of instance: imx95_aonmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_AONMIX_TOP_GPIO1_IO07 of instance: imx95_aonmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_UART2_TXD_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_UART2_TXD_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_UART2_TXD_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_UART2_TXD_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_UART2_TXD_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad UART2_TXD
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_UART2_TXD_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_UART2_TXD_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_UART2_TXD_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_PDM_CLK - SW_MUX_CTL_PAD_PDM_CLK SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_PDM_CLK_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_PDM_CLK_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_AONMIX_TOP_PDM_CLK of instance: imx95_aonmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_AONMIX_TOP_MQS1_LEFT of instance: imx95_aonmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_AONMIX_TOP_LPTMR1_ALT1 of instance: imx95_aonmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_AONMIX_TOP_GPIO1_IO08 of instance: imx95_aonmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_AONMIX_TOP_CAN1_TX of instance: imx95_aonmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_PDM_CLK_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_PDM_CLK_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_PDM_CLK_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_PDM_CLK_SION_MASK  (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_PDM_CLK_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad PDM_CLK
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_PDM_CLK_SION(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_PDM_CLK_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_PDM_CLK_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_PDM_BIT_STREAM0 - SW_MUX_CTL_PAD_PDM_BIT_STREAM0 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_PDM_BIT_STREAM0_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_PDM_BIT_STREAM0_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_AONMIX_TOP_PDM_BIT_STREAM00 of instance: imx95_aonmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_AONMIX_TOP_MQS1_RIGHT of instance: imx95_aonmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_AONMIX_TOP_LPSPI1_PCS1 of instance: imx95_aonmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_AONMIX_TOP_TPM1_EXTCLK of instance: imx95_aonmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_AONMIX_TOP_LPTMR1_ALT2 of instance: imx95_aonmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_AONMIX_TOP_GPIO1_IO09 of instance: imx95_aonmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_AONMIX_TOP_CAN1_RX of instance: imx95_aonmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_PDM_BIT_STREAM0_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_PDM_BIT_STREAM0_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_PDM_BIT_STREAM0_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_PDM_BIT_STREAM0_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_PDM_BIT_STREAM0_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad PDM_BIT_STREAM0
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_PDM_BIT_STREAM0_SION(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_PDM_BIT_STREAM0_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_PDM_BIT_STREAM0_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_PDM_BIT_STREAM1 - SW_MUX_CTL_PAD_PDM_BIT_STREAM1 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_PDM_BIT_STREAM1_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_PDM_BIT_STREAM1_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_AONMIX_TOP_PDM_BIT_STREAM01 of instance: imx95_aonmix_top
 *  0b001..Select mux mode: ALT1 mux port: NMI_GLUE_NMI of instance: nmi_glue
 *  0b010..Select mux mode: ALT2 mux port: IMX95_AONMIX_TOP_LPSPI2_PCS1 of instance: imx95_aonmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_AONMIX_TOP_TPM2_EXTCLK of instance: imx95_aonmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_AONMIX_TOP_LPTMR1_ALT3 of instance: imx95_aonmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_AONMIX_TOP_GPIO1_IO10 of instance: imx95_aonmix_top
 *  0b110..Select mux mode: ALT6 mux port: IMX95_CCMSRCGPCMIX_TOP_EXT_CLK1 of instance: imx95_ccmsrcgpcmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_PDM_BIT_STREAM1_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_PDM_BIT_STREAM1_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_PDM_BIT_STREAM1_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_PDM_BIT_STREAM1_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_PDM_BIT_STREAM1_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad PDM_BIT_STREAM1
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_PDM_BIT_STREAM1_SION(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_PDM_BIT_STREAM1_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_PDM_BIT_STREAM1_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SAI1_TXFS - SW_MUX_CTL_PAD_SAI1_TXFS SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SAI1_TXFS_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SAI1_TXFS_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_AONMIX_TOP_SAI1_TX_SYNC of instance: imx95_aonmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_AONMIX_TOP_SAI1_TX_DATA01 of instance: imx95_aonmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_AONMIX_TOP_LPSPI1_PCS0 of instance: imx95_aonmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_AONMIX_TOP_LPUART2_DTR_B of instance: imx95_aonmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_AONMIX_TOP_MQS1_LEFT of instance: imx95_aonmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_AONMIX_TOP_GPIO1_IO11 of instance: imx95_aonmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SAI1_TXFS_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SAI1_TXFS_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SAI1_TXFS_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SAI1_TXFS_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SAI1_TXFS_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SAI1_TXFS
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SAI1_TXFS_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SAI1_TXFS_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SAI1_TXFS_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SAI1_TXC - SW_MUX_CTL_PAD_SAI1_TXC SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SAI1_TXC_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SAI1_TXC_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_AONMIX_TOP_SAI1_TX_BCLK of instance: imx95_aonmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_AONMIX_TOP_LPUART2_CTS_B of instance: imx95_aonmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_AONMIX_TOP_LPSPI1_SIN of instance: imx95_aonmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_AONMIX_TOP_LPUART1_DSR_B of instance: imx95_aonmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_AONMIX_TOP_CAN1_RX of instance: imx95_aonmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_AONMIX_TOP_GPIO1_IO12 of instance: imx95_aonmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SAI1_TXC_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SAI1_TXC_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SAI1_TXC_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SAI1_TXC_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SAI1_TXC_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SAI1_TXC
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SAI1_TXC_SION(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SAI1_TXC_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SAI1_TXC_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SAI1_TXD0 - SW_MUX_CTL_PAD_SAI1_TXD0 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SAI1_TXD0_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SAI1_TXD0_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_AONMIX_TOP_SAI1_TX_DATA00 of instance: imx95_aonmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_AONMIX_TOP_LPUART2_RTS_B of instance: imx95_aonmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_AONMIX_TOP_LPSPI1_SCK of instance: imx95_aonmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_AONMIX_TOP_LPUART1_DTR_B of instance: imx95_aonmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_AONMIX_TOP_CAN1_TX of instance: imx95_aonmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_AONMIX_TOP_GPIO1_IO13 of instance: imx95_aonmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SAI1_TXD0_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SAI1_TXD0_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SAI1_TXD0_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SAI1_TXD0_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SAI1_TXD0_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SAI1_TXD0
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SAI1_TXD0_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SAI1_TXD0_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SAI1_TXD0_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_SAI1_RXD0 - SW_MUX_CTL_PAD_SAI1_RXD0 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_SAI1_RXD0_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_SAI1_RXD0_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: IMX95_AONMIX_TOP_SAI1_RX_DATA00 of instance: imx95_aonmix_top
 *  0b001..Select mux mode: ALT1 mux port: IMX95_AONMIX_TOP_SAI1_MCLK of instance: imx95_aonmix_top
 *  0b010..Select mux mode: ALT2 mux port: IMX95_AONMIX_TOP_LPSPI1_SOUT of instance: imx95_aonmix_top
 *  0b011..Select mux mode: ALT3 mux port: IMX95_AONMIX_TOP_LPUART2_DSR_B of instance: imx95_aonmix_top
 *  0b100..Select mux mode: ALT4 mux port: IMX95_AONMIX_TOP_MQS1_RIGHT of instance: imx95_aonmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_AONMIX_TOP_GPIO1_IO14 of instance: imx95_aonmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_SAI1_RXD0_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SAI1_RXD0_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SAI1_RXD0_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_SAI1_RXD0_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_SAI1_RXD0_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad SAI1_RXD0
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_SAI1_RXD0_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_SAI1_RXD0_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_SAI1_RXD0_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_WDOG_ANY - SW_MUX_CTL_PAD_WDOG_ANY SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_WDOG_ANY_MUX_MODE_MASK (0x7U)
#define IOMUXC_SW_MUX_CTL_PAD_WDOG_ANY_MUX_MODE_SHIFT (0U)
/*! MUX_MODE - MUX Mode Select Field.
 *  0b000..Select mux mode: ALT0 mux port: WDOG1_WDOG_ANY of instance: wdog1
 *  0b001..Select mux mode: ALT1 mux port: IMX95_AONMIX_TOP_FCCU_EOUT1 of instance: imx95_aonmix_top
 *  0b101..Select mux mode: ALT5 mux port: IMX95_AONMIX_TOP_GPIO1_IO15 of instance: imx95_aonmix_top
 */
#define IOMUXC_SW_MUX_CTL_PAD_WDOG_ANY_MUX_MODE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_WDOG_ANY_MUX_MODE_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_WDOG_ANY_MUX_MODE_MASK)

#define IOMUXC_SW_MUX_CTL_PAD_WDOG_ANY_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_WDOG_ANY_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad WDOG_ANY
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_WDOG_ANY_SION(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_WDOG_ANY_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_WDOG_ANY_SION_MASK)
/*! @} */

/*! @name SW_MUX_CTL_PAD_FCCU_ERR0 - SW_MUX_CTL_PAD_FCCU_ERR0 SW MUX Control Register */
/*! @{ */

#define IOMUXC_SW_MUX_CTL_PAD_FCCU_ERR0_SION_MASK (0x10U)
#define IOMUXC_SW_MUX_CTL_PAD_FCCU_ERR0_SION_SHIFT (4U)
/*! SION - Software Input On Field.
 *  0b1..Force input path of pad FCCU_ERR0
 *  0b0..Input Path is determined by functionality
 */
#define IOMUXC_SW_MUX_CTL_PAD_FCCU_ERR0_SION(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_MUX_CTL_PAD_FCCU_ERR0_SION_SHIFT)) & IOMUXC_SW_MUX_CTL_PAD_FCCU_ERR0_SION_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_DAP_TDI - SW_PAD_CTL_PAD_DAP_TDI SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_DSE_MASK   (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_DSE_SHIFT  (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_DSE(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_FSEL1(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_PU_MASK    (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_PU_SHIFT   (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_PU(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_PD_MASK    (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_PD_SHIFT   (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_PD(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_OD_MASK    (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_OD_SHIFT   (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_OD(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_HYS_MASK   (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_HYS_SHIFT  (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_HYS(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_APC_MASK   (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_APC_SHIFT  (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_APC(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TDI_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_DAP_TMS_SWDIO - SW_PAD_CTL_PAD_DAP_TMS_SWDIO SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_DSE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_PU_MASK (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_PU(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_PD_MASK (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_PD(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_OD_MASK (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_OD(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_HYS(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_APC(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_DAP_TCLK_SWCLK - SW_PAD_CTL_PAD_DAP_TCLK_SWCLK SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_DSE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_PU_MASK (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_PU(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_PD_MASK (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_PD(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_OD_MASK (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_OD(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_HYS(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_APC(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_DAP_TDO_TRACESWO - SW_PAD_CTL_PAD_DAP_TDO_TRACESWO SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_DSE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_PU_MASK (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_PU(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_PD_MASK (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_PD(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_OD_MASK (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_OD(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_HYS(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_APC(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO00 - SW_PAD_CTL_PAD_GPIO_IO00 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO01 - SW_PAD_CTL_PAD_GPIO_IO01 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO02 - SW_PAD_CTL_PAD_GPIO_IO02 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO03 - SW_PAD_CTL_PAD_GPIO_IO03 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO04 - SW_PAD_CTL_PAD_GPIO_IO04 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO05 - SW_PAD_CTL_PAD_GPIO_IO05 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO06 - SW_PAD_CTL_PAD_GPIO_IO06 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO07 - SW_PAD_CTL_PAD_GPIO_IO07 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO08 - SW_PAD_CTL_PAD_GPIO_IO08 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO09 - SW_PAD_CTL_PAD_GPIO_IO09 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO10 - SW_PAD_CTL_PAD_GPIO_IO10 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO11 - SW_PAD_CTL_PAD_GPIO_IO11 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO12 - SW_PAD_CTL_PAD_GPIO_IO12 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO13 - SW_PAD_CTL_PAD_GPIO_IO13 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO14 - SW_PAD_CTL_PAD_GPIO_IO14 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO15 - SW_PAD_CTL_PAD_GPIO_IO15 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO16 - SW_PAD_CTL_PAD_GPIO_IO16 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO17 - SW_PAD_CTL_PAD_GPIO_IO17 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO18 - SW_PAD_CTL_PAD_GPIO_IO18 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO19 - SW_PAD_CTL_PAD_GPIO_IO19 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO20 - SW_PAD_CTL_PAD_GPIO_IO20 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO21 - SW_PAD_CTL_PAD_GPIO_IO21 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO22 - SW_PAD_CTL_PAD_GPIO_IO22 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO23 - SW_PAD_CTL_PAD_GPIO_IO23 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO24 - SW_PAD_CTL_PAD_GPIO_IO24 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO25 - SW_PAD_CTL_PAD_GPIO_IO25 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO26 - SW_PAD_CTL_PAD_GPIO_IO26 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO27 - SW_PAD_CTL_PAD_GPIO_IO27 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO28 - SW_PAD_CTL_PAD_GPIO_IO28 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO29 - SW_PAD_CTL_PAD_GPIO_IO29 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO30 - SW_PAD_CTL_PAD_GPIO_IO30 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO31 - SW_PAD_CTL_PAD_GPIO_IO31 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO32 - SW_PAD_CTL_PAD_GPIO_IO32 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO33 - SW_PAD_CTL_PAD_GPIO_IO33 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO34 - SW_PAD_CTL_PAD_GPIO_IO34 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO35 - SW_PAD_CTL_PAD_GPIO_IO35 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO36 - SW_PAD_CTL_PAD_GPIO_IO36 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_GPIO_IO37 - SW_PAD_CTL_PAD_GPIO_IO37 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_CCM_CLKO1 - SW_PAD_CTL_PAD_CCM_CLKO1 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_CCM_CLKO2 - SW_PAD_CTL_PAD_CCM_CLKO2 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_CCM_CLKO3 - SW_PAD_CTL_PAD_CCM_CLKO3 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_CCM_CLKO4 - SW_PAD_CTL_PAD_CCM_CLKO4 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET1_MDC - SW_PAD_CTL_PAD_ENET1_MDC SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET1_MDIO - SW_PAD_CTL_PAD_ENET1_MDIO SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_DSE(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_PU_MASK (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_PU(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_PD_MASK (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_PD(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_OD_MASK (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_OD(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_HYS(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_APC(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET1_TD3 - SW_PAD_CTL_PAD_ENET1_TD3 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET1_TD2 - SW_PAD_CTL_PAD_ENET1_TD2 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET1_TD1 - SW_PAD_CTL_PAD_ENET1_TD1 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET1_TD0 - SW_PAD_CTL_PAD_ENET1_TD0 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET1_TX_CTL - SW_PAD_CTL_PAD_ENET1_TX_CTL SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_DSE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_PU_MASK (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_PU(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_PD_MASK (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_PD(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_OD_MASK (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_OD(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_HYS(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_APC(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET1_TXC - SW_PAD_CTL_PAD_ENET1_TXC SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET1_RX_CTL - SW_PAD_CTL_PAD_ENET1_RX_CTL SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_DSE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_PU_MASK (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_PU(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_PD_MASK (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_PD(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_OD_MASK (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_OD(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_HYS(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_APC(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET1_RXC - SW_PAD_CTL_PAD_ENET1_RXC SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET1_RD0 - SW_PAD_CTL_PAD_ENET1_RD0 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET1_RD1 - SW_PAD_CTL_PAD_ENET1_RD1 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET1_RD2 - SW_PAD_CTL_PAD_ENET1_RD2 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET1_RD3 - SW_PAD_CTL_PAD_ENET1_RD3 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET2_MDC - SW_PAD_CTL_PAD_ENET2_MDC SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET2_MDIO - SW_PAD_CTL_PAD_ENET2_MDIO SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_DSE(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_PU_MASK (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_PU(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_PD_MASK (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_PD(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_OD_MASK (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_OD(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_HYS(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_APC(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET2_TD3 - SW_PAD_CTL_PAD_ENET2_TD3 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET2_TD2 - SW_PAD_CTL_PAD_ENET2_TD2 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET2_TD1 - SW_PAD_CTL_PAD_ENET2_TD1 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET2_TD0 - SW_PAD_CTL_PAD_ENET2_TD0 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET2_TX_CTL - SW_PAD_CTL_PAD_ENET2_TX_CTL SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_DSE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_PU_MASK (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_PU(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_PD_MASK (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_PD(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_OD_MASK (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_OD(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_HYS(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_APC(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET2_TXC - SW_PAD_CTL_PAD_ENET2_TXC SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET2_RX_CTL - SW_PAD_CTL_PAD_ENET2_RX_CTL SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_DSE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_PU_MASK (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_PU(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_PD_MASK (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_PD(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_OD_MASK (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_OD(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_HYS(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_APC(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET2_RXC - SW_PAD_CTL_PAD_ENET2_RXC SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET2_RD0 - SW_PAD_CTL_PAD_ENET2_RD0 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET2_RD1 - SW_PAD_CTL_PAD_ENET2_RD1 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET2_RD2 - SW_PAD_CTL_PAD_ENET2_RD2 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_ENET2_RD3 - SW_PAD_CTL_PAD_ENET2_RD3 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD1_CLK - SW_PAD_CTL_PAD_SD1_CLK SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_DSE_MASK   (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_DSE_SHIFT  (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_DSE(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_FSEL1(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_PU_MASK    (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_PU_SHIFT   (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_PU(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_PD_MASK    (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_PD_SHIFT   (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_PD(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_OD_MASK    (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_OD_SHIFT   (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_OD(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_HYS_MASK   (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_HYS_SHIFT  (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_HYS(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_APC_MASK   (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_APC_SHIFT  (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_APC(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_CLK_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD1_CMD - SW_PAD_CTL_PAD_SD1_CMD SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_DSE_MASK   (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_DSE_SHIFT  (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_DSE(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_FSEL1(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_PU_MASK    (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_PU_SHIFT   (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_PU(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_PD_MASK    (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_PD_SHIFT   (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_PD(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_OD_MASK    (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_OD_SHIFT   (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_OD(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_HYS_MASK   (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_HYS_SHIFT  (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_HYS(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_APC_MASK   (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_APC_SHIFT  (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_APC(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_CMD_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD1_DATA0 - SW_PAD_CTL_PAD_SD1_DATA0 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD1_DATA1 - SW_PAD_CTL_PAD_SD1_DATA1 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD1_DATA2 - SW_PAD_CTL_PAD_SD1_DATA2 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD1_DATA3 - SW_PAD_CTL_PAD_SD1_DATA3 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD1_DATA4 - SW_PAD_CTL_PAD_SD1_DATA4 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD1_DATA5 - SW_PAD_CTL_PAD_SD1_DATA5 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD1_DATA6 - SW_PAD_CTL_PAD_SD1_DATA6 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD1_DATA7 - SW_PAD_CTL_PAD_SD1_DATA7 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD1_STROBE - SW_PAD_CTL_PAD_SD1_STROBE SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_DSE(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_PU_MASK (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_PU(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_PD_MASK (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_PD(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_OD_MASK (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_OD(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_HYS(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_APC(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD2_VSELECT - SW_PAD_CTL_PAD_SD2_VSELECT SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_DSE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_PU_MASK (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_PU(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_PD_MASK (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_PD(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_OD_MASK (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_OD(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_HYS(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_APC(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD3_CLK - SW_PAD_CTL_PAD_SD3_CLK SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_DSE_MASK   (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_DSE_SHIFT  (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_DSE(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_FSEL1(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_PU_MASK    (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_PU_SHIFT   (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_PU(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_PD_MASK    (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_PD_SHIFT   (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_PD(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_OD_MASK    (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_OD_SHIFT   (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_OD(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_HYS_MASK   (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_HYS_SHIFT  (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_HYS(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_APC_MASK   (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_APC_SHIFT  (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_APC(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_CLK_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD3_CMD - SW_PAD_CTL_PAD_SD3_CMD SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_DSE_MASK   (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_DSE_SHIFT  (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_DSE(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_FSEL1(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_PU_MASK    (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_PU_SHIFT   (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_PU(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_PD_MASK    (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_PD_SHIFT   (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_PD(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_OD_MASK    (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_OD_SHIFT   (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_OD(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_HYS_MASK   (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_HYS_SHIFT  (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_HYS(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_APC_MASK   (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_APC_SHIFT  (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_APC(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_CMD_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD3_DATA0 - SW_PAD_CTL_PAD_SD3_DATA0 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD3_DATA1 - SW_PAD_CTL_PAD_SD3_DATA1 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD3_DATA2 - SW_PAD_CTL_PAD_SD3_DATA2 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD3_DATA3 - SW_PAD_CTL_PAD_SD3_DATA3 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_XSPI1_DATA0 - SW_PAD_CTL_PAD_XSPI1_DATA0 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_DSE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_PU_MASK (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_PU(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_PD_MASK (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_PD(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_OD_MASK (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_OD(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_HYS(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_APC(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_XSPI1_DATA1 - SW_PAD_CTL_PAD_XSPI1_DATA1 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_DSE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_PU_MASK (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_PU(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_PD_MASK (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_PD(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_OD_MASK (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_OD(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_HYS(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_APC(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_XSPI1_DATA2 - SW_PAD_CTL_PAD_XSPI1_DATA2 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_DSE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_PU_MASK (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_PU(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_PD_MASK (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_PD(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_OD_MASK (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_OD(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_HYS(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_APC(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_XSPI1_DATA3 - SW_PAD_CTL_PAD_XSPI1_DATA3 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_DSE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_PU_MASK (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_PU(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_PD_MASK (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_PD(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_OD_MASK (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_OD(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_HYS(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_APC(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_XSPI1_DATA4 - SW_PAD_CTL_PAD_XSPI1_DATA4 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_DSE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_PU_MASK (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_PU(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_PD_MASK (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_PD(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_OD_MASK (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_OD(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_HYS(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_APC(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_XSPI1_DATA5 - SW_PAD_CTL_PAD_XSPI1_DATA5 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_DSE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_PU_MASK (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_PU(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_PD_MASK (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_PD(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_OD_MASK (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_OD(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_HYS(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_APC(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_XSPI1_DATA6 - SW_PAD_CTL_PAD_XSPI1_DATA6 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_DSE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_PU_MASK (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_PU(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_PD_MASK (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_PD(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_OD_MASK (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_OD(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_HYS(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_APC(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_XSPI1_DATA7 - SW_PAD_CTL_PAD_XSPI1_DATA7 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_DSE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_PU_MASK (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_PU(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_PD_MASK (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_PD(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_OD_MASK (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_OD(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_HYS(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_APC(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_XSPI1_DQS - SW_PAD_CTL_PAD_XSPI1_DQS SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_XSPI1_SCLK - SW_PAD_CTL_PAD_XSPI1_SCLK SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_DSE(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_PU_MASK (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_PU(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_PD_MASK (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_PD(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_OD_MASK (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_OD(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_HYS(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_APC(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_XSPI1_SS0_B - SW_PAD_CTL_PAD_XSPI1_SS0_B SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_DSE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_PU_MASK (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_PU(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_PD_MASK (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_PD(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_OD_MASK (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_OD(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_HYS(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_APC(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_XSPI1_SS1_B - SW_PAD_CTL_PAD_XSPI1_SS1_B SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_DSE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_PU_MASK (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_PU(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_PD_MASK (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_PD(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_OD_MASK (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_OD(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_HYS(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_APC(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD2_CD_B - SW_PAD_CTL_PAD_SD2_CD_B SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_DSE_MASK  (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_DSE(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_FSEL1(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_PU_MASK   (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_PU_SHIFT  (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_PU(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_PD_MASK   (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_PD_SHIFT  (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_PD(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_OD_MASK   (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_OD_SHIFT  (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_OD(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_HYS_MASK  (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_HYS(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_APC_MASK  (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_APC(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD2_CLK - SW_PAD_CTL_PAD_SD2_CLK SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_DSE_MASK   (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_DSE_SHIFT  (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_DSE(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_FSEL1(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_PU_MASK    (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_PU_SHIFT   (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_PU(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_PD_MASK    (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_PD_SHIFT   (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_PD(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_OD_MASK    (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_OD_SHIFT   (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_OD(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_HYS_MASK   (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_HYS_SHIFT  (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_HYS(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_APC_MASK   (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_APC_SHIFT  (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_APC(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_CLK_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD2_CMD - SW_PAD_CTL_PAD_SD2_CMD SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_DSE_MASK   (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_DSE_SHIFT  (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_DSE(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_FSEL1(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_PU_MASK    (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_PU_SHIFT   (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_PU(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_PD_MASK    (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_PD_SHIFT   (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_PD(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_OD_MASK    (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_OD_SHIFT   (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_OD(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_HYS_MASK   (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_HYS_SHIFT  (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_HYS(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_APC_MASK   (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_APC_SHIFT  (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_APC(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_CMD_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD2_DATA0 - SW_PAD_CTL_PAD_SD2_DATA0 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD2_DATA1 - SW_PAD_CTL_PAD_SD2_DATA1 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD2_DATA2 - SW_PAD_CTL_PAD_SD2_DATA2 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD2_DATA3 - SW_PAD_CTL_PAD_SD2_DATA3 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SD2_RESET_B - SW_PAD_CTL_PAD_SD2_RESET_B SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_DSE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_PU_MASK (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_PU(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_PD_MASK (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_PD(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_OD_MASK (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_OD(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_HYS(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_APC(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_I2C1_SCL - SW_PAD_CTL_PAD_I2C1_SCL SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_DSE_MASK  (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_DSE(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_FSEL1(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_PU_MASK   (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_PU_SHIFT  (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_PU(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_PD_MASK   (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_PD_SHIFT  (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_PD(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_OD_MASK   (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_OD_SHIFT  (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_OD(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_HYS_MASK  (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_HYS(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_APC_MASK  (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_APC(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_I2C1_SDA - SW_PAD_CTL_PAD_I2C1_SDA SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_DSE_MASK  (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_DSE(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_FSEL1(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_PU_MASK   (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_PU_SHIFT  (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_PU(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_PD_MASK   (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_PD_SHIFT  (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_PD(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_OD_MASK   (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_OD_SHIFT  (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_OD(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_HYS_MASK  (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_HYS(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_APC_MASK  (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_APC(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_I2C2_SCL - SW_PAD_CTL_PAD_I2C2_SCL SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_DSE_MASK  (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_DSE(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_FSEL1(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_PU_MASK   (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_PU_SHIFT  (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_PU(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_PD_MASK   (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_PD_SHIFT  (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_PD(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_OD_MASK   (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_OD_SHIFT  (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_OD(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_HYS_MASK  (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_HYS(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_APC_MASK  (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_APC(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_I2C2_SDA - SW_PAD_CTL_PAD_I2C2_SDA SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_DSE_MASK  (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_DSE(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_FSEL1(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_PU_MASK   (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_PU_SHIFT  (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_PU(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_PD_MASK   (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_PD_SHIFT  (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_PD(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_OD_MASK   (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_OD_SHIFT  (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_OD(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_HYS_MASK  (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_HYS(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_APC_MASK  (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_APC(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_UART1_RXD - SW_PAD_CTL_PAD_UART1_RXD SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART1_RXD_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_UART1_TXD - SW_PAD_CTL_PAD_UART1_TXD SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART1_TXD_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_UART2_RXD - SW_PAD_CTL_PAD_UART2_RXD SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART2_RXD_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_UART2_TXD - SW_PAD_CTL_PAD_UART2_TXD SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_UART2_TXD_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_PDM_CLK - SW_PAD_CTL_PAD_PDM_CLK SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_DSE_MASK   (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_DSE_SHIFT  (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_DSE(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_FSEL1(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_PU_MASK    (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_PU_SHIFT   (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_PU(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_PD_MASK    (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_PD_SHIFT   (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_PD(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_OD_MASK    (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_OD_SHIFT   (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_OD(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_HYS_MASK   (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_HYS_SHIFT  (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_HYS(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_APC_MASK   (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_APC_SHIFT  (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_APC(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_PDM_CLK_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_PDM_BIT_STREAM0 - SW_PAD_CTL_PAD_PDM_BIT_STREAM0 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_DSE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_PU_MASK (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_PU(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_PD_MASK (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_PD(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_OD_MASK (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_OD(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_HYS(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_APC(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_PDM_BIT_STREAM1 - SW_PAD_CTL_PAD_PDM_BIT_STREAM1 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_DSE(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_PU_MASK (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_PU(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_PD_MASK (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_PD(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_OD_MASK (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_OD(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_HYS(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_APC(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SAI1_TXFS - SW_PAD_CTL_PAD_SAI1_TXFS SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SAI1_TXC - SW_PAD_CTL_PAD_SAI1_TXC SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_DSE_MASK  (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_DSE(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_FSEL1(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_PU_MASK   (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_PU_SHIFT  (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_PU(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_PD_MASK   (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_PD_SHIFT  (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_PD(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_OD_MASK   (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_OD_SHIFT  (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_OD(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_HYS_MASK  (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_HYS(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_APC_MASK  (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_APC(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SAI1_TXD0 - SW_PAD_CTL_PAD_SAI1_TXD0 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_SAI1_RXD0 - SW_PAD_CTL_PAD_SAI1_RXD0 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_WDOG_ANY - SW_PAD_CTL_PAD_WDOG_ANY SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_DSE_MASK  (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_DSE(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_FSEL1(x)  (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_PU_MASK   (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_PU_SHIFT  (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_PU(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_PD_MASK   (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_PD_SHIFT  (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_PD(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_OD_MASK   (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_OD_SHIFT  (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_OD(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_HYS_MASK  (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_HYS(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_APC_MASK  (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_APC(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_WDOG_ANY_APC_MASK)
/*! @} */

/*! @name SW_PAD_CTL_PAD_FCCU_ERR0 - SW_PAD_CTL_PAD_FCCU_ERR0 SW PAD Control Register */
/*! @{ */

#define IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_DSE_MASK (0x7EU)
#define IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_DSE_SHIFT (1U)
/*! DSE - Drive Strength Field
 *  0b000000..
 *  0b000001..
 *  0b000010..
 *  0b000011..
 *  0b000100..
 *  0b000101..
 *  0b000110..
 *  0b000111..
 *  0b001000..
 *  0b001001..
 *  0b001010..
 *  0b001011..
 *  0b001100..
 *  0b001101..
 *  0b001110..
 *  0b001111..
 *  0b010000..
 *  0b010001..
 *  0b010010..
 *  0b010011..
 *  0b010100..
 *  0b010101..
 *  0b010110..
 *  0b010111..
 *  0b011000..
 *  0b011001..
 *  0b011010..
 *  0b011011..
 *  0b011100..
 *  0b011101..
 *  0b011110..
 *  0b011111..
 *  0b100000..
 *  0b100001..
 *  0b100010..
 *  0b100011..
 *  0b100100..
 *  0b100101..
 *  0b100110..
 *  0b100111..
 *  0b101000..
 *  0b101001..
 *  0b101010..
 *  0b101011..
 *  0b101100..
 *  0b101101..
 *  0b101110..
 *  0b101111..
 *  0b110000..
 *  0b110001..
 *  0b110010..
 *  0b110011..
 *  0b110100..
 *  0b110101..
 *  0b110110..
 *  0b110111..
 *  0b111000..
 *  0b111001..
 *  0b111010..
 *  0b111011..
 *  0b111100..
 *  0b111101..
 *  0b111110..
 *  0b111111..X6
 */
#define IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_DSE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_DSE_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_DSE_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_FSEL1_MASK (0x180U)
#define IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_FSEL1_SHIFT (7U)
/*! FSEL1 - Slew Rate Field
 *  0b00..
 *  0b01..
 *  0b10..Slight Fast Slew Rate
 *  0b11..Fast Slew Rate
 */
#define IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_FSEL1(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_FSEL1_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_FSEL1_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_PU_MASK  (0x200U)
#define IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_PU_SHIFT (9U)
/*! PU - Pull Up Field
 *  0b0..No pull up
 *  0b1..Pull up
 */
#define IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_PU(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_PU_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_PU_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_PD_MASK  (0x400U)
#define IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_PD_SHIFT (10U)
/*! PD - Pull Down Field
 *  0b0..Not pull down
 *  0b1..Pull down
 */
#define IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_PD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_PD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_PD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_OD_MASK  (0x800U)
#define IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_OD_SHIFT (11U)
/*! OD - Open Drain Field
 *  0b0..Open Drain Disable
 *  0b1..Open Drain Enable
 */
#define IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_OD(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_OD_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_OD_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_HYS_MASK (0x1000U)
#define IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_HYS_SHIFT (12U)
/*! HYS - Schmitt trigger Field
 *  0b0..No Schmitt input
 *  0b1..Schmitt input
 */
#define IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_HYS(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_HYS_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_HYS_MASK)

#define IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_APC_MASK (0xFF000000U)
#define IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_APC_SHIFT (24U)
/*! APC - Domain Access Field
 *  0b00000000..
 *  0b00000001..
 *  0b00000010..
 *  0b00000011..
 *  0b00000100..
 *  0b00000101..
 *  0b00000110..
 *  0b00000111..
 *  0b00001000..
 *  0b00001001..
 *  0b00001010..
 *  0b00001011..
 *  0b00001100..
 *  0b00001101..
 *  0b00001110..
 *  0b00001111..
 *  0b00010000..
 *  0b00010001..
 *  0b00010010..
 *  0b00010011..
 *  0b00010100..
 *  0b00010101..
 *  0b00010110..
 *  0b00010111..
 *  0b00011000..
 *  0b00011001..
 *  0b00011010..
 *  0b00011011..
 *  0b00011100..
 *  0b00011101..
 *  0b00011110..
 *  0b00011111..
 *  0b00100000..
 *  0b00100001..
 *  0b00100010..
 *  0b00100011..
 *  0b00100100..
 *  0b00100101..
 *  0b00100110..
 *  0b00100111..
 *  0b00101000..
 *  0b00101001..
 *  0b00101010..
 *  0b00101011..
 *  0b00101100..
 *  0b00101101..
 *  0b00101110..
 *  0b00101111..
 *  0b00110000..
 *  0b00110001..
 *  0b00110010..
 *  0b00110011..
 *  0b00110100..
 *  0b00110101..
 *  0b00110110..
 *  0b00110111..
 *  0b00111000..
 *  0b00111001..
 *  0b00111010..
 *  0b00111011..
 *  0b00111100..
 *  0b00111101..
 *  0b00111110..
 *  0b00111111..
 *  0b01000000..
 *  0b01000001..
 *  0b01000010..
 *  0b01000011..
 *  0b01000100..
 *  0b01000101..
 *  0b01000110..
 *  0b01000111..
 *  0b01001000..
 *  0b01001001..
 *  0b01001010..
 *  0b01001011..
 *  0b01001100..
 *  0b01001101..
 *  0b01001110..
 *  0b01001111..
 *  0b01010000..
 *  0b01010001..
 *  0b01010010..
 *  0b01010011..
 *  0b01010100..
 *  0b01010101..
 *  0b01010110..
 *  0b01010111..
 *  0b01011000..
 *  0b01011001..
 *  0b01011010..
 *  0b01011011..
 *  0b01011100..
 *  0b01011101..
 *  0b01011110..
 *  0b01011111..
 *  0b01100000..
 *  0b01100001..
 *  0b01100010..
 *  0b01100011..
 *  0b01100100..
 *  0b01100101..
 *  0b01100110..
 *  0b01100111..
 *  0b01101000..
 *  0b01101001..
 *  0b01101010..
 *  0b01101011..
 *  0b01101100..
 *  0b01101101..
 *  0b01101110..
 *  0b01101111..
 *  0b01110000..
 *  0b01110001..
 *  0b01110010..
 *  0b01110011..
 *  0b01110100..
 *  0b01110101..
 *  0b01110110..
 *  0b01110111..
 *  0b01111000..
 *  0b01111001..
 *  0b01111010..
 *  0b01111011..
 *  0b01111100..
 *  0b01111101..
 *  0b01111110..
 *  0b01111111..
 *  0b10000000..
 *  0b10000001..
 *  0b10000010..
 *  0b10000011..
 *  0b10000100..
 *  0b10000101..
 *  0b10000110..
 *  0b10000111..
 *  0b10001000..
 *  0b10001001..
 *  0b10001010..
 *  0b10001011..
 *  0b10001100..
 *  0b10001101..
 *  0b10001110..
 *  0b10001111..
 *  0b10010000..
 *  0b10010001..
 *  0b10010010..
 *  0b10010011..
 *  0b10010100..
 *  0b10010101..
 *  0b10010110..
 *  0b10010111..
 *  0b10011000..
 *  0b10011001..
 *  0b10011010..
 *  0b10011011..
 *  0b10011100..
 *  0b10011101..
 *  0b10011110..
 *  0b10011111..
 *  0b10100000..
 *  0b10100001..
 *  0b10100010..
 *  0b10100011..
 *  0b10100100..
 *  0b10100101..
 *  0b10100110..
 *  0b10100111..
 *  0b10101000..
 *  0b10101001..
 *  0b10101010..
 *  0b10101011..
 *  0b10101100..
 *  0b10101101..
 *  0b10101110..
 *  0b10101111..
 *  0b10110000..
 *  0b10110001..
 *  0b10110010..
 *  0b10110011..
 *  0b10110100..
 *  0b10110101..
 *  0b10110110..
 *  0b10110111..
 *  0b10111000..
 *  0b10111001..
 *  0b10111010..
 *  0b10111011..
 *  0b10111100..
 *  0b10111101..
 *  0b10111110..
 *  0b10111111..
 *  0b11000000..
 *  0b11000001..
 *  0b11000010..
 *  0b11000011..
 *  0b11000100..
 *  0b11000101..
 *  0b11000110..
 *  0b11000111..
 *  0b11001000..
 *  0b11001001..
 *  0b11001010..
 *  0b11001011..
 *  0b11001100..
 *  0b11001101..
 *  0b11001110..
 *  0b11001111..
 *  0b11010000..
 *  0b11010001..
 *  0b11010010..
 *  0b11010011..
 *  0b11010100..
 *  0b11010101..
 *  0b11010110..
 *  0b11010111..
 *  0b11011000..
 *  0b11011001..
 *  0b11011010..
 *  0b11011011..
 *  0b11011100..
 *  0b11011101..
 *  0b11011110..
 *  0b11011111..
 *  0b11100000..
 *  0b11100001..
 *  0b11100010..
 *  0b11100011..
 *  0b11100100..
 *  0b11100101..
 *  0b11100110..
 *  0b11100111..
 *  0b11101000..
 *  0b11101001..
 *  0b11101010..
 *  0b11101011..
 *  0b11101100..
 *  0b11101101..
 *  0b11101110..
 *  0b11101111..
 *  0b11110000..
 *  0b11110001..
 *  0b11110010..
 *  0b11110011..
 *  0b11110100..
 *  0b11110101..
 *  0b11110110..
 *  0b11110111..
 *  0b11111000..
 *  0b11111001..
 *  0b11111010..
 *  0b11111011..
 *  0b11111100..
 *  0b11111101..
 *  0b11111110..
 *  0b11111111..
 */
#define IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_APC(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_APC_SHIFT)) & IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0_APC_MASK)
/*! @} */

/*! @name CAN1_IPP_IND_CANRX_SELECT_INPUT - CAN1_IPP_IND_CANRX_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_CAN1_IPP_IND_CANRX_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_CAN1_IPP_IND_CANRX_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: PDM_BIT_STREAM0 for Mode: ALT6
 *  0b1..Selecting Pad: SAI1_TXC for Mode: ALT4
 */
#define IOMUXC_CAN1_IPP_IND_CANRX_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_CAN1_IPP_IND_CANRX_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_CAN1_IPP_IND_CANRX_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_0 - PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_0 DAISY Register */
/*! @{ */

#define IOMUXC_PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_0_DAISY_MASK (0x3U)
#define IOMUXC_PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_0_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b00..Selecting Pad: PDM_BIT_STREAM0 for Mode: ALT0
 *  0b01..Selecting Pad: GPIO_IO05 for Mode: ALT2
 *  0b10..Selecting Pad: GPIO_IO20 for Mode: ALT2
 */
#define IOMUXC_PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_0_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_0_DAISY_SHIFT)) & IOMUXC_PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_0_DAISY_MASK)
/*! @} */

/*! @name PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_1 - PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_1 DAISY Register */
/*! @{ */

#define IOMUXC_PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_1_DAISY_MASK (0x3U)
#define IOMUXC_PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_1_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b00..Selecting Pad: PDM_BIT_STREAM1 for Mode: ALT0
 *  0b01..Selecting Pad: GPIO_IO06 for Mode: ALT2
 *  0b10..Selecting Pad: GPIO_IO26 for Mode: ALT2
 */
#define IOMUXC_PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_1_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_1_DAISY_SHIFT)) & IOMUXC_PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_1_DAISY_MASK)
/*! @} */

/*! @name PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_2 - PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_2 DAISY Register */
/*! @{ */

#define IOMUXC_PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_2_DAISY_MASK (0x1U)
#define IOMUXC_PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_2_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO12 for Mode: ALT2
 *  0b1..Selecting Pad: GPIO_IO16 for Mode: ALT2
 */
#define IOMUXC_PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_2_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_2_DAISY_SHIFT)) & IOMUXC_PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_2_DAISY_MASK)
/*! @} */

/*! @name PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_3 - PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_3 DAISY Register */
/*! @{ */

#define IOMUXC_PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_3_DAISY_MASK (0x1U)
#define IOMUXC_PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_3_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO13 for Mode: ALT2
 *  0b1..Selecting Pad: GPIO_IO19 for Mode: ALT2
 */
#define IOMUXC_PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_3_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_3_DAISY_SHIFT)) & IOMUXC_PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_3_DAISY_MASK)
/*! @} */

/*! @name SAI1_IPP_IND_SAI_MCLK_SELECT_INPUT - SAI1_IPP_IND_SAI_MCLK_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_SAI1_IPP_IND_SAI_MCLK_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_SAI1_IPP_IND_SAI_MCLK_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: UART2_RXD for Mode: ALT4
 *  0b1..Selecting Pad: SAI1_RXD0 for Mode: ALT1
 */
#define IOMUXC_SAI1_IPP_IND_SAI_MCLK_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SAI1_IPP_IND_SAI_MCLK_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_SAI1_IPP_IND_SAI_MCLK_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name EXT1_CLK_SELECT_INPUT - EXT1_CLK_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_EXT1_CLK_SELECT_INPUT_DAISY_MASK  (0x1U)
#define IOMUXC_EXT1_CLK_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: PDM_BIT_STREAM1 for Mode: ALT6
 *  0b1..Selecting Pad: SD2_VSELECT for Mode: ALT6
 */
#define IOMUXC_EXT1_CLK_SELECT_INPUT_DAISY(x)    (((uint32_t)(((uint32_t)(x)) << IOMUXC_EXT1_CLK_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_EXT1_CLK_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name NETC_CMPLX_EMDC_IN_SELECT_INPUT - NETC_CMPLX_EMDC_IN_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_NETC_CMPLX_EMDC_IN_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_NETC_CMPLX_EMDC_IN_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: ENET1_MDC for Mode: ALT0
 *  0b1..Selecting Pad: ENET2_MDC for Mode: ALT0
 */
#define IOMUXC_NETC_CMPLX_EMDC_IN_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_NETC_CMPLX_EMDC_IN_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_NETC_CMPLX_EMDC_IN_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name NETC_CMPLX_EMDIO_IN_SELECT_INPUT - NETC_CMPLX_EMDIO_IN_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_NETC_CMPLX_EMDIO_IN_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_NETC_CMPLX_EMDIO_IN_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: ENET1_MDIO for Mode: ALT0
 *  0b1..Selecting Pad: ENET2_MDIO for Mode: ALT0
 */
#define IOMUXC_NETC_CMPLX_EMDIO_IN_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_NETC_CMPLX_EMDIO_IN_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_NETC_CMPLX_EMDIO_IN_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name NETC_CMPLX_ETH0_RMII_RX_ER_SELECT_INPUT - NETC_CMPLX_ETH0_RMII_RX_ER_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_NETC_CMPLX_ETH0_RMII_RX_ER_SELECT_INPUT_DAISY_MASK (0x3U)
#define IOMUXC_NETC_CMPLX_ETH0_RMII_RX_ER_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b00..Selecting Pad: ENET1_RXC for Mode: ALT1
 *  0b01..Selecting Pad: ENET1_RD2 for Mode: ALT2
 *  0b10..Selecting Pad: ENET2_RXC for Mode: ALT1
 *  0b11..Selecting Pad: ENET2_RD2 for Mode: ALT6
 */
#define IOMUXC_NETC_CMPLX_ETH0_RMII_RX_ER_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_NETC_CMPLX_ETH0_RMII_RX_ER_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_NETC_CMPLX_ETH0_RMII_RX_ER_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name NETC_CMPLX_TMR_1588_TRIG1_SELECT_INPUT - NETC_CMPLX_TMR_1588_TRIG1_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_NETC_CMPLX_TMR_1588_TRIG1_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_NETC_CMPLX_TMR_1588_TRIG1_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: CCM_CLKO1 for Mode: ALT1
 *  0b1..Selecting Pad: SD2_CD_B for Mode: ALT1
 */
#define IOMUXC_NETC_CMPLX_TMR_1588_TRIG1_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_NETC_CMPLX_TMR_1588_TRIG1_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_NETC_CMPLX_TMR_1588_TRIG1_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name NETC_CMPLX_TMR_1588_TRIG2_SELECT_INPUT - NETC_CMPLX_TMR_1588_TRIG2_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_NETC_CMPLX_TMR_1588_TRIG2_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_NETC_CMPLX_TMR_1588_TRIG2_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: CCM_CLKO3 for Mode: ALT1
 *  0b1..Selecting Pad: SD2_CMD for Mode: ALT1
 */
#define IOMUXC_NETC_CMPLX_TMR_1588_TRIG2_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_NETC_CMPLX_TMR_1588_TRIG2_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_NETC_CMPLX_TMR_1588_TRIG2_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name SAI2_IPP_IND_SAI_RXDATA_SELECT_INPUT_6 - SAI2_IPP_IND_SAI_RXDATA_SELECT_INPUT_6 DAISY Register */
/*! @{ */

#define IOMUXC_SAI2_IPP_IND_SAI_RXDATA_SELECT_INPUT_6_DAISY_MASK (0x1U)
#define IOMUXC_SAI2_IPP_IND_SAI_RXDATA_SELECT_INPUT_6_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: XSPI1_DATA5 for Mode: ALT3
 *  0b1..Selecting Pad: XSPI1_DQS for Mode: ALT3
 */
#define IOMUXC_SAI2_IPP_IND_SAI_RXDATA_SELECT_INPUT_6_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SAI2_IPP_IND_SAI_RXDATA_SELECT_INPUT_6_DAISY_SHIFT)) & IOMUXC_SAI2_IPP_IND_SAI_RXDATA_SELECT_INPUT_6_DAISY_MASK)
/*! @} */

/*! @name SAI2_IPP_IND_SAI_RXDATA_SELECT_INPUT_7 - SAI2_IPP_IND_SAI_RXDATA_SELECT_INPUT_7 DAISY Register */
/*! @{ */

#define IOMUXC_SAI2_IPP_IND_SAI_RXDATA_SELECT_INPUT_7_DAISY_MASK (0x1U)
#define IOMUXC_SAI2_IPP_IND_SAI_RXDATA_SELECT_INPUT_7_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: XSPI1_DATA6 for Mode: ALT3
 *  0b1..Selecting Pad: XSPI1_SS1_B for Mode: ALT3
 */
#define IOMUXC_SAI2_IPP_IND_SAI_RXDATA_SELECT_INPUT_7_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SAI2_IPP_IND_SAI_RXDATA_SELECT_INPUT_7_DAISY_SHIFT)) & IOMUXC_SAI2_IPP_IND_SAI_RXDATA_SELECT_INPUT_7_DAISY_MASK)
/*! @} */

/*! @name CAN2_IPP_IND_CANRX_SELECT_INPUT - CAN2_IPP_IND_CANRX_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_CAN2_IPP_IND_CANRX_SELECT_INPUT_DAISY_MASK (0x3U)
#define IOMUXC_CAN2_IPP_IND_CANRX_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b00..Selecting Pad: DAP_TDO_TRACESWO for Mode: ALT3
 *  0b01..Selecting Pad: ENET1_TD2 for Mode: ALT2
 *  0b10..Selecting Pad: GPIO_IO27 for Mode: ALT2
 *  0b11..Selecting Pad: SD2_DATA1 for Mode: ALT2
 */
#define IOMUXC_CAN2_IPP_IND_CANRX_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_CAN2_IPP_IND_CANRX_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_CAN2_IPP_IND_CANRX_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name CAN3_IPP_IND_CANRX_SELECT_INPUT - CAN3_IPP_IND_CANRX_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_CAN3_IPP_IND_CANRX_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_CAN3_IPP_IND_CANRX_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: CCM_CLKO4 for Mode: ALT2
 *  0b1..Selecting Pad: GPIO_IO29 for Mode: ALT2
 */
#define IOMUXC_CAN3_IPP_IND_CANRX_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_CAN3_IPP_IND_CANRX_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_CAN3_IPP_IND_CANRX_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name CAN4_IPP_IND_CANRX_SELECT_INPUT - CAN4_IPP_IND_CANRX_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_CAN4_IPP_IND_CANRX_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_CAN4_IPP_IND_CANRX_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: DAP_TCLK_SWCLK for Mode: ALT2
 *  0b1..Selecting Pad: GPIO_IO05 for Mode: ALT3
 */
#define IOMUXC_CAN4_IPP_IND_CANRX_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_CAN4_IPP_IND_CANRX_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_CAN4_IPP_IND_CANRX_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name CAN5_IPP_IND_CANRX_SELECT_INPUT - CAN5_IPP_IND_CANRX_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_CAN5_IPP_IND_CANRX_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_CAN5_IPP_IND_CANRX_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO23 for Mode: ALT3
 *  0b1..Selecting Pad: GPIO_IO31 for Mode: ALT2
 */
#define IOMUXC_CAN5_IPP_IND_CANRX_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_CAN5_IPP_IND_CANRX_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_CAN5_IPP_IND_CANRX_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_26 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_26 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_26_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_26_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: CCM_CLKO1 for Mode: ALT4
 *  0b1..Selecting Pad: GPIO_IO26 for Mode: ALT3
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_26_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_26_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_26_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_27 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_27 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_27_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_27_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: CCM_CLKO2 for Mode: ALT4
 *  0b1..Selecting Pad: GPIO_IO27 for Mode: ALT7
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_27_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_27_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_27_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_30 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_30 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_30_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_30_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: DAP_TCLK_SWCLK for Mode: ALT4
 *  0b1..Selecting Pad: GPIO_IO30 for Mode: ALT7
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_30_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_30_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_30_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_31 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_31 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_31_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_31_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: DAP_TDO_TRACESWO for Mode: ALT4
 *  0b1..Selecting Pad: GPIO_IO31 for Mode: ALT7
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_31_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_31_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_31_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_0 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_0 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_0_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_0_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO00 for Mode: ALT7
 *  0b1..Selecting Pad: SD2_CD_B for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_0_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_0_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_0_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_1 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_1 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_1_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_1_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO01 for Mode: ALT7
 *  0b1..Selecting Pad: SD2_CLK for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_1_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_1_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_1_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_2 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_2 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_2_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_2_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO02 for Mode: ALT7
 *  0b1..Selecting Pad: SD2_CMD for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_2_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_2_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_2_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_3 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_3 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_3_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_3_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO03 for Mode: ALT7
 *  0b1..Selecting Pad: SD2_DATA0 for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_3_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_3_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_3_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_4 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_4 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_4_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_4_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO04 for Mode: ALT7
 *  0b1..Selecting Pad: SD2_DATA1 for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_4_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_4_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_4_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_5 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_5 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_5_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_5_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO05 for Mode: ALT7
 *  0b1..Selecting Pad: SD2_DATA2 for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_5_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_5_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_5_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_6 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_6 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_6_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_6_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO06 for Mode: ALT7
 *  0b1..Selecting Pad: SD2_DATA3 for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_6_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_6_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_6_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_7 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_7 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_7_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_7_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO07 for Mode: ALT7
 *  0b1..Selecting Pad: SD2_RESET_B for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_7_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_7_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_7_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_8 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_8 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_8_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_8_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO08 for Mode: ALT7
 *  0b1..Selecting Pad: SD1_CLK for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_8_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_8_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_8_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_9 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_9 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_9_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_9_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO09 for Mode: ALT7
 *  0b1..Selecting Pad: SD1_CMD for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_9_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_9_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_9_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_10 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_10 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_10_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_10_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO10 for Mode: ALT7
 *  0b1..Selecting Pad: SD1_DATA0 for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_10_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_10_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_10_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_11 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_11 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_11_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_11_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO11 for Mode: ALT7
 *  0b1..Selecting Pad: SD1_DATA1 for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_11_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_11_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_11_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_12 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_12 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_12_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_12_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO12 for Mode: ALT3
 *  0b1..Selecting Pad: SD1_DATA2 for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_12_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_12_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_12_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_13 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_13 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_13_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_13_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO13 for Mode: ALT7
 *  0b1..Selecting Pad: SD1_DATA3 for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_13_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_13_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_13_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_14 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_14 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_14_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_14_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO14 for Mode: ALT7
 *  0b1..Selecting Pad: SD1_DATA4 for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_14_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_14_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_14_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_15 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_15 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_15_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_15_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO15 for Mode: ALT7
 *  0b1..Selecting Pad: SD1_DATA5 for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_15_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_15_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_15_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_16 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_16 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_16_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_16_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO16 for Mode: ALT7
 *  0b1..Selecting Pad: SD1_DATA6 for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_16_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_16_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_16_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_17 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_17 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_17_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_17_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO17 for Mode: ALT7
 *  0b1..Selecting Pad: SD1_DATA7 for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_17_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_17_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_17_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_18 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_18 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_18_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_18_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO18 for Mode: ALT7
 *  0b1..Selecting Pad: SD1_STROBE for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_18_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_18_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_18_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_19 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_19 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_19_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_19_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO19 for Mode: ALT3
 *  0b1..Selecting Pad: SD2_VSELECT for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_19_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_19_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_19_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_20 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_20 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_20_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_20_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO20 for Mode: ALT7
 *  0b1..Selecting Pad: SD3_CLK for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_20_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_20_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_20_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_21 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_21 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_21_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_21_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO21 for Mode: ALT3
 *  0b1..Selecting Pad: SD3_CMD for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_21_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_21_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_21_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_22 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_22 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_22_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_22_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO22 for Mode: ALT7
 *  0b1..Selecting Pad: SD3_DATA0 for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_22_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_22_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_22_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_23 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_23 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_23_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_23_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO23 for Mode: ALT7
 *  0b1..Selecting Pad: SD3_DATA1 for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_23_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_23_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_23_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_24 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_24 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_24_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_24_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO24 for Mode: ALT7
 *  0b1..Selecting Pad: SD3_DATA2 for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_24_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_24_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_24_DAISY_MASK)
/*! @} */

/*! @name FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_25 - FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_25 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_25_DAISY_MASK (0x1U)
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_25_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO25 for Mode: ALT7
 *  0b1..Selecting Pad: SD3_DATA3 for Mode: ALT4
 */
#define IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_25_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_25_DAISY_SHIFT)) & IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_25_DAISY_MASK)
/*! @} */

/*! @name FLEXSPI1_I_IPP_IND_DQS_FA_SELECT_INPUT - FLEXSPI1_I_IPP_IND_DQS_FA_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_FLEXSPI1_I_IPP_IND_DQS_FA_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_FLEXSPI1_I_IPP_IND_DQS_FA_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: SD1_STROBE for Mode: ALT1
 *  0b1..Selecting Pad: XSPI1_DQS for Mode: ALT0
 */
#define IOMUXC_FLEXSPI1_I_IPP_IND_DQS_FA_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXSPI1_I_IPP_IND_DQS_FA_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_FLEXSPI1_I_IPP_IND_DQS_FA_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_0 - FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_0 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_0_DAISY_MASK (0x1U)
#define IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_0_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: SD3_DATA0 for Mode: ALT1
 *  0b1..Selecting Pad: XSPI1_DATA0 for Mode: ALT0
 */
#define IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_0_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_0_DAISY_SHIFT)) & IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_0_DAISY_MASK)
/*! @} */

/*! @name FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_1 - FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_1 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_1_DAISY_MASK (0x1U)
#define IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_1_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: SD3_DATA1 for Mode: ALT1
 *  0b1..Selecting Pad: XSPI1_DATA1 for Mode: ALT0
 */
#define IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_1_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_1_DAISY_SHIFT)) & IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_1_DAISY_MASK)
/*! @} */

/*! @name FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_2 - FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_2 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_2_DAISY_MASK (0x1U)
#define IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_2_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: SD3_DATA2 for Mode: ALT1
 *  0b1..Selecting Pad: XSPI1_DATA2 for Mode: ALT0
 */
#define IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_2_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_2_DAISY_SHIFT)) & IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_2_DAISY_MASK)
/*! @} */

/*! @name FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_3 - FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_3 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_3_DAISY_MASK (0x1U)
#define IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_3_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: SD3_DATA3 for Mode: ALT1
 *  0b1..Selecting Pad: XSPI1_DATA3 for Mode: ALT0
 */
#define IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_3_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_3_DAISY_SHIFT)) & IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_3_DAISY_MASK)
/*! @} */

/*! @name FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_4 - FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_4 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_4_DAISY_MASK (0x1U)
#define IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_4_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: SD1_DATA4 for Mode: ALT1
 *  0b1..Selecting Pad: XSPI1_DATA4 for Mode: ALT0
 */
#define IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_4_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_4_DAISY_SHIFT)) & IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_4_DAISY_MASK)
/*! @} */

/*! @name FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_5 - FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_5 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_5_DAISY_MASK (0x1U)
#define IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_5_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: SD1_DATA5 for Mode: ALT1
 *  0b1..Selecting Pad: XSPI1_DATA5 for Mode: ALT0
 */
#define IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_5_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_5_DAISY_SHIFT)) & IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_5_DAISY_MASK)
/*! @} */

/*! @name FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_6 - FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_6 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_6_DAISY_MASK (0x1U)
#define IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_6_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: SD1_DATA6 for Mode: ALT1
 *  0b1..Selecting Pad: XSPI1_DATA6 for Mode: ALT0
 */
#define IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_6_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_6_DAISY_SHIFT)) & IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_6_DAISY_MASK)
/*! @} */

/*! @name FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_7 - FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_7 DAISY Register */
/*! @{ */

#define IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_7_DAISY_MASK (0x1U)
#define IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_7_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: SD1_DATA7 for Mode: ALT1
 *  0b1..Selecting Pad: XSPI1_DATA7 for Mode: ALT0
 */
#define IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_7_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_7_DAISY_SHIFT)) & IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_7_DAISY_MASK)
/*! @} */

/*! @name FLEXSPI1_I_IPP_IND_SCK_FA_SELECT_INPUT - FLEXSPI1_I_IPP_IND_SCK_FA_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_FLEXSPI1_I_IPP_IND_SCK_FA_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_FLEXSPI1_I_IPP_IND_SCK_FA_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: SD3_CLK for Mode: ALT1
 *  0b1..Selecting Pad: XSPI1_SCLK for Mode: ALT0
 */
#define IOMUXC_FLEXSPI1_I_IPP_IND_SCK_FA_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_FLEXSPI1_I_IPP_IND_SCK_FA_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_FLEXSPI1_I_IPP_IND_SCK_FA_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name I3C2_PIN_SCL_IN_SELECT_INPUT - I3C2_PIN_SCL_IN_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_I3C2_PIN_SCL_IN_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_I3C2_PIN_SCL_IN_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: ENET1_MDC for Mode: ALT2
 *  0b1..Selecting Pad: SD2_CD_B for Mode: ALT2
 */
#define IOMUXC_I3C2_PIN_SCL_IN_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_I3C2_PIN_SCL_IN_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_I3C2_PIN_SCL_IN_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name I3C2_PIN_SDA_IN_SELECT_INPUT - I3C2_PIN_SDA_IN_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_I3C2_PIN_SDA_IN_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_I3C2_PIN_SDA_IN_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: ENET1_MDIO for Mode: ALT2
 *  0b1..Selecting Pad: SD2_CLK for Mode: ALT2
 */
#define IOMUXC_I3C2_PIN_SDA_IN_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_I3C2_PIN_SDA_IN_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_I3C2_PIN_SDA_IN_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name I_IPP_IND_IO_FA_SELECT_INPUT_0 - I_IPP_IND_IO_FA_SELECT_INPUT_0 DAISY Register */
/*! @{ */

#define IOMUXC_I_IPP_IND_IO_FA_SELECT_INPUT_0_DAISY_MASK (0x1U)
#define IOMUXC_I_IPP_IND_IO_FA_SELECT_INPUT_0_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: SD3_DATA0 for Mode: ALT6
 *  0b1..Selecting Pad: XSPI1_DATA0 for Mode: ALT4
 */
#define IOMUXC_I_IPP_IND_IO_FA_SELECT_INPUT_0_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_I_IPP_IND_IO_FA_SELECT_INPUT_0_DAISY_SHIFT)) & IOMUXC_I_IPP_IND_IO_FA_SELECT_INPUT_0_DAISY_MASK)
/*! @} */

/*! @name I_IPP_IND_IO_FA_SELECT_INPUT_1 - I_IPP_IND_IO_FA_SELECT_INPUT_1 DAISY Register */
/*! @{ */

#define IOMUXC_I_IPP_IND_IO_FA_SELECT_INPUT_1_DAISY_MASK (0x1U)
#define IOMUXC_I_IPP_IND_IO_FA_SELECT_INPUT_1_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: SD3_DATA1 for Mode: ALT6
 *  0b1..Selecting Pad: XSPI1_DATA1 for Mode: ALT4
 */
#define IOMUXC_I_IPP_IND_IO_FA_SELECT_INPUT_1_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_I_IPP_IND_IO_FA_SELECT_INPUT_1_DAISY_SHIFT)) & IOMUXC_I_IPP_IND_IO_FA_SELECT_INPUT_1_DAISY_MASK)
/*! @} */

/*! @name I_IPP_IND_IO_FA_SELECT_INPUT_2 - I_IPP_IND_IO_FA_SELECT_INPUT_2 DAISY Register */
/*! @{ */

#define IOMUXC_I_IPP_IND_IO_FA_SELECT_INPUT_2_DAISY_MASK (0x1U)
#define IOMUXC_I_IPP_IND_IO_FA_SELECT_INPUT_2_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: SD3_DATA2 for Mode: ALT6
 *  0b1..Selecting Pad: XSPI1_DATA2 for Mode: ALT4
 */
#define IOMUXC_I_IPP_IND_IO_FA_SELECT_INPUT_2_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_I_IPP_IND_IO_FA_SELECT_INPUT_2_DAISY_SHIFT)) & IOMUXC_I_IPP_IND_IO_FA_SELECT_INPUT_2_DAISY_MASK)
/*! @} */

/*! @name I_IPP_IND_IO_FA_SELECT_INPUT_3 - I_IPP_IND_IO_FA_SELECT_INPUT_3 DAISY Register */
/*! @{ */

#define IOMUXC_I_IPP_IND_IO_FA_SELECT_INPUT_3_DAISY_MASK (0x1U)
#define IOMUXC_I_IPP_IND_IO_FA_SELECT_INPUT_3_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: SD3_DATA3 for Mode: ALT6
 *  0b1..Selecting Pad: XSPI1_DATA3 for Mode: ALT4
 */
#define IOMUXC_I_IPP_IND_IO_FA_SELECT_INPUT_3_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_I_IPP_IND_IO_FA_SELECT_INPUT_3_DAISY_SHIFT)) & IOMUXC_I_IPP_IND_IO_FA_SELECT_INPUT_3_DAISY_MASK)
/*! @} */

/*! @name I_IPP_IND_SCK_FA_SELECT_INPUT - I_IPP_IND_SCK_FA_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_I_IPP_IND_SCK_FA_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_I_IPP_IND_SCK_FA_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: SD3_CLK for Mode: ALT6
 *  0b1..Selecting Pad: XSPI1_SCLK for Mode: ALT4
 */
#define IOMUXC_I_IPP_IND_SCK_FA_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_I_IPP_IND_SCK_FA_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_I_IPP_IND_SCK_FA_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPI2C3_IPP_IND_LPI2C_SCL_SELECT_INPUT - LPI2C3_IPP_IND_LPI2C_SCL_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPI2C3_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPI2C3_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO01 for Mode: ALT1
 *  0b1..Selecting Pad: GPIO_IO29 for Mode: ALT1
 */
#define IOMUXC_LPI2C3_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPI2C3_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPI2C3_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPI2C3_IPP_IND_LPI2C_SDA_SELECT_INPUT - LPI2C3_IPP_IND_LPI2C_SDA_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPI2C3_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPI2C3_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO00 for Mode: ALT1
 *  0b1..Selecting Pad: GPIO_IO28 for Mode: ALT1
 */
#define IOMUXC_LPI2C3_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPI2C3_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPI2C3_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPI2C4_IPP_IND_LPI2C_SCL_SELECT_INPUT - LPI2C4_IPP_IND_LPI2C_SCL_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPI2C4_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPI2C4_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO03 for Mode: ALT1
 *  0b1..Selecting Pad: GPIO_IO31 for Mode: ALT1
 */
#define IOMUXC_LPI2C4_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPI2C4_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPI2C4_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPI2C4_IPP_IND_LPI2C_SDA_SELECT_INPUT - LPI2C4_IPP_IND_LPI2C_SDA_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPI2C4_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPI2C4_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO02 for Mode: ALT1
 *  0b1..Selecting Pad: GPIO_IO30 for Mode: ALT1
 */
#define IOMUXC_LPI2C4_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPI2C4_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPI2C4_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPI2C5_IPP_IND_LPI2C_SCL_SELECT_INPUT - LPI2C5_IPP_IND_LPI2C_SCL_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPI2C5_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPI2C5_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO01 for Mode: ALT6
 *  0b1..Selecting Pad: GPIO_IO23 for Mode: ALT6
 */
#define IOMUXC_LPI2C5_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPI2C5_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPI2C5_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPI2C5_IPP_IND_LPI2C_SDA_SELECT_INPUT - LPI2C5_IPP_IND_LPI2C_SDA_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPI2C5_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPI2C5_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO00 for Mode: ALT6
 *  0b1..Selecting Pad: GPIO_IO22 for Mode: ALT6
 */
#define IOMUXC_LPI2C5_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPI2C5_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPI2C5_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPI2C6_IPP_IND_LPI2C_SCL_SELECT_INPUT - LPI2C6_IPP_IND_LPI2C_SCL_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPI2C6_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPI2C6_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO03 for Mode: ALT6
 *  0b1..Selecting Pad: GPIO_IO05 for Mode: ALT6
 */
#define IOMUXC_LPI2C6_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPI2C6_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPI2C6_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPI2C6_IPP_IND_LPI2C_SDA_SELECT_INPUT - LPI2C6_IPP_IND_LPI2C_SDA_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPI2C6_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPI2C6_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO02 for Mode: ALT6
 *  0b1..Selecting Pad: GPIO_IO04 for Mode: ALT6
 */
#define IOMUXC_LPI2C6_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPI2C6_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPI2C6_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPI2C7_IPP_IND_LPI2C_SCL_SELECT_INPUT - LPI2C7_IPP_IND_LPI2C_SCL_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPI2C7_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPI2C7_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO07 for Mode: ALT6
 *  0b1..Selecting Pad: GPIO_IO09 for Mode: ALT6
 */
#define IOMUXC_LPI2C7_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPI2C7_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPI2C7_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPI2C7_IPP_IND_LPI2C_SDA_SELECT_INPUT - LPI2C7_IPP_IND_LPI2C_SDA_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPI2C7_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPI2C7_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO06 for Mode: ALT6
 *  0b1..Selecting Pad: GPIO_IO08 for Mode: ALT6
 */
#define IOMUXC_LPI2C7_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPI2C7_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPI2C7_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPI2C8_IPP_IND_LPI2C_SCL_SELECT_INPUT - LPI2C8_IPP_IND_LPI2C_SCL_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPI2C8_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPI2C8_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO11 for Mode: ALT6
 *  0b1..Selecting Pad: GPIO_IO13 for Mode: ALT6
 */
#define IOMUXC_LPI2C8_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPI2C8_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPI2C8_IPP_IND_LPI2C_SCL_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPI2C8_IPP_IND_LPI2C_SDA_SELECT_INPUT - LPI2C8_IPP_IND_LPI2C_SDA_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPI2C8_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPI2C8_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO10 for Mode: ALT6
 *  0b1..Selecting Pad: GPIO_IO12 for Mode: ALT6
 */
#define IOMUXC_LPI2C8_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPI2C8_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPI2C8_IPP_IND_LPI2C_SDA_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_0 - LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_0 DAISY Register */
/*! @{ */

#define IOMUXC_LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_0_DAISY_MASK (0x1U)
#define IOMUXC_LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_0_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO34 for Mode: ALT4
 *  0b1..Selecting Pad: GPIO_IO18 for Mode: ALT5
 */
#define IOMUXC_LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_0_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_0_DAISY_SHIFT)) & IOMUXC_LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_0_DAISY_MASK)
/*! @} */

/*! @name LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_1 - LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_1 DAISY Register */
/*! @{ */

#define IOMUXC_LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_1_DAISY_MASK (0x1U)
#define IOMUXC_LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_1_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO33 for Mode: ALT4
 *  0b1..Selecting Pad: GPIO_IO17 for Mode: ALT5
 */
#define IOMUXC_LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_1_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_1_DAISY_SHIFT)) & IOMUXC_LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_1_DAISY_MASK)
/*! @} */

/*! @name LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_2 - LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_2 DAISY Register */
/*! @{ */

#define IOMUXC_LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_2_DAISY_MASK (0x1U)
#define IOMUXC_LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_2_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO32 for Mode: ALT4
 *  0b1..Selecting Pad: GPIO_IO16 for Mode: ALT5
 */
#define IOMUXC_LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_2_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_2_DAISY_SHIFT)) & IOMUXC_LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_2_DAISY_MASK)
/*! @} */

/*! @name LPSPI4_IPP_IND_LPSPI_SCK_SELECT_INPUT - LPSPI4_IPP_IND_LPSPI_SCK_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPSPI4_IPP_IND_LPSPI_SCK_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPSPI4_IPP_IND_LPSPI_SCK_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO37 for Mode: ALT4
 *  0b1..Selecting Pad: GPIO_IO21 for Mode: ALT5
 */
#define IOMUXC_LPSPI4_IPP_IND_LPSPI_SCK_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPSPI4_IPP_IND_LPSPI_SCK_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPSPI4_IPP_IND_LPSPI_SCK_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPSPI4_IPP_IND_LPSPI_SDI_SELECT_INPUT - LPSPI4_IPP_IND_LPSPI_SDI_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPSPI4_IPP_IND_LPSPI_SDI_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPSPI4_IPP_IND_LPSPI_SDI_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO35 for Mode: ALT4
 *  0b1..Selecting Pad: GPIO_IO19 for Mode: ALT5
 */
#define IOMUXC_LPSPI4_IPP_IND_LPSPI_SDI_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPSPI4_IPP_IND_LPSPI_SDI_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPSPI4_IPP_IND_LPSPI_SDI_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPSPI4_IPP_IND_LPSPI_SDO_SELECT_INPUT - LPSPI4_IPP_IND_LPSPI_SDO_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPSPI4_IPP_IND_LPSPI_SDO_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPSPI4_IPP_IND_LPSPI_SDO_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO36 for Mode: ALT4
 *  0b1..Selecting Pad: GPIO_IO20 for Mode: ALT5
 */
#define IOMUXC_LPSPI4_IPP_IND_LPSPI_SDO_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPSPI4_IPP_IND_LPSPI_SDO_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPSPI4_IPP_IND_LPSPI_SDO_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_0 - LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_0 DAISY Register */
/*! @{ */

#define IOMUXC_LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_0_DAISY_MASK (0x1U)
#define IOMUXC_LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_0_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: ENET1_RD1 for Mode: ALT3
 *  0b1..Selecting Pad: SD2_DATA3 for Mode: ALT1
 */
#define IOMUXC_LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_0_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_0_DAISY_SHIFT)) & IOMUXC_LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_0_DAISY_MASK)
/*! @} */

/*! @name LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_1 - LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_1 DAISY Register */
/*! @{ */

#define IOMUXC_LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_1_DAISY_MASK (0x1U)
#define IOMUXC_LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_1_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: ENET1_RD2 for Mode: ALT3
 *  0b1..Selecting Pad: SD2_RESET_B for Mode: ALT1
 */
#define IOMUXC_LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_1_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_1_DAISY_SHIFT)) & IOMUXC_LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_1_DAISY_MASK)
/*! @} */

/*! @name LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_2 - LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_2 DAISY Register */
/*! @{ */

#define IOMUXC_LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_2_DAISY_MASK (0x1U)
#define IOMUXC_LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_2_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: ENET1_RD3 for Mode: ALT3
 *  0b1..Selecting Pad: SD2_VSELECT for Mode: ALT2
 */
#define IOMUXC_LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_2_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_2_DAISY_SHIFT)) & IOMUXC_LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_2_DAISY_MASK)
/*! @} */

/*! @name LPUART3_IPP_IND_LPUART_CTS_N_SELECT_INPUT - LPUART3_IPP_IND_LPUART_CTS_N_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPUART3_IPP_IND_LPUART_CTS_N_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPUART3_IPP_IND_LPUART_CTS_N_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: ENET1_RD1 for Mode: ALT1
 *  0b1..Selecting Pad: GPIO_IO16 for Mode: ALT4
 */
#define IOMUXC_LPUART3_IPP_IND_LPUART_CTS_N_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPUART3_IPP_IND_LPUART_CTS_N_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPUART3_IPP_IND_LPUART_CTS_N_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPUART3_IPP_IND_LPUART_RXD_SELECT_INPUT - LPUART3_IPP_IND_LPUART_RXD_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPUART3_IPP_IND_LPUART_RXD_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPUART3_IPP_IND_LPUART_RXD_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: ENET1_RD0 for Mode: ALT1
 *  0b1..Selecting Pad: GPIO_IO15 for Mode: ALT1
 */
#define IOMUXC_LPUART3_IPP_IND_LPUART_RXD_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPUART3_IPP_IND_LPUART_RXD_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPUART3_IPP_IND_LPUART_RXD_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPUART3_IPP_IND_LPUART_TXD_SELECT_INPUT - LPUART3_IPP_IND_LPUART_TXD_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPUART3_IPP_IND_LPUART_TXD_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPUART3_IPP_IND_LPUART_TXD_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: ENET1_TD0 for Mode: ALT1
 *  0b1..Selecting Pad: GPIO_IO14 for Mode: ALT1
 */
#define IOMUXC_LPUART3_IPP_IND_LPUART_TXD_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPUART3_IPP_IND_LPUART_TXD_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPUART3_IPP_IND_LPUART_TXD_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPUART4_IPP_IND_LPUART_CTS_N_SELECT_INPUT - LPUART4_IPP_IND_LPUART_CTS_N_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPUART4_IPP_IND_LPUART_CTS_N_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPUART4_IPP_IND_LPUART_CTS_N_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: ENET2_RD2 for Mode: ALT1
 *  0b1..Selecting Pad: GPIO_IO16 for Mode: ALT6
 */
#define IOMUXC_LPUART4_IPP_IND_LPUART_CTS_N_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPUART4_IPP_IND_LPUART_CTS_N_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPUART4_IPP_IND_LPUART_CTS_N_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPUART4_IPP_IND_LPUART_RXD_SELECT_INPUT - LPUART4_IPP_IND_LPUART_RXD_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPUART4_IPP_IND_LPUART_RXD_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPUART4_IPP_IND_LPUART_RXD_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: ENET2_RD0 for Mode: ALT1
 *  0b1..Selecting Pad: GPIO_IO15 for Mode: ALT6
 */
#define IOMUXC_LPUART4_IPP_IND_LPUART_RXD_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPUART4_IPP_IND_LPUART_RXD_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPUART4_IPP_IND_LPUART_RXD_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPUART4_IPP_IND_LPUART_TXD_SELECT_INPUT - LPUART4_IPP_IND_LPUART_TXD_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPUART4_IPP_IND_LPUART_TXD_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPUART4_IPP_IND_LPUART_TXD_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: ENET2_TD0 for Mode: ALT1
 *  0b1..Selecting Pad: GPIO_IO14 for Mode: ALT6
 */
#define IOMUXC_LPUART4_IPP_IND_LPUART_TXD_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPUART4_IPP_IND_LPUART_TXD_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPUART4_IPP_IND_LPUART_TXD_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPUART5_IPP_IND_LPUART_CTS_N_SELECT_INPUT - LPUART5_IPP_IND_LPUART_CTS_N_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPUART5_IPP_IND_LPUART_CTS_N_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPUART5_IPP_IND_LPUART_CTS_N_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: DAP_TCLK_SWCLK for Mode: ALT6
 *  0b1..Selecting Pad: GPIO_IO02 for Mode: ALT5
 */
#define IOMUXC_LPUART5_IPP_IND_LPUART_CTS_N_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPUART5_IPP_IND_LPUART_CTS_N_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPUART5_IPP_IND_LPUART_CTS_N_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPUART5_IPP_IND_LPUART_RXD_SELECT_INPUT - LPUART5_IPP_IND_LPUART_RXD_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPUART5_IPP_IND_LPUART_RXD_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPUART5_IPP_IND_LPUART_RXD_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: DAP_TDI for Mode: ALT6
 *  0b1..Selecting Pad: GPIO_IO01 for Mode: ALT5
 */
#define IOMUXC_LPUART5_IPP_IND_LPUART_RXD_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPUART5_IPP_IND_LPUART_RXD_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPUART5_IPP_IND_LPUART_RXD_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPUART5_IPP_IND_LPUART_TXD_SELECT_INPUT - LPUART5_IPP_IND_LPUART_TXD_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPUART5_IPP_IND_LPUART_TXD_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPUART5_IPP_IND_LPUART_TXD_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: DAP_TDO_TRACESWO for Mode: ALT6
 *  0b1..Selecting Pad: GPIO_IO00 for Mode: ALT5
 */
#define IOMUXC_LPUART5_IPP_IND_LPUART_TXD_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPUART5_IPP_IND_LPUART_TXD_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPUART5_IPP_IND_LPUART_TXD_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPUART6_IPP_IND_LPUART_CTS_N_SELECT_INPUT - LPUART6_IPP_IND_LPUART_CTS_N_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPUART6_IPP_IND_LPUART_CTS_N_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPUART6_IPP_IND_LPUART_CTS_N_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO34 for Mode: ALT2
 *  0b1..Selecting Pad: GPIO_IO06 for Mode: ALT5
 */
#define IOMUXC_LPUART6_IPP_IND_LPUART_CTS_N_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPUART6_IPP_IND_LPUART_CTS_N_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPUART6_IPP_IND_LPUART_CTS_N_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPUART6_IPP_IND_LPUART_RXD_SELECT_INPUT - LPUART6_IPP_IND_LPUART_RXD_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPUART6_IPP_IND_LPUART_RXD_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPUART6_IPP_IND_LPUART_RXD_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO33 for Mode: ALT2
 *  0b1..Selecting Pad: GPIO_IO05 for Mode: ALT5
 */
#define IOMUXC_LPUART6_IPP_IND_LPUART_RXD_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPUART6_IPP_IND_LPUART_RXD_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPUART6_IPP_IND_LPUART_RXD_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPUART6_IPP_IND_LPUART_TXD_SELECT_INPUT - LPUART6_IPP_IND_LPUART_TXD_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPUART6_IPP_IND_LPUART_TXD_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPUART6_IPP_IND_LPUART_TXD_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO32 for Mode: ALT2
 *  0b1..Selecting Pad: GPIO_IO04 for Mode: ALT5
 */
#define IOMUXC_LPUART6_IPP_IND_LPUART_TXD_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPUART6_IPP_IND_LPUART_TXD_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPUART6_IPP_IND_LPUART_TXD_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPUART7_IPP_IND_LPUART_RXD_SELECT_INPUT - LPUART7_IPP_IND_LPUART_RXD_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPUART7_IPP_IND_LPUART_RXD_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPUART7_IPP_IND_LPUART_RXD_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO37 for Mode: ALT2
 *  0b1..Selecting Pad: GPIO_IO09 for Mode: ALT5
 */
#define IOMUXC_LPUART7_IPP_IND_LPUART_RXD_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPUART7_IPP_IND_LPUART_RXD_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPUART7_IPP_IND_LPUART_RXD_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name LPUART7_IPP_IND_LPUART_TXD_SELECT_INPUT - LPUART7_IPP_IND_LPUART_TXD_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_LPUART7_IPP_IND_LPUART_TXD_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_LPUART7_IPP_IND_LPUART_TXD_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO36 for Mode: ALT2
 *  0b1..Selecting Pad: GPIO_IO08 for Mode: ALT5
 */
#define IOMUXC_LPUART7_IPP_IND_LPUART_TXD_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_LPUART7_IPP_IND_LPUART_TXD_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_LPUART7_IPP_IND_LPUART_TXD_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name SAI3_IPP_IND_SAI_RXBCLK_SELECT_INPUT - SAI3_IPP_IND_SAI_RXBCLK_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_SAI3_IPP_IND_SAI_RXBCLK_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_SAI3_IPP_IND_SAI_RXBCLK_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO18 for Mode: ALT1
 *  0b1..Selecting Pad: GPIO_IO21 for Mode: ALT7
 */
#define IOMUXC_SAI3_IPP_IND_SAI_RXBCLK_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SAI3_IPP_IND_SAI_RXBCLK_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_SAI3_IPP_IND_SAI_RXBCLK_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name SAI3_IPP_IND_SAI_RXSYNC_SELECT_INPUT - SAI3_IPP_IND_SAI_RXSYNC_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_SAI3_IPP_IND_SAI_RXSYNC_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_SAI3_IPP_IND_SAI_RXSYNC_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO12 for Mode: ALT7
 *  0b1..Selecting Pad: GPIO_IO19 for Mode: ALT1
 */
#define IOMUXC_SAI3_IPP_IND_SAI_RXSYNC_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SAI3_IPP_IND_SAI_RXSYNC_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_SAI3_IPP_IND_SAI_RXSYNC_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name SAI4_IPP_IND_SAI_RXBCLK_SELECT_INPUT - SAI4_IPP_IND_SAI_RXBCLK_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_SAI4_IPP_IND_SAI_RXBCLK_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_SAI4_IPP_IND_SAI_RXBCLK_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: ENET2_RD0 for Mode: ALT3
 *  0b1..Selecting Pad: XSPI1_SS0_B for Mode: ALT2
 */
#define IOMUXC_SAI4_IPP_IND_SAI_RXBCLK_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SAI4_IPP_IND_SAI_RXBCLK_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_SAI4_IPP_IND_SAI_RXBCLK_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name SAI4_IPP_IND_SAI_RXDATA_SELECT_INPUT_0 - SAI4_IPP_IND_SAI_RXDATA_SELECT_INPUT_0 DAISY Register */
/*! @{ */

#define IOMUXC_SAI4_IPP_IND_SAI_RXDATA_SELECT_INPUT_0_DAISY_MASK (0x1U)
#define IOMUXC_SAI4_IPP_IND_SAI_RXDATA_SELECT_INPUT_0_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: ENET2_RD1 for Mode: ALT3
 *  0b1..Selecting Pad: XSPI1_DATA3 for Mode: ALT2
 */
#define IOMUXC_SAI4_IPP_IND_SAI_RXDATA_SELECT_INPUT_0_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SAI4_IPP_IND_SAI_RXDATA_SELECT_INPUT_0_DAISY_SHIFT)) & IOMUXC_SAI4_IPP_IND_SAI_RXDATA_SELECT_INPUT_0_DAISY_MASK)
/*! @} */

/*! @name SAI4_IPP_IND_SAI_RXSYNC_SELECT_INPUT - SAI4_IPP_IND_SAI_RXSYNC_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_SAI4_IPP_IND_SAI_RXSYNC_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_SAI4_IPP_IND_SAI_RXSYNC_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: ENET2_RXC for Mode: ALT3
 *  0b1..Selecting Pad: XSPI1_SCLK for Mode: ALT2
 */
#define IOMUXC_SAI4_IPP_IND_SAI_RXSYNC_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SAI4_IPP_IND_SAI_RXSYNC_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_SAI4_IPP_IND_SAI_RXSYNC_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name SAI4_IPP_IND_SAI_TXBCLK_SELECT_INPUT - SAI4_IPP_IND_SAI_TXBCLK_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_SAI4_IPP_IND_SAI_TXBCLK_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_SAI4_IPP_IND_SAI_TXBCLK_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: ENET2_TD1 for Mode: ALT3
 *  0b1..Selecting Pad: XSPI1_DATA0 for Mode: ALT2
 */
#define IOMUXC_SAI4_IPP_IND_SAI_TXBCLK_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SAI4_IPP_IND_SAI_TXBCLK_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_SAI4_IPP_IND_SAI_TXBCLK_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name SAI4_IPP_IND_SAI_TXSYNC_SELECT_INPUT - SAI4_IPP_IND_SAI_TXSYNC_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_SAI4_IPP_IND_SAI_TXSYNC_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_SAI4_IPP_IND_SAI_TXSYNC_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: ENET2_TD2 for Mode: ALT3
 *  0b1..Selecting Pad: XSPI1_DATA1 for Mode: ALT2
 */
#define IOMUXC_SAI4_IPP_IND_SAI_TXSYNC_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SAI4_IPP_IND_SAI_TXSYNC_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_SAI4_IPP_IND_SAI_TXSYNC_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name SAI5_IPP_IND_SAI_RXBCLK_SELECT_INPUT - SAI5_IPP_IND_SAI_RXBCLK_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_SAI5_IPP_IND_SAI_RXBCLK_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_SAI5_IPP_IND_SAI_RXBCLK_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: SD3_DATA0 for Mode: ALT3
 *  0b1..Selecting Pad: XSPI1_SS1_B for Mode: ALT1
 */
#define IOMUXC_SAI5_IPP_IND_SAI_RXBCLK_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SAI5_IPP_IND_SAI_RXBCLK_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_SAI5_IPP_IND_SAI_RXBCLK_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_0 - SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_0 DAISY Register */
/*! @{ */

#define IOMUXC_SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_0_DAISY_MASK (0x1U)
#define IOMUXC_SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_0_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: SD3_CLK for Mode: ALT3
 *  0b1..Selecting Pad: XSPI1_DATA7 for Mode: ALT1
 */
#define IOMUXC_SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_0_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_0_DAISY_SHIFT)) & IOMUXC_SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_0_DAISY_MASK)
/*! @} */

/*! @name SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_1 - SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_1 DAISY Register */
/*! @{ */

#define IOMUXC_SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_1_DAISY_MASK (0x1U)
#define IOMUXC_SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_1_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: SD3_DATA1 for Mode: ALT2
 *  0b1..Selecting Pad: XSPI1_DATA4 for Mode: ALT2
 */
#define IOMUXC_SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_1_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_1_DAISY_SHIFT)) & IOMUXC_SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_1_DAISY_MASK)
/*! @} */

/*! @name SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_2 - SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_2 DAISY Register */
/*! @{ */

#define IOMUXC_SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_2_DAISY_MASK (0x1U)
#define IOMUXC_SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_2_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: SD3_DATA2 for Mode: ALT2
 *  0b1..Selecting Pad: XSPI1_DATA5 for Mode: ALT2
 */
#define IOMUXC_SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_2_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_2_DAISY_SHIFT)) & IOMUXC_SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_2_DAISY_MASK)
/*! @} */

/*! @name SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_3 - SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_3 DAISY Register */
/*! @{ */

#define IOMUXC_SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_3_DAISY_MASK (0x1U)
#define IOMUXC_SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_3_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: SD3_DATA3 for Mode: ALT2
 *  0b1..Selecting Pad: XSPI1_DATA6 for Mode: ALT2
 */
#define IOMUXC_SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_3_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_3_DAISY_SHIFT)) & IOMUXC_SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_3_DAISY_MASK)
/*! @} */

/*! @name SAI5_IPP_IND_SAI_RXSYNC_SELECT_INPUT - SAI5_IPP_IND_SAI_RXSYNC_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_SAI5_IPP_IND_SAI_RXSYNC_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_SAI5_IPP_IND_SAI_RXSYNC_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: SD3_CMD for Mode: ALT3
 *  0b1..Selecting Pad: XSPI1_DQS for Mode: ALT1
 */
#define IOMUXC_SAI5_IPP_IND_SAI_RXSYNC_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SAI5_IPP_IND_SAI_RXSYNC_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_SAI5_IPP_IND_SAI_RXSYNC_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name SAI5_IPP_IND_SAI_TXBCLK_SELECT_INPUT - SAI5_IPP_IND_SAI_TXBCLK_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_SAI5_IPP_IND_SAI_TXBCLK_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_SAI5_IPP_IND_SAI_TXBCLK_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: SD3_DATA3 for Mode: ALT3
 *  0b1..Selecting Pad: XSPI1_DATA6 for Mode: ALT1
 */
#define IOMUXC_SAI5_IPP_IND_SAI_TXBCLK_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SAI5_IPP_IND_SAI_TXBCLK_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_SAI5_IPP_IND_SAI_TXBCLK_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name SAI5_IPP_IND_SAI_TXSYNC_SELECT_INPUT - SAI5_IPP_IND_SAI_TXSYNC_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_SAI5_IPP_IND_SAI_TXSYNC_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_SAI5_IPP_IND_SAI_TXSYNC_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: SD3_DATA2 for Mode: ALT3
 *  0b1..Selecting Pad: XSPI1_DATA5 for Mode: ALT1
 */
#define IOMUXC_SAI5_IPP_IND_SAI_TXSYNC_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_SAI5_IPP_IND_SAI_TXSYNC_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_SAI5_IPP_IND_SAI_TXSYNC_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name SPDIF_I_SELECT_INPUT - SPDIF_I_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_SPDIF_I_SELECT_INPUT_DAISY_MASK   (0x3U)
#define IOMUXC_SPDIF_I_SELECT_INPUT_DAISY_SHIFT  (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b00..Selecting Pad: ENET2_RD1 for Mode: ALT1
 *  0b01..Selecting Pad: ENET2_RD3 for Mode: ALT2
 *  0b10..Selecting Pad: GPIO_IO22 for Mode: ALT2
 */
#define IOMUXC_SPDIF_I_SELECT_INPUT_DAISY(x)     (((uint32_t)(((uint32_t)(x)) << IOMUXC_SPDIF_I_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_SPDIF_I_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name USDHC3_IPP_CARD_CLK_IN_SELECT_INPUT - USDHC3_IPP_CARD_CLK_IN_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_USDHC3_IPP_CARD_CLK_IN_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_USDHC3_IPP_CARD_CLK_IN_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO22 for Mode: ALT1
 *  0b1..Selecting Pad: SD3_CLK for Mode: ALT0
 */
#define IOMUXC_USDHC3_IPP_CARD_CLK_IN_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_USDHC3_IPP_CARD_CLK_IN_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_USDHC3_IPP_CARD_CLK_IN_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name USDHC3_IPP_CMD_IN_SELECT_INPUT - USDHC3_IPP_CMD_IN_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_USDHC3_IPP_CMD_IN_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_USDHC3_IPP_CMD_IN_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO23 for Mode: ALT1
 *  0b1..Selecting Pad: SD3_CMD for Mode: ALT0
 */
#define IOMUXC_USDHC3_IPP_CMD_IN_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_USDHC3_IPP_CMD_IN_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_USDHC3_IPP_CMD_IN_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name USDHC3_IPP_DAT0_IN_SELECT_INPUT - USDHC3_IPP_DAT0_IN_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_USDHC3_IPP_DAT0_IN_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_USDHC3_IPP_DAT0_IN_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO24 for Mode: ALT1
 *  0b1..Selecting Pad: SD3_DATA0 for Mode: ALT0
 */
#define IOMUXC_USDHC3_IPP_DAT0_IN_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_USDHC3_IPP_DAT0_IN_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_USDHC3_IPP_DAT0_IN_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name USDHC3_IPP_DAT1_IN_SELECT_INPUT - USDHC3_IPP_DAT1_IN_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_USDHC3_IPP_DAT1_IN_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_USDHC3_IPP_DAT1_IN_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO25 for Mode: ALT1
 *  0b1..Selecting Pad: SD3_DATA1 for Mode: ALT0
 */
#define IOMUXC_USDHC3_IPP_DAT1_IN_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_USDHC3_IPP_DAT1_IN_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_USDHC3_IPP_DAT1_IN_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name USDHC3_IPP_DAT2_IN_SELECT_INPUT - USDHC3_IPP_DAT2_IN_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_USDHC3_IPP_DAT2_IN_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_USDHC3_IPP_DAT2_IN_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO26 for Mode: ALT1
 *  0b1..Selecting Pad: SD3_DATA2 for Mode: ALT0
 */
#define IOMUXC_USDHC3_IPP_DAT2_IN_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_USDHC3_IPP_DAT2_IN_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_USDHC3_IPP_DAT2_IN_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name USDHC3_IPP_DAT3_IN_SELECT_INPUT - USDHC3_IPP_DAT3_IN_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_USDHC3_IPP_DAT3_IN_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_USDHC3_IPP_DAT3_IN_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: GPIO_IO27 for Mode: ALT1
 *  0b1..Selecting Pad: SD3_DATA3 for Mode: ALT0
 */
#define IOMUXC_USDHC3_IPP_DAT3_IN_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_USDHC3_IPP_DAT3_IN_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_USDHC3_IPP_DAT3_IN_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name JTAG_MUX_TCK_SELECT_INPUT - JTAG_MUX_TCK_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_JTAG_MUX_TCK_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_JTAG_MUX_TCK_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: DAP_TCLK_SWCLK for Mode: ALT0
 *  0b1..Selecting Pad: GPIO_IO25 for Mode: ALT5
 */
#define IOMUXC_JTAG_MUX_TCK_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_JTAG_MUX_TCK_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_JTAG_MUX_TCK_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name JTAG_MUX_TDI_SELECT_INPUT - JTAG_MUX_TDI_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_JTAG_MUX_TDI_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_JTAG_MUX_TDI_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: DAP_TDI for Mode: ALT0
 *  0b1..Selecting Pad: GPIO_IO26 for Mode: ALT5
 */
#define IOMUXC_JTAG_MUX_TDI_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_JTAG_MUX_TDI_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_JTAG_MUX_TDI_SELECT_INPUT_DAISY_MASK)
/*! @} */

/*! @name JTAG_MUX_TMS_SELECT_INPUT - JTAG_MUX_TMS_SELECT_INPUT DAISY Register */
/*! @{ */

#define IOMUXC_JTAG_MUX_TMS_SELECT_INPUT_DAISY_MASK (0x1U)
#define IOMUXC_JTAG_MUX_TMS_SELECT_INPUT_DAISY_SHIFT (0U)
/*! DAISY - Selecting Pads Involved in Daisy Chain.
 *  0b0..Selecting Pad: DAP_TMS_SWDIO for Mode: ALT0
 *  0b1..Selecting Pad: GPIO_IO27 for Mode: ALT5
 */
#define IOMUXC_JTAG_MUX_TMS_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x)) << IOMUXC_JTAG_MUX_TMS_SELECT_INPUT_DAISY_SHIFT)) & IOMUXC_JTAG_MUX_TMS_SELECT_INPUT_DAISY_MASK)
/*! @} */


/*!
 * @}
 */ /* end of group IOMUXC_Register_Masks */


/* IOMUXC - Peripheral instance base addresses */
/** Peripheral IOMUXC base address */
#define IOMUXC_BASE                             (0x443C0000u)
/** Peripheral IOMUXC base pointer */
#define IOMUXC                                  ((IOMUXC_Type *)IOMUXC_BASE)
/** Array initializer of IOMUXC peripheral base addresses */
#define IOMUXC_BASE_ADDRS                        { IOMUXC_BASE }
/** Array initializer of IOMUXC peripheral base pointers */
#define IOMUXC_BASE_PTRS                         { IOMUXC }

/*!
 * @}
 */ /* end of group IOMUXC_Peripheral_Access_Layer */

#endif  /* #if !defined(MIMX95_IOMUXC_H_) */
